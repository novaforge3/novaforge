diff -rNU5 mantisbt-1.2.5/account_page.php mantis_ard/account_page.php
--- mantisbt-1.2.5/account_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/account_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -61,10 +61,11 @@
 	# and prefixes it with u_
 	$row = user_get_row( auth_get_current_user_id() );
 	extract( $row, EXTR_PREFIX_ALL, 'u' );
 
 	$t_ldap = ( LDAP == config_get( 'login_method' ) );
+	$t_cas_auth = ( CAS_AUTH == config_get( 'login_method' ) );
 
 	# In case we're using LDAP to get the email address... this will pull out
 	#  that version instead of the one in the DB
 	$u_email = user_get_email( $u_id, $u_username );
 
@@ -185,10 +186,14 @@
 		<?php
 			// With LDAP
 			if ( $t_ldap && ON == config_get( 'use_ldap_email' ) ) {
 				echo string_display_line( $u_email );
 			}
+			// With CAS AUTH
+			else if ( $t_cas_auth ) {
+				echo string_display_line( $u_email );
+			}
 			// Without LDAP
 			else {
 				$t_show_update_button = true;
 				print_email_input( 'email', $u_email );
 			}
@@ -205,10 +210,14 @@
 		<?php
 			// With LDAP
 			if ( $t_ldap && ON == config_get( 'use_ldap_realname' ) ) {
 				echo string_display_line( ldap_realname_from_username( $u_username ) );
 			}
+			// With CAS AUTH
+			else if ( $t_cas_auth ) {
+				echo string_display_line( $u_username );
+			}
 			// Without LDAP
 			else {
 				$t_show_update_button = true;
 		?>
 			<input type="text" size="32" maxlength="<?php echo REALLEN;?>" name="realname" value="<?php echo string_attribute( $u_realname ) ?>" />
diff -rNU5 mantisbt-1.2.5/api/soap/mantisconnect.php mantis_ard/api/soap/mantisconnect.php
--- mantisbt-1.2.5/api/soap/mantisconnect.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/api/soap/mantisconnect.php	2013-03-27 11:11:16.000000000 +0100
@@ -11,10 +11,13 @@
 // See issue #11868 for details
 define( 'COMPRESSION_DISABLED', true);
 ini_set( 'zlib.output_compression', false );
 
 set_include_path( '../../library' );
+
+//Need because of php version used by Novaforge
+date_default_timezone_set('Europe/Paris');
 require_once( 'nusoap/nusoap.php' );
 
 # create server
 $l_oServer = new soap_server();
 
@@ -29,10 +32,11 @@
 // WS-I Basic Profile requires UTF-8 or UTF-16 as the encoding for interoperabilty
 // reasons.  This will correctly handle a large number of languages besides English.
 $l_oServer->xml_encoding = "UTF-8";
 $l_oServer->soap_defencoding = "UTF-8";
 $l_oServer->decode_utf8 = false;
+$l_oServer->style = 'document';
 
 ###
 ###  PUBLIC TYPES
 ###
 
@@ -88,11 +92,12 @@
 	'',
 	array(
 		'id'		=>	array( 'name' => 'id',			'type' => 'xsd:integer',	'minOccurs' => '0'),
 		'name'		=>	array( 'name' => 'name',		'type' => 'xsd:string',	'minOccurs' => '0'),
 		'real_name'	=>	array( 'name' => 'real_name',	'type' => 'xsd:string',	'minOccurs' => '0'),
-		'email'		=>	array( 'name' => 'email',		'type' => 'xsd:string',	'minOccurs' => '0')
+		'email'		=>	array( 'name' => 'email',		'type' => 'xsd:string',	'minOccurs' => '0'),
+		'access'	=>	array( 'name' => 'access',		'type' => 'xsd:integer','minOccurs' => '0')
 	)
 );
 
 ### AccountDataArray
 $l_oServer->wsdl->addComplexType(
@@ -354,10 +359,11 @@
 	'struct',
 	'all',
 	'',
 	array(
 		'id'			=>	array( 'name' => 'id',			'type' => 'xsd:integer',	'minOccurs' => '0' ),
+		'parent_id'		=>	array( 'name' => 'parent_id',	'type' => 'xsd:integer',	'minOccurs' => '0' ),
 		'name'			=>	array( 'name' => 'name',		'type' => 'xsd:string',	'minOccurs' => '0' ),
 		'status'		=>	array( 'name' => 'status',		'type' => 'tns:ObjectRef',	'minOccurs' => '0' ),
 		'enabled'		=>	array( 'name' => 'enabled',		'type' => 'xsd:boolean',	'minOccurs' => '0' ),
 		'view_state'	=>	array( 'name' => 'view_state',	'type' => 'tns:ObjectRef',	'minOccurs' => '0' ),
 		'access_min'	=>	array( 'name' => 'access_min',	'type' => 'tns:ObjectRef',	'minOccurs' => '0' ),
@@ -463,11 +469,11 @@
 		'valid_regexp'		=>	array( 'name' => 'valid_regexp',	'type' => 'xsd:string', 	'minOccurs' => '0'),
 		'access_level_r'	=>	array( 'name' => 'access_level_r',	'type' => 'xsd:integer', 	'minOccurs' => '0'),
 		'access_level_rw'	=>	array( 'name' => 'access_level_rw',	'type' => 'xsd:integer', 	'minOccurs' => '0'),
 		'length_min'		=>	array( 'name' => 'length_min',		'type' => 'xsd:integer', 	'minOccurs' => '0'),
 		'length_max'		=>	array( 'name' => 'length_max',		'type' => 'xsd:integer', 	'minOccurs' => '0'),
-		'advanced'              =>      array( 'name' => 'advanced',            'type' => 'xsd:boolean',        'minOccurs' => '0'),
+		'advanced'          =>  array( 'name' => 'advanced',        'type' => 'xsd:boolean',    'minOccurs' => '0'),
 		'display_report'	=>	array( 'name' => 'display_report',	'type' => 'xsd:boolean', 	'minOccurs' => '0'),
 		'display_update'	=>	array( 'name' => 'display_update',	'type' => 'xsd:boolean', 	'minOccurs' => '0'),
 		'display_resolved'	=>	array( 'name' => 'display_resolved','type' => 'xsd:boolean', 	'minOccurs' => '0'),
 		'display_closed'	=>	array( 'name' => 'display_closed',	'type' => 'xsd:boolean', 	'minOccurs' => '0'),
 		'require_report'	=>	array( 'name' => 'require_report',	'type' => 'xsd:boolean', 	'minOccurs' => '0'),
@@ -573,11 +579,11 @@
 	),
 	array(
 		'return'	=>	'tns:ObjectRefArray'
 	),
 	$t_namespace,
-	false, false, false,
+	false, false, true,
 	'Get the enumeration for statuses.'
 );
 
 ### mc_enum_priorities
 $l_oServer->register( 'mc_enum_priorities',
@@ -968,10 +974,77 @@
 	false, false, false,
 	'Get the data for the specified issue attachment.'
 );
 
 ###
+###  PUBLIC METHODS (defined in mc_account_api.php)
+###
+
+### mc_account_add
+$l_oServer->register( 'mc_account_add',
+	array(
+		'username' => 'xsd:string',
+		'password' => 'xsd:string',
+		'account' => 'tns:AccountData',
+		'account_password' => 'xsd:string'
+	),
+	array(
+		'return' => 'xsd:integer'
+	),
+	$t_namespace,
+	false, false, false,
+	'Add a new user to the tracker (must have admin privileges)'
+);
+
+### mc_account_get
+$l_oServer->register( 'mc_account_get',
+	array(
+		'username' => 'xsd:string',
+		'password' => 'xsd:string',
+		'account_username' => 'xsd:string'
+	),
+	array(
+		'return' => 'xsd:integer'
+	),
+	$t_namespace,
+	false, false, false,
+	'Get a user account id from username on the tracker (must have admin privileges)'
+);
+
+### mc_account_update
+$l_oServer->register( 'mc_account_update',
+	array(
+		'username' => 'xsd:string',
+		'password' => 'xsd:string',
+		'account_id' => 'xsd:integer',
+		'account' => 'tns:AccountData',
+		'account_password' => 'xsd:string'
+	),
+	array(
+		'return' => 'xsd:boolean'
+	),
+	$t_namespace,
+	false, false, false,
+	'Update a user account on the tracker (must have admin privileges)'
+);
+
+### mc_account_delete
+$l_oServer->register( 'mc_account_delete',
+	array(
+		'username' => 'xsd:string',
+		'password' => 'xsd:string',
+		'user_id'	=>	'xsd:integer',
+	),
+	array(
+		'return' => 'xsd:boolean'
+	),
+	$t_namespace,
+	false, false, false,
+	'Delete a user account on the tracker (must have admin privileges)'
+);
+
+###
 ###  PUBLIC METHODS (defined in mc_project_api.php)
 ###
 
 ### mc_project_add
 $l_oServer->register( 'mc_project_add',
@@ -1066,10 +1139,42 @@
 	$t_namespace,
 	false, false, false,
 	'Get the issue headers that match the specified project id and paging details.'
 );
 
+### mc_project_add_user
+$l_oServer->register( 'mc_project_add_user',
+	array(
+		'username'	=>	'xsd:string',
+		'password'	=>	'xsd:string',
+		'project_id'	=>	'xsd:integer',
+		'user_id'	=>	'xsd:integer',
+		'access'	=>	'xsd:integer'
+	),
+	array(
+		'return'	=>	'xsd:integer'
+	),
+	$t_namespace,
+	false, false, false,
+	'Add a user to a project with access level.'
+);
+### mc_project_remove_user
+$l_oServer->register( 'mc_project_remove_user',
+	array(
+		'username'	=>	'xsd:string',
+		'password'	=>	'xsd:string',
+		'project_id'	=>	'xsd:integer',
+		'user_id'	=>	'xsd:integer'
+	),
+	array(
+		'return'	=>	'xsd:boolean'
+	),
+	$t_namespace,
+	false, false, false,
+	'Remove a user from a project.'
+);
+
 ### mc_project_get_users
 $l_oServer->register( 'mc_project_get_users',
 	array(
 		'username'	=>	'xsd:string',
 		'password'	=>	'xsd:string',
@@ -1096,10 +1201,24 @@
 	$t_namespace,
 	false, false, false,
 	'Get the list of projects that are accessible to the logged in user.'
 );
 
+### mc_projects_get_names_user_accessible
+$l_oServer->register( 'mc_projects_get_names_user_accessible',
+	array(
+		'username'	=>	'xsd:string',
+		'password'	=>	'xsd:string'
+	),
+	array(
+		'return'	=>	'tns:ProjectDataArray'
+	),
+	$t_namespace,
+	false, false, false,
+	'Get the list of name/id of projects that are accessible to the logged in user.'
+);
+
 ### mc_project_get_categories
 $l_oServer->register( 'mc_project_get_categories',
 	array(
 		'username'		=>	'xsd:string',
 		'password'		=>	'xsd:string',
@@ -1438,10 +1557,108 @@
 	false, false, false,
 	'Notifies MantisBT of a check-in for the issue with the specified id.'
 );
 
 ###
+###  PUBLIC METHODS (defined in mc_management_api.php)
+###
+
+### mc_configure_management
+$l_oServer->register( 'mc_configure_management',
+	array(
+		'username'		=>	'xsd:string',
+		'password'		=>	'xsd:string',
+		'project_name'		=>	'xsd:string'
+	),
+	array(
+		'return'	=>	'xsd:boolean'
+	),
+	$t_namespace,
+	false, false, false,
+	'Configure the mantis in management way.'
+);
+
+### mc_management_update
+$l_oServer->register( 'mc_management_update',
+	array(
+        'username' => 'xsd:string',
+        'password' => 'xsd:string',
+        'project_id' => 'xsd:integer',
+        'project' => 'tns:ProjectData'
+	),
+	array(
+		'return'	=>	'xsd:boolean'
+	),
+	$t_namespace,
+	false, false, false,
+	'Update mantis management configuration.'
+);
+
+### mc_management_delete
+$l_oServer->register( 'mc_management_delete',
+	array(
+		'username'		=>	'xsd:string',
+		'password'		=>	'xsd:string',
+		'project_id'		=>	'xsd:integer'
+	),
+	array(
+		'return'	=>	'xsd:boolean'
+	),
+	$t_namespace,
+	false, false, false,
+	'Delete mantis management configuration.'
+);
+
+### mc_management_add_user
+$l_oServer->register( 'mc_management_add_user',
+	array(
+		'username'	=>	'xsd:string',
+		'password'	=>	'xsd:string',
+		'project_id'	=>	'xsd:integer',
+		'user_id'	=>	'xsd:integer',
+		'access'	=>	'xsd:integer'
+	),
+	array(
+		'return'	=>	'xsd:integer'
+	),
+	$t_namespace,
+	false, false, false,
+	'Add users in mantis management.'
+);
+
+### mc_management_remove_user
+$l_oServer->register( 'mc_management_remove_user',
+	array(
+		'username'	=>	'xsd:string',
+		'password'	=>	'xsd:string',
+		'project_id'	=>	'xsd:integer',
+		'user_id'	=>	'xsd:integer'
+	),
+	array(
+		'return'	=>	'xsd:boolean'
+	),
+	$t_namespace,
+	false, false, false,
+	'Remove users in mantis management.'
+);
+
+### mc_get_all_issues_by_project
+$l_oServer->register( 'mc_get_all_issues_by_project',
+	array(
+		'username'		=>	'xsd:string',
+		'password'		=>	'xsd:string',
+		'project_name'		=>	'xsd:string'
+	),
+	array(
+		'return' => 'tns:IssueDataArray'
+	),
+	$t_namespace,
+	false, false, false,
+	'Get all project param bugs.'
+);
+
+###
 ###  IMPLEMENTATION
 ###
 
 /**
  * Checks if the request for the webservice is a documentation request (eg:
diff -rNU5 mantisbt-1.2.5/api/soap/mc_account_api.php mantis_ard/api/soap/mc_account_api.php
--- mantisbt-1.2.5/api/soap/mc_account_api.php	2011-04-05 20:24:16.000000000 +0200
+++ mantis_ard/api/soap/mc_account_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -35,5 +35,169 @@
         $t_result[] = mci_account_get_array_by_id( $t_user_id );
     }
     
     return $t_result;
 }
+
+/** 
+* Add a new user.
+*
+* @param string $p_username  The name of the user trying to create an account.
+* @param string $p_password  The password of the user.
+* @param Array $p_user A new AccountData structure
+* @return integer the new users's users_id
+*/
+function mc_account_add( $p_username, $p_password, $p_user, $p_pass ) {
+	$t_user_id = mci_check_login( $p_username, $p_password );               
+	if ( $t_user_id === false ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'Username/password combination was incorrect');
+	}
+
+	if ( !mci_has_administrator_access( $t_user_id ) ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+
+	extract( $p_user, EXTR_PREFIX_ALL, 'v');
+
+	// validate user object
+	if ( is_blank($v_name) ) return new soap_fault('Client', '', 'Mandatory field "name" was missing');
+	if ( is_blank($v_real_name) ) return new soap_fault('Client', '', 'Mandatory field "real_name" was missing');
+	if ( is_blank($v_email) ) return new soap_fault('Client', '', 'Mandatory field "email" was missing');
+
+	if ( !user_is_name_valid( $v_name ) ) return new soap_fault( 'Client', '', 'user name invalid');
+	if ( !user_is_name_unique( $v_name ) ) return new soap_fault( 'Client', '', 'user name exists');
+	if ( !user_is_realname_valid( $v_real_name ) ) return new soap_fault( 'Client', '', 'real name invalid');
+	if ( !email_is_valid( $v_email ) ) return new soap_fault( 'Client', '', 'Email invalid');
+
+	// set defaults
+	if ( is_null( $v_access ) ) $v_access = VIEWER;
+
+	// create user account and get it's id
+	user_create($v_name, $p_pass, $v_email, $v_access, false, true, $v_real_name);
+	$t_user_id = user_get_id_by_name($v_name);
+
+	// return id of new user back to caller
+	return $t_user_id;
+}
+
+/** 
+* Get user id from username
+*
+* @param string $p_username  The name of the user trying to create an account.
+* @param string $p_password  The password of the user.
+* @param string $p_user_account The username of the user account wanted
+* @return account's id
+
+*/
+function mc_account_get( $p_username, $p_password, $p_account_username ) {
+	$t_user_id = mci_check_login( $p_username, $p_password );               
+	if ( $t_user_id === false ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'Username/password combination was incorrect');
+	}
+
+	if ( !mci_has_administrator_access( $t_user_id ) ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+
+	if ( (is_null($p_account_username)) || (is_blank($p_account_username)) ) return new soap_fault('Client', '', 'Mandatory field "account_username" was missing');
+
+	//Get content user account information
+	$row = user_get_row_by_name($p_account_username);
+	$user_id = $row['id'];
+		
+	// Return whole information
+	return $user_id;
+}
+
+/** 
+* Update a user.
+*
+* @param string $p_username  The name of the user trying to create an account.
+* @param string $p_password  The password of the user.
+* @param integer $p_user_id A user's id
+* @param Array $p_user A new AccountData structure
+* @return boolean
+*/
+function mc_account_update( $p_username, $p_password, $p_user_id, $p_user, $p_pass ) {
+	$t_user_id = mci_check_login( $p_username, $p_password );               
+	if ( $t_user_id === false ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'Username/password combination was incorrect');
+	}
+
+	if ( !mci_has_administrator_access( $t_user_id ) ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+
+	if ( (is_null($p_user_id)) || (is_blank($p_user_id)) ) return new soap_fault('Client', '', 'Mandatory field "id" was missing');
+	//Add check if user exists
+	if ( !user_exists($p_user_id) ) return new soap_fault('Client', '', 'The user id doesn t exist');
+	
+	//Get content user account information
+	$row = user_get_row($p_user_id);
+	
+	//Check if username needs to be updated
+   	if ( (isset( $p_user['name'] )) && (!is_null($p_user['name'])) && (!is_blank($p_user['name'])) ) {
+    
+		if ( $row['username'] != $p_user['name'] ) {
+			if ( !user_is_name_valid( $p_user['name'] ) ) return new soap_fault( 'Client', '', 'user name invalid');
+			if ( !user_is_name_unique( $p_user['name'] ) ) return new soap_fault( 'Client', '', 'user name exists');
+			user_set_name( $p_user_id, $p_user['name'] );
+		}
+    	}
+	
+	//Check if real name needs to be updated
+   	if ( (isset( $p_user['real_name'] )) && (!is_null($p_user['real_name'])) && (!is_blank($p_user['real_name'])) ){
+		if ( $row['realname'] != $p_user['real_name']) {
+			if ( !user_is_realname_valid( $p_user['real_name']) ) return new soap_fault( 'Client', '', 'real name invalid');
+			user_set_realname( $p_user_id, $p_user['real_name']);
+		}
+	}
+	
+	//Check if email needs to be updated
+	if ( (isset( $p_user['email'] )) && (!is_null($p_user['email'])) && (!is_blank($p_user['email'])) ) {
+		if ( $row['email'] != $p_user['email'] ) {
+			if ( !email_is_valid( $p_user['email'] ) ) return new soap_fault( 'Client', '', 'Email invalid');
+			user_set_email( $p_user_id, $p_user['email'] );
+		}	
+	}
+	
+	//Check if access level needs to be updated
+	if ( (isset( $p_user['access'] )) &&(!is_null($p_user['access'])) && (!is_blank($p_user['access'])) && ($p_user['access'] != 0) ) {
+		if ( $row['access_level'] != $p_user['access'] ) {
+			user_set_field( $p_user_id, 'access_level', $p_user['access'] );
+		}
+	}
+	
+	//Check if password needs to be updated
+	if ( !is_blank($p_pass) ) {
+		user_set_password( $p_user_id, $p_pass, false );
+	}
+	
+	// return id of user back to caller
+	return true;
+}
+
+/** 
+* Delete a user.
+*
+* @param string $p_username  The name of the user trying to create an account.
+* @param string $p_password  The password of the user.
+* @param Array $p_id the uers_id
+* @return boolean about success
+*/
+function mc_account_delete( $p_username, $p_password, $p_user_id ) {
+	$t_user_id = mci_check_login( $p_username, $p_password );               
+	if ( $t_user_id === false ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'Username/password combination was incorrect');
+	}
+
+	if ( !mci_has_administrator_access( $t_user_id ) ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+
+	if ( (is_null($p_user_id)) || (is_blank($p_user_id)) ) return new soap_fault('Client', '', 'Mandatory field "id" was missing');
+		
+	user_delete( $p_user_id );
+	
+	return true;
+}
+
diff -rNU5 mantisbt-1.2.5/api/soap/mc_api.php mantis_ard/api/soap/mc_api.php
--- mantisbt-1.2.5/api/soap/mc_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/api/soap/mc_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -89,15 +89,15 @@
 
 	return $t_project_id;
 }
 
 function mci_get_project_status_id( $p_status ) {
-	return mci_get_enum_id_from_objectref( 'project_status', $p_status );
+	return mci_get_enum_id_from_objectref( 'status', $p_status );
 }
 
 function mci_get_project_view_state_id( $p_view_state ) {
-	return mci_get_enum_id_from_objectref( 'project_view_state', $p_view_state );
+	return mci_get_enum_id_from_objectref( 'view_state', $p_view_state );
 }
 
 function mci_get_user_id( $p_user ) {
 	$t_user_id = 0;
 
@@ -207,10 +207,24 @@
 	}
 
 	return $t_result;
 }
 
+# Gets the name/id of all sub-projects that are accessible to the specified user / project.
+function mci_user_get_names_accessible_subprojects( $p_user_id, $p_parent_project_id ) {
+	$t_result = array();
+	foreach( user_get_accessible_subprojects( $p_user_id, $p_parent_project_id ) as $t_subproject_id ) {
+		$t_subproject_row = project_cache_row( $t_subproject_id );
+		$t_subproject = array();
+		$t_subproject['id'] = $t_subproject_id;
+		$t_subproject['name'] = $t_subproject_row['name'];
+		$t_subproject['subprojects'] = mci_user_get_names_accessible_subprojects( $p_user_id, $t_subproject_id );
+		$t_result[] = $t_subproject;
+	}
+	return $t_result;
+}
+
 function translate_category_name_to_id( $p_category_name, $p_project_id ) {
 	if ( !isset( $p_category_name ) ) {
 		return 0;
 	}
 
diff -rNU5 mantisbt-1.2.5/api/soap/mc_config_defaults_inc.php mantis_ard/api/soap/mc_config_defaults_inc.php
--- mantisbt-1.2.5/api/soap/mc_config_defaults_inc.php	2011-04-05 20:24:16.000000000 +0200
+++ mantis_ard/api/soap/mc_config_defaults_inc.php	2013-03-27 11:11:16.000000000 +0100
@@ -29,10 +29,11 @@
 $g_mc_severity_enum_default_when_not_found = 0;
 $g_mc_status_enum_default_when_not_found = 0;
 $g_mc_resolution_enum_default_when_not_found = 0;
 $g_mc_projection_enum_default_when_not_found = 0;
 $g_mc_eta_enum_default_when_not_found = 0;
+$g_mc_view_state_enum_default_when_not_found = 50;
 
 # If ON and the supplied category is not found, then a SoapException will be raised.
 # (at the moment this value does not depend on the project).
 $g_mc_error_when_category_not_found = ON;
 
diff -rNU5 mantisbt-1.2.5/api/soap/mc_config_inc.php mantis_ard/api/soap/mc_config_inc.php
--- mantisbt-1.2.5/api/soap/mc_config_inc.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/api/soap/mc_config_inc.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,369 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+ 
+
+/****************************************
+ * Parent project management attributes *
+ ****************************************/
+$g_parent_project_description = 'Ce projet est le projet parent de pilotage.';
+
+
+/****************************
+ * Risk criteria attributes *
+ ****************************/
+$g_risk_criteria_categories = array('duration', 'integrity', 'management_commitment', 'team_commitment', 'effort', 'others');
+
+
+/********************************
+ * Subproject action attributes *
+ ********************************/
+$g_action_name = 'action';	
+$g_action_description = 'Ce projet est le sous-projet action.'; 
+#Fields
+$g_action_report_page_fields =  array('category_id', 'view_state', 'handler', 'priority', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_action_view_page_fields =  array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_action_print_page_fields =   array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_action_update_page_fields = array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_action_change_status_page_fields = array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_action_custom_fields =  array('responsable', 'estimate_end', 'reestimate_end' ,'real_end');
+#Priority
+$g_action_allow_no_priority = "ON";
+#Category
+$g_action_allow_no_category = "OFF";
+$g_action_categories = array('commitment_backlog', 'climb_backlog', 'management_backlog');
+#Status
+$g_action_fixed_status = "ON";
+$g_action_status = '10:new,20:progress,30:closed';
+$g_action_status_fixed = array('new', 'progress', 'closed');
+$g_action_status_colors = array( 'new'			=> '#fcbdbd', // red    (scarlet red #ef2929)
+		 'progress'		=> '#d2f5b0', // green  (chameleon   #8ae234)
+		 'closed'		=> '#c9ccc4'); // grey  (aluminum    #babdb6)
+#Status name
+$s_action_status_french = '10:nouveau,20:en cours,30:fermé';
+$s_action_status_english = '10:new,20:in progress,30:closed'; 
+#Status title
+$s_action_status_new_title_french = 'Nouvelle action';
+$s_action_status_new_title_english = 'New action';
+$s_action_status_progress_title_french = 'Action en cours';
+$s_action_status_progress_title_english = 'Action in progress';
+$s_action_status_closed_title_french = 'Action fermé';
+$s_action_status_closed_title_english = 'Action closed';
+#Status button
+$s_action_status_new_button_french = 'Nouvelle action';
+$s_action_status_new_button_english = 'New action';
+$s_action_status_progress_button_french = "Démarrer l\'action";
+$s_action_status_progress_button_english = 'Start action';
+$s_action_status_closed_button_french = "Fermer l\'action";
+$s_action_status_closed_button_english = 'Close action';
+#Status notification email
+#Status email
+$s_action_status_new_email_french = "L\'action suivante est maintenant à  l\'état « nouveau » (encore)";
+$s_action_status_new_email_english = 'The following action is now in status «ï¿½ new »';
+$s_action_status_progress_email_french = "L\'action suivante est maintenant  à  l\'état « en cours »";
+$s_action_status_progress_email_english = 'The following action is now in status «ï¿½ in progress »';
+$s_action_status_closed_email_french = "L\'action suivante a été fermé.";
+$s_action_status_closed_email_english = 'The following action has been closed';
+#Workflow
+
+
+/******************************
+ * Subproject risk attributes *
+ ******************************/
+$g_risk_name = 'risk';	
+$g_risk_description = 'Ce projet est le sous-projet risque.';
+#Fields
+$g_risk_report_page_fields =  array('category_id', 'view_state', 'handler', 'priority', 'severity', 'reproducibility', 
+	'summary', 'description', 'steps_to_reproduce', 'due_date', 'attachments');
+$g_risk_view_page_fields =  array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 'reporter', 
+	'handler', 'priority', 'severity', 'reproducibility', 'status', 'resolution', 'gravity', 'projection', 'eta', 'summary', 'description', 
+	'steps_to_reproduce', 'due_date', 'attachments');
+$g_risk_print_page_fields =  array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 'reporter', 
+	'handler', 'priority', 'severity', 'reproducibility', 'status', 'resolution', 'projection', 'eta', 'summary', 'description', 
+	'steps_to_reproduce', 'due_date', 'attachments');
+$g_risk_update_page_fields =  array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 'reporter', 
+	'handler', 'priority', 'severity', 'reproducibility', 'status', 'resolution', 'projection', 'eta', 'summary', 'description', 
+	'steps_to_reproduce', 'due_date', 'attachments');
+$g_risk_change_status_page_fields = array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 'reporter', 
+	'handler', 'priority', 'severity', 'reproducibility', 'status', 'resolution', 'projection', 'eta', 'summary', 'description', 
+	'steps_to_reproduce', 'due_date', 'attachments');
+$g_risk_custom_fields =  array('context', 'impact', 'reference', 'control', 'estimate_end', 'reestimate_end' ,'real_end');
+#Urgency
+$g_risk_urgencies = '10:urgency_none,20:urgency_month,30:urgency_fifteen,40:urgency_week,50:urgency_immediate';
+$g_default_bug_urgency = 10;
+$g_allow_no_urgency = "OFF";
+$s_risk_urgencies_french = '10:non urgent,20:dans le mois,30:dans la quinzaine,40:dans la semaine,50:immédiate';
+$s_risk_urgencies_english = '10:not urgent,20:in the month,30:in the fifteen,40:in the weed,50:immediate';
+$s_urgency_french = 'Urgence';
+$s_urgency_english = 'Urgency';
+#Impact	 
+$g_risk_impact = '10:minor,20:middle,30:important,40:major';
+$g_default_bug_impact = 10;
+$g_allow_no_impact = "OFF";
+$s_risk_impact_french =  '10:mineur [1],20:moyen [2],30:important [3],40:majeur [4]';
+$s_risk_impact_english = '10:minor [1],20:middle [2],30:important [3],40:major [4]';
+$s_impact_french = 'Impact';
+$s_impact_english = 'Impact';
+#Probability	 
+$g_risk_probability = '10:low,20:middle,30:high,40:vhigh';
+$g_default_bug_probability = 10;
+$g_allow_no_probability = "OFF";
+$s_risk_probability_french =  '10:faible [1],20:moyen [2],30:fort [3],40:très fort [4]';
+$s_risk_probability_english = '10:low [1],20:middle [2],30:high [3],40:very high [4]';
+$s_probability_french = 'Probabilité';
+$s_probability_english = 'Probability';
+#Trigger condition
+$g_default_bug_trigger_condition = '';
+$s_trigger_condition_french = 'Condition de déclenchement';
+$s_trigger_condition_english = 'Trigger condition';
+#Control
+$g_risk_control = array('control_vlow', 'control_low', 'control_middle', 'control_high', 'control_vhigh');
+#Category
+$g_risk_allow_no_category = "OFF";
+$g_risk_categories = array('functional', 'organizational', 'technical');
+#Status
+$g_risk_fixed_status = "ON";
+$g_risk_status = '10:new,20:progress,30:closed';
+$g_risk_status_fixed = array('new', 'progress', 'closed');
+$g_risk_status_colors = array( 'new'			=> '#fcbdbd', // red    (scarlet red #ef2929)
+		 'progress'		=> '#d2f5b0', // green  (chameleon   #8ae234)
+		 'closed'		=> '#c9ccc4'); // grey  (aluminum    #babdb6)
+#Status name
+$s_risk_status_french = '10:nouveau,20:en cours,30:fermé';
+$s_risk_status_english = '10:new,20:in progress,30:closed'; 
+#Status title
+$s_risk_status_new_title_french = 'Nouveau risque';
+$s_risk_status_new_title_english = 'New risk';
+$s_risk_status_progress_title_french = 'Risque en cours';
+$s_risk_status_progress_title_english = 'Risk in progress';
+$s_risk_status_closed_title_french = 'Risque fermé';
+$s_risk_status_closed_title_english = 'Risk closed';
+#Status button
+$s_risk_status_new_button_french = 'Nouveau risque';
+$s_risk_status_new_button_english = 'New risk';
+$s_risk_status_progress_button_french = 'Démarrer le risque';
+$s_risk_status_progress_button_english = 'Start risk';
+$s_risk_status_closed_button_french = 'Fermer le risque';
+$s_risk_status_closed_button_english = 'Close risk';
+#Status notification email
+#Status email
+$s_risk_status_new_email_french = "Le risque suivant est maintenant à  l\'état « nouveau » (encore)";
+$s_risk_status_new_email_english = 'The following risk is now in status «ï¿½ new »';
+$s_risk_status_progress_email_french = "Le risque suivant est maintenant  à  l\'état « en cours »";
+$s_risk_status_progress_email_english = 'The following risk is now in status «ï¿½ in progress »';
+$s_risk_status_closed_email_french = 'Le risque suivant a été fermé.';
+$s_risk_status_closed_email_english = 'The following risk has been closed';
+#Workflow
+
+
+/**********************************
+ * Subproject decision attributes *
+ **********************************/ 
+$g_decision_name = 'decision';
+$g_decision_description = 'Ce projet est le sous-projet décision.'; 
+#Fields
+$g_decision_report_page_fields =  array('category_id', 'view_state', 'handler', 'priority', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_decision_view_page_fields =  array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_decision_print_page_fields =   array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_decision_update_page_fields = array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_decision_change_status_page_fields = array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_decision_custom_fields =  array('responsable', 'estimate_end', 'reestimate_end' ,'real_end');
+#Priority
+$g_decision_allow_no_priority = "ON";
+#Category
+$g_decision_allow_no_category = "OFF";
+$g_decision_categories = array('commitment_backlog', 'climb_backlog', 'management_backlog');
+#Status
+$g_decision_fixed_status = "ON";
+$g_decision_status = '10:new,20:progress,30:tovalidate,40:validate,50:invalidate,60:cancel,70:closed';
+$g_decision_status_fixed = array('new', 'progress', 'tovalidate', 'validate', 'invalidate', 'cancel', 'closed');
+$g_decision_status_colors = array( 'new'			=> '#fcbdbd', // red    (scarlet red #ef2929)
+		 'progress'		=> '#d2f5b0', // green  (chameleon   #8ae234)
+		 'tovalidate'		=> '#c2dfff', // blue   (sky blue    #729fcf)
+		 'validate'		=> '#e3b7eb', // purple (plum        #75507b)
+		 'invalidate'	=> '#ffcd85', // orange (orango      #f57900)
+		 'cancel'	=> '#fff494', // yellow (butter      #fce94f)
+		 'closed'		=> '#c9ccc4'); // grey  (aluminum    #babdb6)
+#Status name
+$s_decision_status_french = '10:nouveau,20:en cours,30: à  valider,40:validé,50:invalidé,60:annulé,70:fermé';
+$s_decision_status_english = '10:new,20:in progress,30:to validate,40:validated,50:invalidated,60:canceled,70:closed'; 
+#Status title
+$s_decision_status_new_title_french = 'Nouvelle décision';
+$s_decision_status_new_title_english = 'New decision';
+$s_decision_status_progress_title_french = 'Décision en cours';
+$s_decision_status_progress_title_english = 'Decision in progress';
+$s_decision_status_tovalidate_title_french = 'Décision à  valider';
+$s_decision_status_tovalidate_title_english = 'Decision to validate';
+$s_decision_status_validate_title_french = 'Décision validée';
+$s_decision_status_validate_title_english = 'Decision validate';
+$s_decision_status_invalidate_title_french = 'Décision invalidée';
+$s_decision_status_invalidate_title_english = 'Decision invalidate';
+$s_decision_status_cancel_title_french = 'Décision annulée';
+$s_decision_status_cancel_title_english = 'Decision cancelled';
+$s_decision_status_closed_title_french = 'Décision fermé';
+$s_decision_status_closed_title_english = 'Decision closed';
+#Status button
+$s_decision_status_new_button_french = 'Nouvelle décision';
+$s_decision_status_new_button_english = 'New decision';
+$s_decision_status_progress_button_french = 'Démarrer la décision';
+$s_decision_status_progress_button_english = 'Start decision';
+$s_decision_status_tovalidate_button_french = 'Décision à  valider';
+$s_decision_status_tovalidate_button_english = 'Decision to validate';
+$s_decision_status_validate_button_french = 'Valider la décision';
+$s_decision_status_validate_button_english = 'Validate decision';
+$s_decision_status_invalidate_button_french = 'Invalider la décision';
+$s_decision_status_invalidate_button_english = 'Invalidate decision';
+$s_decision_status_cancel_button_french = 'Annuler la décision';
+$s_decision_status_cancel_button_english = 'Cancel decision';
+$s_decision_status_closed_button_french = 'Fermer la décision';
+$s_decision_status_closed_button_english = 'Close decision';
+#Status notification email
+#Status email
+$s_decision_status_new_email_french = "La décision suivante est maintenant à  l\'état « nouveau » (encore)";
+$s_decision_status_new_email_english = 'The following decision is now in status «ï¿½ new »';
+$s_decision_status_progress_email_french = "La décision suivante est maintenant  à  l\'état « en cours »";
+$s_decision_status_progress_email_english = 'The following decision is now in status «ï¿½ in progress »';
+$s_decision_status_tovalidate_email_french = 'La décision suivante est à  valider';
+$s_decision_status_tovalidate_email_english = 'The following decision has to be validate';
+$s_decision_status_validate_email_french = 'La décision suivante est validée';
+$s_decision_status_validate_email_english = 'The following decision has been validated';
+$s_decision_status_invalidate_email_french = 'La décision suivante est invalidée';
+$s_decision_status_invalidate_email_english = 'The following decision has been invalidated';
+$s_decision_status_cancel_email_french = 'La décision suivant est annulée';
+$s_decision_status_cancel_email_english = 'The following decision has been cancelled';
+$s_decision_status_closed_email_french = 'La décision suivante a été fermé.';
+$s_decision_status_closed_email_english = 'The following decision has been closed';
+
+
+/***********************************
+ * Subproject evolution attributes *
+ ***********************************/ 
+$g_evolution_name = 'evolution';
+$g_evolution_description = 'Ce projet est le sous-projet évolution.'; 
+#Fields
+$g_evolution_report_page_fields =  array('category_id', 'view_state', 'handler', 'priority', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_evolution_view_page_fields =  array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_evolution_print_page_fields =   array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_evolution_update_page_fields = array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_evolution_change_status_page_fields = array('id', 'project', 'category_id', 'view_state', 'date_submitted', 'last_updated', 
+	'reporter', 'handler', 'priority', 'status', 'projection', 'eta', 'summary', 'description', 
+	'due_date', 'attachments');
+$g_evolution_custom_fields =  array('charge', 'delivery', 'mep' ,'uc', 'it');
+#Priority
+$g_evolution_allow_no_priority = "ON";
+#Category
+$g_evolution_allow_no_category = "OFF";
+$g_evolution_categories = array('cig', 'ergonomy', 'general', 'business', 'archi', 'specific');
+#Status
+$g_evolution_fixed_status = "ON";
+$g_evolution_status = '10:new,20:waiting_encryption,30:waiting_moa,40:accepted,50:cancel,60:closed';
+$g_evolution_status_fixed = array('new', 'waiting_encryption', 'waiting_moa', 'accepted', 'cancel', 'closed');
+$g_evolution_status_colors = array( 'new'			=> '#fcbdbd', // red    (scarlet red #ef2929)
+		 'waiting_encryption'		=> '#d2f5b0', // green  (chameleon   #8ae234)
+		 'waiting_moa'		=> '#c2dfff', // blue   (sky blue    #729fcf)
+		 'accepted'		=> '#e3b7eb', // purple (plum        #75507b)
+		 'cancel'	=> '#ffcd85', 
+		 'closed'		=> '#c9ccc4'); // grey  (aluminum    #babdb6)
+#Status name
+$s_evolution_status_french = '10:nouveau,20:en attente de chiffrage,30:en attente MOA,40:accepté,50:annulé,60:fermé';
+$s_evolution_status_english = '10:new,20:waiting encryption,30:waiting MOA,40:accepted,50:canceled,60:closed'; 
+#Status title
+$s_evolution_status_new_title_french = 'Nouvelle évolution';
+$s_evolution_status_new_title_english = 'New evolution';
+$s_evolution_status_waiting_encryption_title_french = 'Evolution en attente de chiffrage';
+$s_evolution_status_waiting_encryption_title_english = 'Waiting encryption evolution';
+$s_evolution_status_waiting_moa_title_french = 'Evolution en attente MOA';
+$s_evolution_status_waiting_moa_title_english = 'Waiting MOA evolution';
+$s_evolution_status_accepted_title_french = 'Evolution acceptée';
+$s_evolution_status_accepted_title_english = 'Accepted evolution';
+$s_evolution_status_cancel_title_french = 'Evolution annulée';
+$s_evolution_status_cancel_title_english = 'Canceled evolution';
+$s_evolution_status_closed_title_french = 'Evolution fermée';
+$s_evolution_status_closed_title_english = 'Evolution closed';
+#Status button
+$s_evolution_status_new_button_french = 'Nouvelle évolution';
+$s_evolution_status_new_button_english = 'New evolution';
+$s_evolution_status_waiting_encryption_button_french = "Mettre en attente de chiffrage l\'évolution";
+$s_evolution_status_waiting_encryption_button_english = 'Put the evolution pending encryption';
+$s_evolution_status_waiting_moa_button_french = "Mettre en attente MOA l\'évolution";
+$s_evolution_status_waiting_moa_button_english = 'Put the evolution pending MOA';
+$s_evolution_status_accepted_button_french = "Accepter l\'évolution";
+$s_evolution_status_accepted_button_english = 'Accept evolution';
+$s_evolution_status_cancel_button_french = "Annuler l\'évolution";
+$s_evolution_status_cancel_button_english = 'Cancel evolution';
+$s_evolution_status_closed_button_french = 'Fermer l\'évolution';
+$s_evolution_status_closed_button_english = 'Close evolution';
+#Status email
+$s_evolution_status_new_email_french = "L\'évolution suivante est maintenant à  l\'état « nouveau » (encore)";
+$s_evolution_status_new_email_english = 'The following evolution is now in status «ï¿½ new »';
+$s_evolution_status_waiting_encryption_email_french = "L\'évolution suivante est en attente de chiffrage";
+$s_evolution_status_waiting_encryption_email_english = 'The following evolution is pending encryption';
+$s_evolution_status_waiting_moa_email_french = "L\'évolution suivante est en attente MOA";
+$s_evolution_status_waiting_moa_email_english = 'The following evolution is pending MOA';
+$s_evolution_status_accepted_email_french = "L\'évolution suivante est acceptée";
+$s_evolution_status_accepted_email_english = 'The following evolution has been accepted';
+$s_evolution_status_cancel_email_french = "L\'évolution suivante est annulée";
+$s_evolution_status_cancel_email_english = 'The following evolution has been canceled';
+$s_evolution_status_closed_email_french = 'L\'évolution suivante a été fermée.';
+$s_evolution_status_closed_email_english = 'The following evolution has been closed';
+
+/************************************
+ * General project's configurations *
+ ************************************/ 
+$g_management_projects_status = array( 'name' => 'development' ); // development
+$g_management_projects_view_state = array( 'id' => VS_PRIVATE );
+$g_management_language_status = array('french', 'english');
+$g_responsables = array('AMOA', 'MOE', 'SATE', 'SADI', 'SMO', 'SSI', 'QUALITE');
+#Title
+$s_title_french = 'Titre';
+$s_title_english = 'Title';
+#Note
+$s_note_french = 'Note';
+$s_note_english = 'Note';
+
+
+
+?>
diff -rNU5 mantisbt-1.2.5/api/soap/mc_core.php mantis_ard/api/soap/mc_core.php
--- mantisbt-1.2.5/api/soap/mc_core.php	2011-04-05 20:24:16.000000000 +0200
+++ mantis_ard/api/soap/mc_core.php	2013-03-27 11:11:16.000000000 +0100
@@ -35,8 +35,9 @@
 require_once( $t_current_dir . 'mc_filter_api.php' );
 require_once( $t_current_dir . 'mc_issue_api.php' );
 require_once( $t_current_dir . 'mc_issue_attachment_api.php' );
 require_once( $t_current_dir . 'mc_project_api.php' );
 require_once( $t_current_dir . 'mc_project_attachment_api.php' );
+require_once( $t_current_dir . 'mc_management_api.php' );
 require_once( $t_current_dir . 'mc_file_api.php' );
 require_once( $t_current_dir . 'mc_config_api.php' );
 require_once( $t_current_dir . 'mc_custom_field_api.php' );
diff -rNU5 mantisbt-1.2.5/api/soap/mc_custom_field_api.php mantis_ard/api/soap/mc_custom_field_api.php
--- mantisbt-1.2.5/api/soap/mc_custom_field_api.php	2011-04-05 20:24:16.000000000 +0200
+++ mantis_ard/api/soap/mc_custom_field_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -25,5 +25,6 @@
 		}
 	}
 
 	return $t_id;
 }
+
diff -rNU5 mantisbt-1.2.5/api/soap/mc_issue_api.php mantis_ard/api/soap/mc_issue_api.php
--- mantisbt-1.2.5/api/soap/mc_issue_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/api/soap/mc_issue_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -576,11 +576,12 @@
 			return new soap_fault( 'Client', '', "Category '" . $p_issue['category'] . "' not found for project '$t_project_id'." );
 		}
 	}
 
 	if ( isset( $p_issue['version'] ) && !is_blank( $p_issue['version'] ) && !version_get_id( $p_issue['version'], $t_project_id ) ) {
-		$t_version = $p_issue['version'];
+		$t_date_submitted = $p_issue['date_submitted'];
+		$t_version = isset($p_issue['version']) ? $p_issue['version'] : '';
 
 		$t_error_when_version_not_found = config_get( 'mc_error_when_version_not_found' );
 		if( $t_error_when_version_not_found == ON ) {
 			$t_project_name = project_get_name( $t_project_id );
 			return new soap_fault( 'Client', '', "Version '$t_version' does not exist in project '$t_project_name'." );
@@ -642,11 +643,14 @@
 	$t_bug_data->additional_information = isset( $p_issue['additional_information'] ) ? $p_issue['additional_information'] : '';
 
 	# submit the issue
 	$t_issue_id = $t_bug_data->create();
 
-	mci_issue_set_custom_fields( $t_issue_id, $p_issue['custom_fields'], false );
+	$t_fault = mci_issue_set_custom_fields( $t_issue_id, $p_issue['custom_fields'], false );
+    if ($t_fault) {
+		return new soap_fault( 'Client', '', "mci_issue_set_custom_fields failed" . $t_fault );
+    }
 	if ( isset ( $p_issue['monitors'] ) )
 	    mci_issue_set_monitors( $t_issue_id , $t_user_id, $p_issue['monitors'] );
 
 	if( isset( $t_notes ) && is_array( $t_notes ) ) {
 		foreach( $t_notes as $t_note ) {
@@ -788,11 +792,11 @@
 	$t_bug_data->reproducibility = $t_reproducibility_id;
 	$t_bug_data->status = $t_status_id;
 	$t_bug_data->resolution = $t_resolution_id;
 	$t_bug_data->projection = $t_projection_id;
 	$t_bug_data->category_id = $t_category_id;
-	$t_bug_data->date_submitted = isset( $v_date_submitted ) ? $v_date_submitted : '';
+	$t_bug_data->date_submitted = $t_date_submitted;
 	$t_bug_data->last_updated = isset( $v_last_updated ) ? $v_last_updated : '';
 	$t_bug_data->eta = $t_eta_id;
 	$t_bug_data->os = $t_os;
 	$t_bug_data->os_build = $t_os_build;
 	$t_bug_data->platform = $t_platform;
diff -rNU5 mantisbt-1.2.5/api/soap/mc_management_api.php mantis_ard/api/soap/mc_management_api.php
--- mantisbt-1.2.5/api/soap/mc_management_api.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/api/soap/mc_management_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,1099 @@
+<?php
+
+
+/*
+ * Created on 20 avr. 2012
+ *
+ */
+
+/**
+ * Configure mantis in management way.
+ * Create one project and three attached subproject and theirs configuration files (Management - Action - Risk - Decision)
+ * Status and workflow is manageable.
+ * A decision can be linked to and action which can be linked to a risk
+ *
+ * @param string $p_username  The name of the user trying to access the versions.
+ * @param string $p_password  The password of the user.
+ * @return boolean  indicating if configuration is ok or not
+ */
+function mc_configure_management($p_username, $p_password, $p_project_name) {
+	$cpt = 0;
+	$ret = false;
+	$t_user_id = mci_check_login($p_username, $p_password);
+
+	#log failed
+	if ($t_user_id === false)
+		return mci_soap_fault_login_failed();
+
+	#not admin
+	if (!mci_has_administrator_access($t_user_id))
+		return mci_soap_fault_access_denied($t_user_id);
+
+	#project creation
+	$project_ids = projects_creation($p_project_name);
+	foreach ($project_ids as $id) {
+		if (null == $id || 0 == $id)
+			$cpt++;
+	}
+
+	#customs fields creation
+	if (!custom_fields_creation())
+		$cpt++;
+
+	#customs fields association
+	if (!custom_fields_association($project_ids))
+		$cpt++;
+
+	#categories creation
+	if (!categories_creation($project_ids))
+		$cpt++;
+
+	#conf file creation
+	if (!conf_instance_files_creation($project_ids))
+		$cpt++;
+
+	if ($cpt == 0)
+		$ret = true;
+	return $ret;
+}
+
+function mc_management_update($p_username, $p_password, $p_project_id, $p_project) {
+	$ret = false;
+	$t_user_id = mci_check_login($p_username, $p_password);
+
+	#log failed
+	if ($t_user_id === false)
+		return mci_soap_fault_login_failed();
+
+	#not admin
+	if (!mci_has_administrator_access($t_user_id))
+		return mci_soap_fault_access_denied($t_user_id);
+
+	#project not exists
+	if (!project_exists($p_project_id))
+		return new soap_fault('Client', '', "Project '$p_project_id' does not exist.");
+	if (!isset ($p_project['name'])) {
+		return new soap_fault('Client', '', 'Missing Field', 'Required Field Missing');
+	} else {
+		$t_name = $p_project['name'];
+	}
+	$t_description = $p_project['description'];
+
+		$cpt = 0;
+	$project_ids = get_project_ids_by_parent_project($p_project_id);
+	foreach ($project_ids as $type => $project_id) {
+		switch ($type) {
+			case 'management' :
+				$p_project['name'] = $t_name;
+				$p_project['description'] = $t_name;
+				break;
+			case 'action' :
+				$p_project['name'] = $t_name . '_' . $type;
+				$p_project['description'] = "Ce projet est le sous-projet action.";
+				break;
+			case 'risk' :
+				$p_project['name'] = $t_name . '_' . $type;
+				$p_project['description'] = "Ce projet est le sous-projet risque.";
+				break;
+			case 'decision' :
+				$p_project['name'] = $t_name . '_' . $type;
+				$p_project['description'] = "Ce projet est le sous-projet décision.";
+				break;
+			case 'evolution' :
+				$p_project['name'] = $t_name . '_' . $type;
+				$p_project['description'] = "Ce projet est le sous-projet évolution.";
+				break;
+			default :
+				break;
+		}
+		if (!mc_project_update($p_username, $p_password, $project_id, $p_project))
+			$cpt++;
+	}
+	if (0 == $cpt)
+		$ret = true;
+	return $ret;
+
+}
+
+function mc_management_delete($p_username, $p_password, $p_project_id) {
+	$t_user_id = mci_check_login($p_username, $p_password);
+
+	#log failed
+	if ($t_user_id === false)
+		return mci_soap_fault_login_failed();
+
+	#not admin
+	if (!mci_has_administrator_access($t_user_id))
+		return mci_soap_fault_access_denied($t_user_id);
+
+	#project not exists
+	if (!project_exists($p_project_id))
+		return new soap_fault('Client', '', "Project '$p_project_id' does not exist.");
+
+	$parent_project_name = project_get_name($p_project_id);
+	$action_project_id = project_get_other_type_project_id('action', $p_project_id);
+	$risk_project_id = project_get_other_type_project_id('risk', $p_project_id);
+	$decision_project_id = project_get_other_type_project_id('decision', $p_project_id);
+	$evolution_project_id = project_get_other_type_project_id('evolution', $p_project_id);
+
+	$project_ids = get_project_ids_by_parent_project($p_project_id);
+	foreach ($project_ids as $type => $project_id) {
+		project_delete($project_id);
+	}
+
+	#check
+	$cpt = 0;
+	if (project_exists($p_project_id) || project_exists($action_project_id) || project_exists($risk_project_id) || project_exists($decision_project_id) || project_exists($evolution_project_id))
+		$cpt++;
+	if (0 != $cpt)
+		return false;
+	return true;
+
+}
+
+/**
+ * Link a user to a project with a specified access level.
+ *
+ * @param string $p_username  The name of the user trying to add the user (must be administrator)
+ * @param string $p_password  The password of the user.
+ * @param integer $p_project_id  The id of the project to link user to.
+ * @param integer $p_user_id  The id of the user to link to the project.
+ * @param integer $p_access access level.
+ * @return bool returns true or false depending on the success of the action
+ */
+function mc_management_add_user($p_username, $p_password, $p_project_id, $p_user_id, $p_access) {
+	$t_user_id = mci_check_login($p_username, $p_password);
+	if ($t_user_id === false) {
+		return new soap_fault('Client', '', 'Access Denied');
+	}
+	if (!mci_has_administrator_access($t_user_id)) {
+		return new soap_fault('Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+
+	if (!project_exists($p_project_id)) {
+		return new soap_fault('Client', '', "Project '$p_project_id' does not exist.");
+	}
+	if (!user_exists($p_user_id)) {
+		return new soap_fault('Client', '', "User '$p_user_id' does not exist.");
+	}
+
+	// add the user to the project
+	$project_ids = get_project_ids_by_parent_project($p_project_id);
+	foreach ($project_ids as $type => $project_id) {
+		project_set_user_access($project_id, $p_user_id, $p_access);
+	}
+
+	return true;
+}
+
+/**
+ * Remove a user from management projects.
+ *
+ * @param string $p_username  The name of the user trying to add the user (must be administrator)
+ * @param string $p_password  The password of the user.
+ * @param integer $p_project_id  The id of the parent project to unlink user to.
+ * @param integer $p_user_id  The id of the user to unlink to the management projects.
+ * @return bool returns true or false depending on the success of the action
+ */
+function mc_management_remove_user($p_username, $p_password, $p_project_id, $p_user_id) {
+	$t_user_id = mci_check_login($p_username, $p_password);
+	if ($t_user_id === false) {
+		return new soap_fault('Client', '', 'Access Denied');
+	}
+	if (!mci_has_administrator_access($t_user_id)) {
+		return new soap_fault('Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+	if (!project_exists($p_project_id)) {
+		return new soap_fault('Client', '', "Project '$p_project_id' does not exist.");
+	}
+	if (!user_exists($p_user_id)) {
+		return new soap_fault('Client', '', "User '$p_user_id' does not exist.");
+	}
+
+	// remove the user to the management projects
+	$project_ids = get_project_ids_by_parent_project($p_project_id);
+	foreach ($project_ids as $type => $project_id) {
+		project_remove_user($project_id, $p_user_id);
+	}
+
+	return true;
+}
+
+/**
+ * 
+ * @param string $p_project_name  The name of the project.
+ * @return Array  of issues
+ */
+function mc_get_all_issues_by_project($p_username, $p_password, $p_project_name) {
+	$project_id = project_get_id_by_name($p_project_name);
+	$page_number = 1;
+	$per_page = -1;
+	return mc_project_get_issues($p_username, $p_password, $project_id, $page_number, $per_page);
+}
+
+/**
+ * Creation of the 3 subproject Action Risk & Decision and their parent project Management
+ * Add hierarchy
+ * Creation of their configuration files
+ */
+function projects_creation($p_project_name) {
+	global $g_management_projects_status, $g_management_projects_view_state, $g_action_name, $g_action_description, $g_risk_name, $g_risk_description, $g_decision_name, $g_decision_description, $g_evolution_name, $g_evolution_description;
+
+	//management project creation
+	$t_projects_status = mci_get_project_status_id($g_management_projects_status);
+	$t_projects_view_state = mci_get_project_view_state_id($g_management_projects_view_state);
+	$parent_project_description = explode('(', $p_project_name);
+	$parent_project_description = str_replace(' ', '', $parent_project_description[0]);
+	$t_parent_project_id = project_create($p_project_name, $parent_project_description, $t_projects_status, $t_projects_view_state);
+
+	//ARD projects creation
+	$t_action_id = project_create($p_project_name . '_' . $g_action_name, $g_action_description, $t_projects_status, $t_projects_view_state);
+	$t_risk_id = project_create($p_project_name . '_' . $g_risk_name, $g_risk_description, $t_projects_status, $t_projects_view_state);
+	$t_decision_id = project_create($p_project_name . '_' . $g_decision_name, $g_decision_description, $t_projects_status, $t_projects_view_state);
+	$t_evolution_id = project_create($p_project_name . '_' . $g_evolution_name, $g_evolution_description, $t_projects_status, $t_projects_view_state);
+
+	//conf file creation for each subproject
+	instance_configuration_create($t_action_id);
+	instance_configuration_create($t_risk_id);
+	instance_configuration_create($t_decision_id);
+	instance_configuration_create($t_evolution_id);
+
+	// link to parent
+	project_hierarchy_add($t_action_id, $t_parent_project_id);
+	project_hierarchy_add($t_risk_id, $t_parent_project_id);
+	project_hierarchy_add($t_decision_id, $t_parent_project_id);
+	project_hierarchy_add($t_evolution_id, $t_parent_project_id);
+
+	return array (
+		"management" => $t_parent_project_id,
+		"action" => $t_action_id,
+		"risk" => $t_risk_id,
+		"decision" => $t_decision_id,
+		"evolution" => $t_evolution_id
+	);
+
+}
+/**
+ * Return an array with all ids attached to the given parent project's name
+ */
+function get_project_ids_by_parent_project($p_project_id) {
+	$action_project_id = project_get_other_type_project_id('action', $p_project_id);
+	$risk_project_id = project_get_other_type_project_id('risk', $p_project_id);
+	$decision_project_id = project_get_other_type_project_id('decision', $p_project_id);
+	$evolution_project_id = project_get_other_type_project_id('evolution', $p_project_id);
+	return array (
+		'management' => $p_project_id,
+		'action' => $action_project_id,
+		'risk' => $risk_project_id,
+		'decision' => $decision_project_id,
+		'evolution' => $evolution_project_id
+	);
+}
+
+/**
+ * Create all customs fields
+ */
+function custom_fields_creation() {
+	global $g_risk_control, $g_responsables;
+	//context
+	if (!custom_field_get_id_from_name('context')) {
+		$t_custom_field_id = custom_field_create('context');
+		$t_values = values_custom_field_creation('context', 10, null, null, null, 10, 10, 0, 250, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//impact
+	if (!custom_field_get_id_from_name('impact')) {
+		$t_custom_field_id = custom_field_create('impact');
+		$t_values = values_custom_field_creation('impact', 10, null, null, null, 10, 10, 0, 250, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//reference
+	if (!custom_field_get_id_from_name('reference')) {
+		$t_custom_field_id = custom_field_create('reference');
+		$t_values = values_custom_field_creation('reference', 0, null, null, null, 10, 10, 0, 250, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//control
+	if (!custom_field_get_id_from_name('control')) {
+		$t_possible_values = '';
+		foreach ($g_risk_control as $t_risk_control) {
+			$t_possible_values .= $t_risk_control . '|';
+		}
+		$t_possible_values = substr($t_possible_values, 0, strlen($t_possible_values) - 1);
+		$t_custom_field_id = custom_field_create('control');
+		$t_values = values_custom_field_creation('control', 3, $t_possible_values, null, null, 10, 10, null, null, true, true, true, true, true, true, true, true, true);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//responsable
+	if (!custom_field_get_id_from_name('responsable')) {
+		$t_possible_values = 'none|';
+		foreach ($g_responsables as $g_responsable) {
+			$t_possible_values .= $g_responsable . '|';
+		}
+		$t_possible_values = substr($t_possible_values, 0, strlen($t_possible_values) - 1);
+		$t_custom_field_id = custom_field_create('responsable');
+		$t_values = values_custom_field_creation('responsable', 3, $t_possible_values, null, null, 10, 10, null, null, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//estimate_end
+	if (!custom_field_get_id_from_name('estimate_end')) {
+		$t_custom_field_id = custom_field_create('estimate_end');
+		$t_values = values_custom_field_creation('estimate_end', 8, null, null, null, 10, 10, null, null, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//reestimate_end
+	if (!custom_field_get_id_from_name('reestimate_end')) {
+		$t_custom_field_id = custom_field_create('reestimate_end');
+		$t_values = values_custom_field_creation('reestimate_end', 8, null, null, null, 10, 10, null, null, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//real_end
+	if (!custom_field_get_id_from_name('real_end')) {
+		$t_custom_field_id = custom_field_create('real_end');
+		$t_values = values_custom_field_creation('real_end', 8, null, null, null, 10, 10, null, null, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//charge
+	if (!custom_field_get_id_from_name('charge')) {
+		$t_custom_field_id = custom_field_create('charge');
+		$t_values = values_custom_field_creation('charge', 0, null, null, null, 10, 10, 0, 250, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//delivery
+	if (!custom_field_get_id_from_name('delivery')) {
+		$t_custom_field_id = custom_field_create('delivery');
+		$t_values = values_custom_field_creation('delivery', 8, null, null, null, 10, 10, null, null, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//mep
+	if (!custom_field_get_id_from_name('mep')) {
+		$t_custom_field_id = custom_field_create('mep');
+		$t_values = values_custom_field_creation('mep', 8, null, null, null, 10, 10, null, null, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//uc
+	if (!custom_field_get_id_from_name('uc')) {
+		$t_custom_field_id = custom_field_create('uc');
+		$t_values = values_custom_field_creation('uc', 0, null, null, null, 10, 10, 0, 250, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	//it
+	if (!custom_field_get_id_from_name('it')) {
+		$t_custom_field_id = custom_field_create('it');
+		$t_values = values_custom_field_creation('it', 0, null, null, null, 10, 10, 0, 250, true, true, true, true, true, false, false, false, false);
+		custom_field_update($t_custom_field_id, $t_values);
+	}
+	return true;
+}
+
+/**
+ * Associate given value in the return table, format to create a custom field in db
+ * @param string $p_name  The name of the custom field.
+ * @param string $p_type  The type of the custom field (0 text,3 list,8 date, 10 textarea)
+ * @param string $p_possible_value  The possible values of the custom field.
+ * @param string $p_default_value  The default value of the custom field.
+ * @param string $p_valid_regex  The regex of the custom field.
+ * @param int $p_access_level_r  The reading access level of the custom field.
+ * @param int $p_access_level_rw  The reading and writing access level of the custom field.
+ * @param int $p_length_min  The minimum length of the custom field.
+ * @param int $p_length_max  The maximum length of the custom field.
+ * @param boolean $p_filter_by  True if custom field can be filter.
+ * @param boolean $p_display_report  True if custom field is displayed in report page.
+ * @param boolean $p_display_update  True if custom field is displayed in update page.
+ * @param boolean $p_display_resolved  True if custom field is displayed in resolved page.
+ * @param boolean $p_display_closed  True if custom field is displayed in closed page.
+ * @param boolean $p_require_report  True if custom field is required in report page.
+ * @param boolean $p_require_update  True if custom field is required in update page.
+ * @param boolean $p_require_resolved  True if custom field is required in resolved page.
+ * @param boolean $p_require_closed  True if custom field is required in closed page.
+ * @return array  $values in correct format to create a custom field
+ */
+function values_custom_field_creation($p_name, $p_type, $p_possible_value, $p_default_value, $p_valid_regex, $p_access_level_r, $p_access_level_rw, $p_length_min, $p_length_max, $p_filter_by, $p_display_report, $p_display_update, $p_display_resolved, $p_display_closed, $p_require_report, $p_require_update, $p_require_resolved, $p_require_closed) {
+	$t_values['name'] = $p_name;
+	$t_values['type'] = $p_type;
+	$t_values['possible_values'] = $p_possible_value;
+	$t_values['default_value'] = $p_default_value;
+	$t_values['valid_regexp'] = $p_valid_regex;
+	$t_values['access_level_r'] = $p_access_level_r;
+	$t_values['access_level_rw'] = $p_access_level_rw;
+	$t_values['length_min'] = $p_length_min;
+	$t_values['length_max'] = $p_length_max;
+	$t_values['filter_by'] = $p_filter_by;
+	$t_values['display_report'] = $p_display_report;
+	$t_values['display_update'] = $p_display_update;
+	$t_values['display_resolved'] = $p_display_resolved;
+	$t_values['display_closed'] = $p_display_closed;
+	$t_values['require_report'] = $p_require_report;
+	$t_values['require_update'] = $p_require_update;
+	$t_values['require_resolved'] = $p_require_resolved;
+	$t_values['require_closed'] = $p_require_closed;
+	return $t_values;
+}
+
+/**
+ * Associate custom fields for each subproject
+ */
+function custom_fields_association($project_ids) {
+	global $g_action_custom_fields, $g_risk_custom_fields, $g_decision_custom_fields, $g_evolution_custom_fields;
+
+	/*
+	 *  ACTION
+	 */
+	$cpt = 0;
+	foreach ($g_action_custom_fields as $custom_field) {
+		$t_custom_field_id = custom_field_get_id_from_name($custom_field);
+		custom_field_link($t_custom_field_id, $project_ids['action']);
+		custom_field_set_sequence($t_custom_field_id, $project_ids['action'], $cpt);
+		$cpt++;
+	}
+	/*
+	 *  RISK
+	 */
+	$cpt = 0;
+	foreach ($g_risk_custom_fields as $custom_field) {
+		$t_custom_field_id = custom_field_get_id_from_name($custom_field);
+		custom_field_link($t_custom_field_id, $project_ids['risk']);
+		custom_field_set_sequence($t_custom_field_id, $project_ids['risk'], $cpt);
+		$cpt++;
+	}
+	/*
+	 *  DECISION
+	 */
+	$cpt = 0;
+	foreach ($g_decision_custom_fields as $custom_field) {
+		$t_custom_field_id = custom_field_get_id_from_name($custom_field);
+		custom_field_link($t_custom_field_id, $project_ids['decision']);
+		custom_field_set_sequence($t_custom_field_id, $project_ids['decision'], $cpt);
+		$cpt++;
+	}
+	/*
+	 * EVOLUTION
+	 */
+	$cpt = 0;
+	foreach ($g_evolution_custom_fields as $custom_field) {
+		$t_custom_field_id = custom_field_get_id_from_name($custom_field);
+		custom_field_link($t_custom_field_id, $project_ids['evolution']);
+		custom_field_set_sequence($t_custom_field_id, $project_ids['evolution'], $cpt);
+		$cpt++;
+	}
+	return true;
+}
+
+/**
+ * Create categories for each subproject
+ */
+function categories_creation($project_ids) {
+	global $g_risk_criteria_categories, $g_action_categories, $g_risk_categories, $g_decision_categories, $g_evolution_categories;
+	/*
+	 * RISK CRITERIA
+	 */
+	foreach ($g_risk_criteria_categories as $g_risk_criteria_category) {
+		if (category_is_unique(-1, $g_risk_criteria_category)) {
+			category_add(-1, $g_risk_criteria_category);
+		}
+	}
+	/*
+	 * ACTION
+	 */
+	foreach ($g_action_categories as $g_action_category) {
+		if (category_is_unique($project_ids['action'], $g_action_category)) {
+			category_add($project_ids['action'], $g_action_category);
+		}
+	}
+	/*
+	 * RISK
+	 */
+	foreach ($g_risk_categories as $g_risk_category) {
+		if (category_is_unique($project_ids['risk'], $g_risk_category)) {
+			category_add($project_ids['risk'], $g_risk_category);
+		}
+	}
+	/*
+	 * DECISION
+	 */
+	foreach ($g_decision_categories as $g_decision_category) {
+		if (category_is_unique($project_ids['decision'], $g_decision_category)) {
+			category_add($project_ids['decision'], $g_decision_category);
+		}
+	}
+	/*
+	 * EVOLUTION
+	 */
+	foreach ($g_evolution_categories as $g_evolution_category) {
+		if (category_is_unique($project_ids['evolution'], $g_evolution_category)) {
+			category_add($project_ids['evolution'], $g_evolution_category);
+		}
+	}
+	return true;
+}
+
+/**
+ * 3 subproject's configuration file
+ */
+function conf_instance_files_creation($project_ids) {
+	$cpt = 0;
+	$ret = false;
+	if (!action_conf_instance_file_creation($project_ids['action']))
+		$cpt++;
+	if (!risk_conf_instance_file_creation($project_ids['risk']))
+		$cpt++;
+	if (!decision_conf_instance_file_creation($project_ids['decision']))
+		$cpt++;
+	if (!evolution_conf_instance_file_creation($project_ids['evolution']))
+		$cpt++;
+	if ($cpt == 0)
+		$ret = true;
+	return $ret;
+}
+
+/**
+ * Write in action configuration file all needed datas
+ */
+function action_conf_instance_file_creation(& $p_project_id) {
+	global $g_action_report_page_fields, $g_action_view_page_fields, $g_action_print_page_fields, $g_action_update_page_fields, $g_action_change_status_page_fields, $g_action_allow_no_priority, $g_action_allow_no_category, $s_title_french, $s_title_english, $s_note_french, $s_note_english,
+	#status
+	$g_action_fixed_status, $g_action_status_fixed, $g_management_language_status, $g_action_status, $g_action_status_colors, $s_action_status_french, $s_action_status_english, $s_action_status_progress_title_french, $s_action_status_progress_title_english, $s_action_status_new_title_french, $s_action_status_new_title_english, $s_action_status_closed_title_french, $s_action_status_closed_title_english, $s_action_status_new_button_french, $s_action_status_new_button_english, $s_action_status_progress_button_french, $s_action_status_progress_button_english, $s_action_status_closed_button_french, $s_action_status_closed_button_english, $s_action_status_new_email_french, $s_action_status_new_email_english, $s_action_status_progress_email_french, $s_action_status_progress_email_english, $s_action_status_closed_email_french, $s_action_status_closed_email_english;
+
+	# get the conf instance file
+	$t_project_id = $p_project_id;
+	if (file_exists(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php')) {
+		$t_file = file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php');
+		#current fields
+		$t_line = get_line_in_file($t_file, "#fields") + 1;
+		$t_fields = '$g_bug_report_page_fields = array(' . "\n";
+		foreach ($g_action_report_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_view_page_fields = array(' . "\n";
+		foreach ($g_action_view_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_print_page_fields = array(' . "\n";
+		foreach ($g_action_print_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_update_page_fields = array(' . "\n";
+		foreach ($g_action_update_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_change_status_page_fields = array(' . "\n";
+		foreach ($g_action_change_status_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_file = insert_in_file($t_file, $t_fields, $t_line);
+		#priority field
+		$t_line = get_line_in_file($t_file, "#priority") + 1;
+		$t_field = '$g_allow_no_priority = ' . $g_action_allow_no_priority . ";\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#category field
+		$t_line = get_line_in_file($t_file, "#category") + 1;
+		$t_field = '$g_allow_no_category = ' . $g_action_allow_no_category . ";\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#title field
+		$t_line = get_line_in_file($t_file, "#summary") + 1;
+		$t_field = '$s_summary_french = \'' . $s_title_french . "';\n";
+		$t_field .= '$s_summary_english = \'' . $s_title_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#note field
+		$t_line = get_line_in_file($t_file, "#additional_information") + 1;
+		$t_field = '$s_additional_information_french = \'' . $s_note_french . "';\n";
+		$t_field .= '$s_additional_information_english = \'' . $s_note_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#status
+		$t_line = get_line_in_file($t_file, "#status") + 1;
+		$t_field = '$g_fixed_status = ' . $g_action_fixed_status . ";\n";
+		$t_field .= '$g_status_enum_string = \'' . $g_action_status . "';\n";
+		$t_field .= '$g_status_fixed = array(';
+		foreach ($g_action_status_fixed as $status) {
+			$t_field .= "'$status', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_language_status = array(';
+		foreach ($g_management_language_status as $language) {
+			$t_field .= "'$language', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_status_colors = array(' . "\n";
+		foreach ($g_action_status_colors as $status => $color) {
+			$t_field .= "\t'$status' => '$color',\n";
+		}
+		$t_field .= "\t);\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#name status
+		$t_line = get_line_in_file($t_file, "#name") + 1;
+		$t_field = '$s_status_enum_string_french = \'' . $s_action_status_french . "';\n";
+		$t_field .= '$s_status_enum_string_english = \'' . $s_action_status_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#title status
+		$t_line = get_line_in_file($t_file, "#title") + 1;
+		$t_field = '$s_new_bug_title_french = \'' . $s_action_status_new_title_french . "';\n";
+		$t_field .= '$s_new_bug_title_english = \'' . $s_action_status_new_title_english . "';\n";
+		$t_field .= '$s_progress_bug_title_french = \'' . $s_action_status_progress_title_french . "';\n";
+		$t_field .= '$s_progress_bug_title_english = \'' . $s_action_status_progress_title_english . "';\n";
+		$t_field .= '$s_closed_bug_title_french = \'' . $s_action_status_closed_title_french . "';\n";
+		$t_field .= '$s_closed_bug_title_english = \'' . $s_action_status_closed_title_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#button status
+		$t_line = get_line_in_file($t_file, "#button") + 1;
+		$t_field = '$s_new_bug_button_french = \'' . $s_action_status_new_button_french . "';\n";
+		$t_field .= '$s_new_bug_button_english = \'' . $s_action_status_new_button_english . "';\n";
+		$t_field .= '$s_progress_bug_button_french = \'' . $s_action_status_progress_button_french . "';\n";
+		$t_field .= '$s_progress_bug_button_english = \'' . $s_action_status_progress_button_english . "';\n";
+		$t_field .= '$s_closed_bug_button_french = \'' . $s_action_status_closed_button_french . "';\n";
+		$t_field .= '$s_closed_bug_button_english = \'' . $s_action_status_closed_button_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#email status
+		$t_line = get_line_in_file($t_file, "#email") + 1;
+		$t_field = '$s_email_notification_title_for_status_bug_new_french = \'' . $s_action_status_new_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_new_english = \'' . $s_action_status_new_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_progress_french = \'' . $s_action_status_progress_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_progress_english = \'' . $s_action_status_progress_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_closed_french = \'' . $s_action_status_closed_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_closed_english = \'' . $s_action_status_closed_email_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#workflow
+		$t_line = get_line_in_file($t_file, "#workflow") + 1;
+		$t_field = '$g_status_enum_workflow[10]' . " ='20:progress';\n";
+		$t_field .= '$g_status_enum_workflow[20]' . " ='30:closed';\n";
+		$t_field .= '$g_status_enum_workflow[30]' . " ='20:progress';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		# --Update File--
+		write_file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php', $t_file);
+		return true;
+	} else {
+		return false;
+	}
+}
+
+/**
+ * Write in risk configuration file all needed datas
+ */
+function risk_conf_instance_file_creation(& $p_project_id) {
+	global $g_risk_report_page_fields, $g_risk_view_page_fields, $g_risk_print_page_fields, $g_risk_update_page_fields, $g_risk_change_status_page_fields, $g_risk_urgencies, $s_risk_urgencies_french, $s_risk_urgencies_english, $g_default_bug_urgency, $g_allow_no_urgency, $s_urgency_french, $s_urgency_english, $g_risk_impact, $s_risk_impact_french, $s_risk_impact_english, $g_default_bug_impact, $g_allow_no_impact, $s_impact_french, $s_impact_english, $g_risk_probability, $s_risk_probability_french, $s_risk_probability_english, $g_default_bug_probability, $g_allow_no_probability, $s_probability_french, $s_probability_english, $s_title_french, $s_title_english, $s_note_french, $s_note_english, $g_default_bug_trigger_condition, $s_trigger_condition_french, $s_trigger_condition_english,
+	#status
+	$g_risk_fixed_status, $g_risk_status_fixed, $g_management_language_status, $g_risk_status, $g_risk_status_colors, $s_risk_status_french, $s_risk_status_english, $s_risk_status_new_title_french, $s_risk_status_new_title_english, $s_risk_status_progress_title_french, $s_risk_status_progress_title_english, $s_risk_status_closed_title_french, $s_risk_status_closed_title_english, $s_risk_status_new_button_french, $s_risk_status_new_button_english, $s_risk_status_progress_button_french, $s_risk_status_progress_button_english, $s_risk_status_closed_button_french, $s_risk_status_closed_button_english, $s_risk_status_new_email_french, $s_risk_status_new_email_english, $s_risk_status_progress_email_french, $s_risk_status_progress_email_english, $s_risk_status_closed_email_french, $s_risk_status_closed_email_english;
+
+	# get the conf instance file
+	$t_project_id = $p_project_id;
+
+	if (file_exists(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php')) {
+		$t_file = file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php');
+		#current fields
+		$t_line = get_line_in_file($t_file, "#fields") + 1;
+		$t_fields = '$g_bug_report_page_fields = array(' . "\n";
+		foreach ($g_risk_report_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_view_page_fields = array(' . "\n";
+		foreach ($g_risk_view_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_print_page_fields = array(' . "\n";
+		foreach ($g_risk_print_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_update_page_fields = array(' . "\n";
+		foreach ($g_risk_update_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_change_status_page_fields = array(' . "\n";
+		foreach ($g_risk_change_status_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_file = insert_in_file($t_file, $t_fields, $t_line);
+		#priority field
+		$t_line = get_line_in_file($t_file, "#priority") + 1;
+		$t_field = '$g_priority_enum_string = \'' . $g_risk_urgencies . "';\n";
+		$t_field .= '$g_default_bug_priority = ' . $g_default_bug_urgency . ";\n";
+		$t_field .= '$g_allow_no_priority = ' . $g_allow_no_urgency . ";\n";
+		$t_field .= '$s_priority_enum_string_french = \'' . $s_risk_urgencies_french . "';\n";
+		$t_field .= '$s_priority_enum_string_english = \'' . $s_risk_urgencies_english . "';\n";
+		$t_field .= '$s_priority_french = \'' . $s_urgency_french . "';\n";
+		$t_field .= '$s_priority_english = \'' . $s_urgency_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#severity field
+		$t_line = get_line_in_file($t_file, "#severity") + 1;
+		$t_field = '$g_severity_enum_string = \'' . $g_risk_impact . "';\n";
+		$t_field .= '$g_default_bug_severity = ' . $g_default_bug_impact . ";\n";
+		$t_field .= '$g_allow_no_severity = ' . $g_allow_no_impact . ";\n";
+		$t_field .= '$s_severity_enum_string_french = \'' . $s_risk_impact_french . "';\n";
+		$t_field .= '$s_severity_enum_string_english = \'' . $s_risk_impact_english . "';\n";
+		$t_field .= '$s_severity_french = \'' . $s_impact_french . "';\n";
+		$t_field .= '$s_severity_english = \'' . $s_impact_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#probability field
+		$t_line = get_line_in_file($t_file, "#reproducibility") + 1;
+		$t_field = '$g_reproducibility_enum_string = \'' . $g_risk_probability . "';\n";
+		$t_field .= '$g_default_bug_reproducibility = ' . $g_default_bug_probability . ";\n";
+		$t_field .= '$g_allow_no_reproducibility = ' . $g_allow_no_probability . ";\n";
+		$t_field .= '$s_reproducibility_enum_string_french = \'' . $s_risk_probability_french . "';\n";
+		$t_field .= '$s_reproducibility_enum_string_english = \'' . $s_risk_probability_english . "';\n";
+		$t_field .= '$s_reproducibility_french = \'' . $s_probability_french . "';\n";
+		$t_field .= '$s_reproducibility_english = \'' . $s_probability_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#title field
+		$t_line = get_line_in_file($t_file, "#summary") + 1;
+		$t_field = '$s_summary_french = \'' . $s_title_french . "';\n";
+		$t_field .= '$s_summary_english = \'' . $s_title_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#trigger_conition field
+		$t_line = get_line_in_file($t_file, "#steps_to_reproduce") + 1;
+		$t_field = '$g_default_bug_steps_to_reproduce = \'' . $g_default_bug_trigger_condition . "';\n";
+		$t_field .= '$s_steps_to_reproduce_french = \'' . $s_trigger_condition_french . "';\n";
+		$t_field .= '$s_steps_to_reproduce_english = \'' . $s_trigger_condition_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#note field
+		$t_line = get_line_in_file($t_file, "#additional_information") + 1;
+		$t_field = '$s_additional_information_french = \'' . $s_note_french . "';\n";
+		$t_field .= '$s_additional_information_english = \'' . $s_note_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#status field
+		$t_line = get_line_in_file($t_file, "#status") + 1;
+		$t_field = '$g_fixed_status = ' . $g_risk_fixed_status . ";\n";
+		$t_field .= '$g_status_enum_string = \'' . $g_risk_status . "';\n";
+		$t_field .= '$g_status_fixed = array(';
+		foreach ($g_risk_status_fixed as $status) {
+			$t_field .= "'$status', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_language_status = array(';
+		foreach ($g_management_language_status as $language) {
+			$t_field .= "'$language', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_status_colors = array(' . "\n";
+		foreach ($g_risk_status_colors as $status => $color) {
+			$t_field .= "\t'$status' => '$color',\n";
+		}
+		$t_field .= ");\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#name status
+		$t_line = get_line_in_file($t_file, "#name") + 1;
+		$t_field = '$s_status_enum_string_french = \'' . $s_risk_status_french . "';\n";
+		$t_field .= '$s_status_enum_string_english = \'' . $s_risk_status_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#title status
+		$t_line = get_line_in_file($t_file, "#title") + 1;
+		$t_field = '$s_new_bug_title_french = \'' . $s_risk_status_new_title_french . "';\n";
+		$t_field .= '$s_new_bug_title_english = \'' . $s_risk_status_new_title_english . "';\n";
+		$t_field .= '$s_progress_bug_title_french = \'' . $s_risk_status_progress_title_french . "';\n";
+		$t_field .= '$s_progress_bug_title_english = \'' . $s_risk_status_progress_title_english . "';\n";
+		$t_field .= '$s_closed_bug_title_french = \'' . $s_risk_status_closed_title_french . "';\n";
+		$t_field .= '$s_closed_bug_title_english = \'' . $s_risk_status_closed_title_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#button status
+		$t_line = get_line_in_file($t_file, "#button") + 1;
+		$t_field = '$s_new_bug_button_french = \'' . $s_risk_status_new_button_french . "';\n";
+		$t_field .= '$s_new_bug_button_english = \'' . $s_risk_status_new_button_english . "';\n";
+		$t_field .= '$s_progress_bug_button_french = \'' . $s_risk_status_progress_button_french . "';\n";
+		$t_field .= '$s_progress_bug_button_english = \'' . $s_risk_status_progress_button_english . "';\n";
+		$t_field .= '$s_closed_bug_button_french = \'' . $s_risk_status_closed_button_french . "';\n";
+		$t_field .= '$s_closed_bug_button_english = \'' . $s_risk_status_closed_button_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#email status
+		$t_line = get_line_in_file($t_file, "#email") + 1;
+		$t_field = '$s_email_notification_title_for_status_bug_new_french = \'' . $s_risk_status_new_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_new_english = \'' . $s_risk_status_new_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_progress_french = \'' . $s_risk_status_progress_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_progress_english = \'' . $s_risk_status_progress_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_closed_french = \'' . $s_risk_status_closed_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_closed_english = \'' . $s_risk_status_closed_email_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#workflow
+		$t_line = get_line_in_file($t_file, "#workflow") + 1;
+		$t_field = '$g_status_enum_workflow[10]' . " ='20:progress';\n";
+		$t_field .= '$g_status_enum_workflow[20]' . " ='30:closed';\n";
+		$t_field .= '$g_status_enum_workflow[30]' . " ='20:progress';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		# --Update File--
+		write_file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php', $t_file);
+		return true;
+	} else {
+		return false;
+	}
+}
+
+/**
+ * Write in decision configuration file all needed datas
+ */
+function decision_conf_instance_file_creation(& $p_project_id) {
+	global $project_ids, $g_decision_description, $g_decision_custom_fields, $g_decision_report_page_fields, $g_decision_view_page_fields, $g_decision_print_page_fields, $g_decision_update_page_fields, $g_decision_change_status_page_fields, $g_decision_allow_no_priority, $g_decision_allow_no_category,
+	#general
+	$s_title_french, $s_title_english, $s_note_french, $s_note_english, $g_management_language_status,
+	#status
+	$g_decision_fixed_status, $g_decision_status_fixed, $g_decision_status, $g_decision_status_colors, $s_decision_status_french, $s_decision_status_english, $s_decision_status_new_title_french, $s_decision_status_new_title_english, $s_decision_status_progress_title_french, $s_decision_status_progress_title_english, $s_decision_status_tovalidate_title_french, $s_decision_status_tovalidate_title_english, $s_decision_status_validate_title_french, $s_decision_status_validate_title_english, $s_decision_status_invalidate_title_french, $s_decision_status_invalidate_title_english, $s_decision_status_cancel_title_french, $s_decision_status_closed_title_french, $s_decision_status_cancel_title_english, $s_decision_status_closed_title_english, $s_decision_status_tovalidate_button_french, $s_decision_status_tovalidate_button_english, $s_decision_status_validate_button_french, $s_decision_status_validate_button_english, $s_decision_status_invalidate_button_french, $s_decision_status_invalidate_button_english, $s_decision_status_new_button_french, $s_decision_status_new_button_english, $s_decision_status_progress_button_french, $s_decision_status_progress_button_english, $s_decision_status_cancel_button_french, $s_decision_status_cancel_button_english, $s_decision_status_closed_button_french, $s_decision_status_closed_button_english, $s_decision_status_new_email_french, $s_decision_status_new_email_english, $s_decision_status_progress_email_french, $s_decision_status_progress_email_english, $s_decision_status_tovalidate_email_french, $s_decision_status_tovalidate_email_english, $s_decision_status_validate_email_french, $s_decision_status_validate_email_english, $s_decision_status_invalidate_email_french, $s_decision_status_invalidate_email_english, $s_decision_status_cancel_email_french, $s_decision_status_cancel_email_english, $s_decision_status_closed_email_french, $s_decision_status_closed_email_english;
+
+	# get the conf instance file
+	$t_project_id = $p_project_id;
+	if (file_exists(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php')) {
+		$t_file = file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php');
+		#current fields
+		$t_line = get_line_in_file($t_file, "#fields") + 1;
+		$t_fields = '$g_bug_report_page_fields = array(' . "\n";
+		foreach ($g_decision_report_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_view_page_fields = array(' . "\n";
+		foreach ($g_decision_view_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_print_page_fields = array(' . "\n";
+		foreach ($g_decision_print_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_update_page_fields = array(' . "\n";
+		foreach ($g_decision_update_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_change_status_page_fields = array(' . "\n";
+		foreach ($g_decision_change_status_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_file = insert_in_file($t_file, $t_fields, $t_line);
+		#priority field
+		$t_line = get_line_in_file($t_file, "#priority") + 1;
+		$t_field = '$g_allow_no_priority = ' . $g_decision_allow_no_priority . ";\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#category field
+		$t_line = get_line_in_file($t_file, "#category") + 1;
+		$t_field = '$g_allow_no_category = ' . $g_decision_allow_no_category . ";\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#title field
+		$t_line = get_line_in_file($t_file, "#summary") + 1;
+		$t_field = '$s_summary_french = \'' . $s_title_french . "';\n";
+		$t_field .= '$s_summary_english = \'' . $s_title_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#note field
+		$t_line = get_line_in_file($t_file, "#additional_information") + 1;
+		$t_field = '$s_additional_information_french = \'' . $s_note_french . "';\n";
+		$t_field .= '$s_additional_information_english = \'' . $s_note_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#status
+		$t_line = get_line_in_file($t_file, "#status") + 1;
+		$t_field = '$g_fixed_status = ' . $g_decision_fixed_status . ";\n";
+		$t_field .= '$g_status_enum_string = \'' . $g_decision_status . "';\n";
+		$t_field .= '$g_status_fixed = array(';
+		foreach ($g_decision_status_fixed as $status) {
+			$t_field .= "'$status', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_language_status = array(';
+		foreach ($g_management_language_status as $language) {
+			$t_field .= "'$language', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_status_colors = array(' . "\n";
+		foreach ($g_decision_status_colors as $status => $color) {
+			$t_field .= "\t'$status' => '$color',\n";
+		}
+		$t_field .= "\t);\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#name status
+		$t_line = get_line_in_file($t_file, "#name") + 1;
+		$t_field = '$s_status_enum_string_french = \'' . $s_decision_status_french . "';\n";
+		$t_field .= '$s_status_enum_string_english = \'' . $s_decision_status_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#title status
+		$t_line = get_line_in_file($t_file, "#title") + 1;
+		$t_field = '$s_new_bug_title_french = \'' . $s_decision_status_new_title_french . "';\n";
+		$t_field .= '$s_new_bug_title_english = \'' . $s_decision_status_new_title_english . "';\n";
+		$t_field .= '$s_progress_bug_title_french = \'' . $s_decision_status_progress_title_french . "';\n";
+		$t_field .= '$s_progress_bug_title_english = \'' . $s_decision_status_progress_title_english . "';\n";
+		$t_field .= '$s_tovalidate_bug_title_french = \'' . $s_decision_status_tovalidate_title_french . "';\n";
+		$t_field .= '$s_tovalidate_bug_title_english = \'' . $s_decision_status_validate_title_english . "';\n";
+		$t_field .= '$s_validate_bug_title_french = \'' . $s_decision_status_validate_title_french . "';\n";
+		$t_field .= '$s_validate_bug_title_english = \'' . $s_decision_status_tovalidate_title_english . "';\n";
+		$t_field .= '$s_invalidate_bug_title_french = \'' . $s_decision_status_invalidate_title_french . "';\n";
+		$t_field .= '$s_invalidate_bug_title_english = \'' . $s_decision_status_invalidate_title_english . "';\n";
+		$t_field .= '$s_cancel_bug_title_french = \'' . $s_decision_status_cancel_title_french . "';\n";
+		$t_field .= '$s_cancel_bug_title_english = \'' . $s_decision_status_cancel_title_english . "';\n";
+		$t_field .= '$s_closed_bug_title_french = \'' . $s_decision_status_closed_title_french . "';\n";
+		$t_field .= '$s_closed_bug_title_english = \'' . $s_decision_status_closed_title_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#button status
+		$t_line = get_line_in_file($t_file, "#button") + 1;
+		$t_field = '$s_new_bug_button_french = \'' . $s_decision_status_new_button_french . "';\n";
+		$t_field .= '$s_new_bug_button_english = \'' . $s_decision_status_new_button_english . "';\n";
+		$t_field .= '$s_progress_bug_button_french = \'' . $s_decision_status_progress_button_french . "';\n";
+		$t_field .= '$s_progress_bug_button_english = \'' . $s_decision_status_progress_button_english . "';\n";
+		$t_field .= '$s_tovalidate_bug_button_french = \'' . $s_decision_status_tovalidate_button_french . "';\n";
+		$t_field .= '$s_tovalidate_bug_button_english = \'' . $s_decision_status_validate_button_english . "';\n";
+		$t_field .= '$s_validate_bug_button_french = \'' . $s_decision_status_validate_button_french . "';\n";
+		$t_field .= '$s_validate_bug_button_english = \'' . $s_decision_status_tovalidate_button_english . "';\n";
+		$t_field .= '$s_invalidate_bug_button_french = \'' . $s_decision_status_invalidate_button_french . "';\n";
+		$t_field .= '$s_invalidate_bug_button_english = \'' . $s_decision_status_invalidate_button_english . "';\n";
+		$t_field .= '$s_cancel_bug_button_french = \'' . $s_decision_status_cancel_button_french . "';\n";
+		$t_field .= '$s_cancel_bug_button_english = \'' . $s_decision_status_cancel_button_english . "';\n";
+		$t_field .= '$s_closed_bug_button_french = \'' . $s_decision_status_closed_button_french . "';\n";
+		$t_field .= '$s_closed_bug_button_english = \'' . $s_decision_status_closed_button_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#email status
+		$t_line = get_line_in_file($t_file, "#email") + 1;
+		$t_field = '$s_email_notification_title_for_status_bug_new_french = \'' . $s_decision_status_new_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_new_english = \'' . $s_decision_status_new_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_progress_french = \'' . $s_decision_status_progress_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_progress_english = \'' . $s_decision_status_progress_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_tovalidate_french = \'' . $s_decision_status_tovalidate_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_tovalidate_english = \'' . $s_decision_status_validate_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_validate_french = \'' . $s_decision_status_validate_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_validate_english = \'' . $s_decision_status_tovalidate_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_invalidate_french = \'' . $s_decision_status_invalidate_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_invalidate_english = \'' . $s_decision_status_invalidate_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_cancel_french = \'' . $s_decision_status_cancel_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_cancel_english = \'' . $s_decision_status_cancel_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_closed_french = \'' . $s_decision_status_closed_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_closed_english = \'' . $s_decision_status_closed_email_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#workflow
+		$t_line = get_line_in_file($t_file, "#workflow") + 1;
+		$t_field = '$g_status_enum_workflow[10]' . " ='20:progress,30:to_validate,60:cancel';\n";
+		$t_field .= '$g_status_enum_workflow[20]' . " ='30:to_validate,60:cancel';\n";
+		$t_field .= '$g_status_enum_workflow[30]' . " ='40:validate,50:invalidate,60:cancel';\n";
+		$t_field .= '$g_status_enum_workflow[40]' . " ='20:progress,70:closed';\n";
+		$t_field .= '$g_status_enum_workflow[50]' . " ='20:progress,70:closed';\n";
+		$t_field .= '$g_status_enum_workflow[60]' . " ='20:progress,70:closed';\n";
+		$t_field .= '$g_status_enum_workflow[70]' . " ='20:progress,30:to_validate';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		# --Update File--
+		write_file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php', $t_file);
+		return true;
+	} else {
+		return false;
+	}
+}
+
+/**
+ * Write in evolution configuration file all needed datas
+ */
+function evolution_conf_instance_file_creation(& $p_project_id) {
+	global $g_management_language_status, $g_evolution_report_page_fields, $g_evolution_view_page_fields, $g_evolution_print_page_fields, $g_evolution_update_page_fields, $g_evolution_change_status_page_fields, $g_evolution_custom_fields, $g_evolution_allow_no_priority, $g_evolution_allow_no_category,
+	#status
+	$g_evolution_fixed_status, $g_evolution_status_fixed, $g_evolution_status, $g_evolution_status_colors, $s_evolution_status_french, $s_evolution_status_english, $s_evolution_status_new_title_french, $s_evolution_status_new_title_english, $s_evolution_status_waiting_encryption_title_french, $s_evolution_status_waiting_encryption_title_english, $s_evolution_status_waiting_moa_title_french, $s_evolution_status_waiting_moa_title_english, $s_evolution_status_accepted_title_french, $s_evolution_status_accepted_title_english, $s_evolution_status_cancel_title_french, $s_evolution_status_cancel_title_english, $s_evolution_status_new_button_french, $s_evolution_status_new_button_english, $s_evolution_status_waiting_encryption_button_french, $s_evolution_status_waiting_encryption_button_english, $s_evolution_status_waiting_moa_button_french, $s_evolution_status_waiting_moa_button_english, $s_evolution_status_accepted_button_french, $s_evolution_status_accepted_button_english, $s_evolution_status_cancel_button_french, $s_evolution_status_cancel_button_english, $s_evolution_status_new_email_french, $s_evolution_status_new_email_english, $s_evolution_status_waiting_encryption_email_french, $s_evolution_status_waiting_encryption_email_english, $s_evolution_status_waiting_moa_email_french, $s_evolution_status_waiting_moa_email_english, $s_evolution_status_accepted_email_french, $s_evolution_status_accepted_email_english, $s_evolution_status_cancel_email_french, $s_evolution_status_cancel_email_english;
+
+	# get the conf instance file
+	$t_project_id = $p_project_id;
+	if (file_exists(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php')) {
+		$t_file = file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php');
+		#current fields
+		$t_line = get_line_in_file($t_file, "#fields") + 1;
+		$t_fields = '$g_bug_report_page_fields = array(' . "\n";
+		foreach ($g_evolution_report_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_view_page_fields = array(' . "\n";
+		foreach ($g_evolution_view_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_print_page_fields = array(' . "\n";
+		foreach ($g_evolution_print_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_update_page_fields = array(' . "\n";
+		foreach ($g_evolution_update_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_fields .= '$g_bug_change_status_page_fields = array(' . "\n";
+		foreach ($g_evolution_change_status_page_fields as $t_field) {
+			$t_fields .= "\t '" . $t_field . "', \n";
+		}
+		$t_fields .= ");\n";
+		$t_file = insert_in_file($t_file, $t_fields, $t_line);
+		#priority field
+		$t_line = get_line_in_file($t_file, "#priority") + 1;
+		$t_field = '$g_allow_no_priority = ' . $g_evolution_allow_no_priority . ";\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#category field
+		$t_line = get_line_in_file($t_file, "#category") + 1;
+		$t_field = '$g_allow_no_category = ' . $g_evolution_allow_no_category . ";\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#status
+		$t_line = get_line_in_file($t_file, "#status") + 1;
+		$t_field = '$g_fixed_status = ' . $g_evolution_fixed_status . ";\n";
+		$t_field .= '$g_status_enum_string = \'' . $g_evolution_status . "';\n";
+		$t_field .= '$g_status_fixed = array(';
+		foreach ($g_evolution_status_fixed as $status) {
+			$t_field .= "'$status', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_language_status = array(';
+		foreach ($g_management_language_status as $language) {
+			$t_field .= "'$language', ";
+		}
+		$t_field .= ");\n";
+		$t_field .= '$g_status_colors = array(' . "\n";
+		foreach ($g_evolution_status_colors as $status => $color) {
+			$t_field .= "\t'$status' => '$color',\n";
+		}
+		$t_field .= "\t);\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#name status
+		$t_line = get_line_in_file($t_file, "#name") + 1;
+		$t_field = '$s_status_enum_string_french = \'' . $s_evolution_status_french . "';\n";
+		$t_field .= '$s_status_enum_string_english = \'' . $s_evolution_status_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#title status
+		$t_line = get_line_in_file($t_file, "#title") + 1;
+		$t_field = '$s_new_bug_title_french = \'' . $s_evolution_status_new_title_french . "';\n";
+		$t_field .= '$s_new_bug_title_english = \'' . $s_evolution_status_new_title_english . "';\n";
+		$t_field .= '$s_waiting_encryption_bug_title_french = \'' . $s_evolution_status_waiting_encryption_title_french . "';\n";
+		$t_field .= '$s_waiting_encryption_bug_title_english = \'' . $s_evolution_status_waiting_encryption_title_english . "';\n";
+		$t_field .= '$s_waiting_moa_bug_title_french = \'' . $s_evolution_status_waiting_moa_title_french . "';\n";
+		$t_field .= '$s_waiting_moa_bug_title_english = \'' . $s_evolution_status_waiting_moa_title_english . "';\n";
+		$t_field .= '$s_accepted_bug_title_french = \'' . $s_evolution_status_accepted_title_french . "';\n";
+		$t_field .= '$s_accepted_bug_title_english = \'' . $s_evolution_status_accepted_title_english . "';\n";
+		$t_field .= '$s_cancel_bug_title_french = \'' . $s_evolution_status_cancel_title_french . "';\n";
+		$t_field .= '$s_cancel_bug_title_english = \'' . $s_evolution_status_cancel_title_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#button status
+		$t_line = get_line_in_file($t_file, "#button") + 1;
+		$t_field = '$s_new_bug_button_french = \'' . $s_evolution_status_new_button_french . "';\n";
+		$t_field .= '$s_new_bug_button_english = \'' . $s_evolution_status_new_button_english . "';\n";
+		$t_field .= '$s_waiting_encryption_bug_button_french = \'' . $s_evolution_status_waiting_encryption_button_french . "';\n";
+		$t_field .= '$s_waiting_encryption_bug_button_english = \'' . $s_evolution_status_waiting_encryption_button_english . "';\n";
+		$t_field .= '$s_waiting_moa_bug_button_french = \'' . $s_evolution_status_waiting_moa_button_french . "';\n";
+		$t_field .= '$s_waiting_moa_bug_button_english = \'' . $s_evolution_status_waiting_moa_button_english . "';\n";
+		$t_field .= '$s_accepted_bug_button_french = \'' . $s_evolution_status_accepted_button_french . "';\n";
+		$t_field .= '$s_accepted_bug_button_english = \'' . $s_evolution_status_accepted_button_english . "';\n";
+		$t_field .= '$s_cancel_bug_button_french = \'' . $s_evolution_status_cancel_button_french . "';\n";
+		$t_field .= '$s_cancel_bug_button_english = \'' . $s_evolution_status_cancel_button_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		#email status
+		$t_line = get_line_in_file($t_file, "#email") + 1;
+		$t_field = '$s_email_notification_title_for_status_bug_new_french = \'' . $s_evolution_status_new_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_new_english = \'' . $s_evolution_status_new_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_waiting_encryption_french = \'' . $s_evolution_status_waiting_encryption_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_waiting_encryption_english = \'' . $s_evolution_status_waiting_encryption_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_waiting_moa_french = \'' . $s_evolution_status_waiting_moa_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_waiting_moa_english = \'' . $s_evolution_status_waiting_moa_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_accepted_french = \'' . $s_evolution_status_accepted_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_accepted_english = \'' . $s_evolution_status_accepted_email_english . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_cancel_french = \'' . $s_evolution_status_cancel_email_french . "';\n";
+		$t_field .= '$s_email_notification_title_for_status_bug_cancel_english = \'' . $s_evolution_status_cancel_email_english . "';\n";
+		$t_file = insert_in_file($t_file, $t_field, $t_line);
+		# --Update File--
+		write_file(BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance' . DIRECTORY_SEPARATOR . 'config_status_' . $t_project_id . '.php', $t_file);
+		return true;
+	} else {
+		return false;
+	}
+}
+?>
diff -rNU5 mantisbt-1.2.5/api/soap/mc_project_api.php mantis_ard/api/soap/mc_project_api.php
--- mantisbt-1.2.5/api/soap/mc_project_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/api/soap/mc_project_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -72,10 +72,42 @@
 
 	return $t_result;
 }
 
 /**
+ * Get (only) the id and name for all projects accessible by the given user.
+ *
+ * @param string $p_username  The name of the user trying to access the project list.
+ * @param string $p_password  The password of the user.
+ * @return Array  suitable to be converted into a ProjectDataArray
+ */
+function mc_projects_get_names_user_accessible( $p_username, $p_password ) {
+	$t_user_id = mci_check_login( $p_username, $p_password );
+	if( $t_user_id === false ) {
+		return new soap_fault( 'Client', '', 'Access Denied' );
+	}
+
+	if( !mci_has_readonly_access( $t_user_id ) ) {
+		return new soap_fault( 'Client', '', 'Access Denied' );
+	}
+
+	$t_lang = mci_get_user_lang( $t_user_id );
+
+	$t_result = array();
+	foreach( user_get_accessible_projects( $t_user_id ) as $t_project_id ) {
+		$t_project_row = project_cache_row( $t_project_id );
+		$t_project = array();
+		$t_project['id'] = $t_project_id;
+		$t_project['name'] = $t_project_row['name'];
+		$t_project['subprojects'] = mci_user_get_names_accessible_subprojects( $t_user_id, $t_project_id, $t_lang );
+		$t_result[] = $t_project;
+	}
+
+	return $t_result;
+}
+
+/**
  * Get all categories of a project.
  *
  * @param string $p_username  The name of the user trying to access the categories.
  * @param string $p_password  The password of the user.
  * @param integer $p_project_id  The id of the project to retrieve the categories for.
@@ -748,20 +780,43 @@
 		$t_inherit_global = $p_project['inherit_global'];
 	} else {
 		$t_inherit_global = true;
 	}
 	
+	if ( isset( $p_project['parent_id'] ) ) {
+		$t_parent_id = $p_project['parent_id'];
+		if ( !project_exists( $t_parent_id ) ) {
+			return new soap_fault( 'Client', '', 'Parent project does not exist', '');
+		}
+	} else {
+		$t_parent_id = false;
+	}
+
 	// check to make sure project doesn't already exist
 	if( !project_is_name_unique( $t_name ) ) {
 		return new soap_fault( 'Client', '', 'Project name exists', 'The project name you attempted to add exists already' );
 	}
 
 	$t_project_status = mci_get_project_status_id( $t_status );
-	$t_project_view_state = mci_get_project_view_state_id( $t_view_state );
+	//$t_project_view_state = mci_get_project_view_state_id( $t_view_state );
+	$t_project_view_state = db_prepare_int( $t_view_state['id'] );
+
+	// project_create returns the new project's id
+	$t_project_id = project_create( $t_name, $t_description, $t_project_status, $t_project_view_state, $t_file_path, $t_enabled, $t_inherit_global );
+
+	// link new project to a parent project, if one has been specified
+	if ( $t_parent_id ) {
+		// link to parent
+		project_hierarchy_add($t_project_id, $t_parent_id);
+
+		// copy custom fields from parent
+		project_copy_custom_fields($t_project_id, $t_parent_id);
+	}
+	instance_configuration_create($t_project_id);
+	// return id of new project back to caller
+	return $t_project_id;
 
-	// project_create returns the new project's id, spit that out to webservice caller
-	return project_create( $t_name, $t_description, $t_project_status, $t_project_view_state, $t_file_path, $t_enabled, $t_inherit_global );
 }
 
 /**
  * Update a project
  *
@@ -803,26 +858,27 @@
     } else {
         $t_description = $p_project['description'];
     }
 
     if ( !isset( $p_project['status'] ) ) {
-        $t_status = project_get_field( $p_project_id, 'status' );
+        $t_project_status = project_get_field( $p_project_id, 'status' );
     } else {
-        $t_status = $p_project['status'];
+    	$t_project_status = mci_get_project_status_id( $p_project['status'] );
     }
 
     if ( !isset( $p_project['view_state'] ) ) {
-        $t_view_state = project_get_field( $p_project_id, 'view_state' );
+        $t_project_view_state = project_get_field( $p_project_id, 'view_state' );
     } else {
-        $t_view_state = $p_project['view_state'];
-    }
-
+    	$t_project_view_state = mci_get_project_view_state_id( $p_project['view_state'] );
+    }	
     if ( !isset( $p_project['file_path'] ) ) {
         $t_file_path = project_get_field( $p_project_id, 'file_path' );
     } else {
         $t_file_path = $p_project['file_path'];
     }
+    //TODO error on this field
+    //$t_file_path='';
 
     if ( !isset( $p_project['enabled'] ) ) {
         $t_enabled = project_get_field( $p_project_id, 'enabled' );
     } else {
         $t_enabled = $p_project['enabled'];
@@ -832,13 +888,10 @@
         $t_inherit_global = project_get_field( $p_project_id, 'inherit_global' );
     } else {
         $t_inherit_global = $p_project['inherit_global'];
     }
 
-    $t_project_status = mci_get_project_status_id( $t_status );
-    $t_project_view_state = mci_get_project_view_state_id( $t_view_state );
-
     return project_update( $p_project_id, $t_name, $t_description, $t_project_status, $t_project_view_state, $t_file_path, $t_enabled, $t_inherit_global );
 }
 
 /**
  * Delete a project.
@@ -914,10 +967,74 @@
 
 	return $t_result;
 }
 
 /**
+ * Link a user to a project with a specified access level.
+ *
+ * @param string $p_username  The name of the user trying to add the user (must be administrator)
+ * @param string $p_password  The password of the user.
+ * @param integer $p_project_id  The id of the project to link user to.
+ * @param integer $p_user_id  The id of the user to link to the project.
+ * @param integer $p_access access level.
+ * @return bool returns true or false depending on the success of the action
+ */
+function mc_project_add_user( $p_username, $p_password, $p_project_id, $p_user_id, $p_access ) {
+	$t_user_id = mci_check_login( $p_username, $p_password );
+	if ( $t_user_id === false ) {
+		return new soap_fault( 'Client', '', 'Access Denied' );
+	}
+	if ( !mci_has_administrator_access( $t_user_id ) ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+
+	if ( !project_exists( $p_project_id ) ) {
+		return new soap_fault( 'Client', '', "Project '$p_project_id' does not exist." );
+	}
+	if ( !user_exists( $p_user_id ) ) {
+		return new soap_fault( 'Client', '', "User '$p_user_id' does not exist." );
+	}
+
+	// add the user to the project
+	$t_status = project_set_user_access( $p_project_id, $p_user_id, $p_access );
+
+	return $t_status;
+}
+
+/**
+ * Remove a user from a project.
+ *
+ * @param string $p_username  The name of the user trying to add the user (must be administrator)
+ * @param string $p_password  The password of the user.
+ * @param integer $p_project_id  The id of the project to link user to.
+ * @param integer $p_user_id  The id of the user to link to the project.
+ * @return bool returns true or false depending on the success of the action
+ */
+function mc_project_remove_user( $p_username, $p_password, $p_project_id, $p_user_id ) {
+	$t_user_id = mci_check_login( $p_username, $p_password );
+	if ( $t_user_id === false ) {
+		return new soap_fault( 'Client', '', 'Access Denied' );
+	}
+	if ( !mci_has_administrator_access( $t_user_id ) ) {
+		return new soap_fault( 'Client', '', 'Access Denied', 'User does not have administrator access');
+	}
+
+	if ( !project_exists( $p_project_id ) ) {
+		return new soap_fault( 'Client', '', "Project '$p_project_id' does not exist." );
+	}
+	if ( !user_exists( $p_user_id ) ) {
+		return new soap_fault( 'Client', '', "User '$p_user_id' does not exist." );
+	}
+
+	// add the user to the project
+	project_remove_user( $p_project_id, $p_user_id );
+
+	return true;
+}
+
+
+/**
  * Get appropriate users assigned to a project by access level.
  *
  * @param string $p_username  The name of the user trying to access the versions.
  * @param string $p_password  The password of the user.
  * @param integer $p_project_id  The id of the project to retrieve the users for.
@@ -965,5 +1082,9 @@
 		// contain email fields).
 		$t_result[] = mci_account_get_array_by_id( $t_row['id'] );
 	}
 	return $t_result;
 }
+
+
+
+
diff -rNU5 mantisbt-1.2.5/api/soap/test.php mantis_ard/api/soap/test.php
--- mantisbt-1.2.5/api/soap/test.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/api/soap/test.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,72 @@
+<?php
+
+// NuSOAP already performs compression,
+// so we prevent a double-compression.
+// See issue #11868 for details
+define( 'COMPRESSION_DISABLED', true);
+ini_set( 'zlib.output_compression', false );
+
+set_include_path( '../../library' );
+require_once( 'nusoap/nusoap.php' );
+
+# create server
+$l_oServer = new soap_server();
+
+# namespace
+$t_namespace = 'http://novaforge.bull.net';
+
+# wsdl generation
+$l_oServer->debug_flag = false;
+$l_oServer->configureWSDL( 'NovaForge', $t_namespace );
+$l_oServer->wsdl->schemaTargetNamespace = $t_namespace;
+$l_oServer->xml_encoding = "UTF-8";
+$l_oServer->soap_defencoding = "UTF-8";
+$l_oServer->decode_utf8 = false;
+$l_oServer->style = 'document';
+
+$l_oServer->register( 'hello',
+	array(
+		'world'	=>	'xsd:string',
+	),
+	array(
+		'return'	=>	'xsd:string'
+	),
+	$t_namespace,
+	false, false, false,
+	'Return hello world.'
+);
+
+function hello($world) {
+return 'hello ' . $world;
+}
+function mci_is_webservice_call( $p_service, $p_data )
+{
+	global $QUERY_STRING;
+	global $_SERVER;
+
+	if ( isset( $_SERVER['QUERY_STRING'] ) ) {
+		$t_qs = $_SERVER['QUERY_STRING'];
+	} else if( isset( $GLOBALS['QUERY_STRING'] ) ) {
+		$t_qs = $GLOBALS['QUERY_STRING'];
+	} else if( isset( $QUERY_STRING ) && $QUERY_STRING != '' ) {
+		$t_qs = $QUERY_STRING;
+	}
+
+	if ( isset( $t_qs ) && preg_match( '/wsdl/', $t_qs ) ){
+		return false;
+	} else if ( $p_data == '' && $p_service->wsdl ) {
+		return false;
+	} else {
+		return true;
+	}
+}
+
+# pass incoming (posted) data
+if ( isset( $HTTP_RAW_POST_DATA ) ) {
+	$t_input = $HTTP_RAW_POST_DATA;
+} else {
+	$t_input = implode( "\r\n", file( 'php://input' ) );
+}
+
+# Execute whatever is requested from the webservice.
+$l_oServer->service( $t_input );
diff -rNU5 mantisbt-1.2.5/birt/generate_report_birt.php mantis_ard/birt/generate_report_birt.php
--- mantisbt-1.2.5/birt/generate_report_birt.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/birt/generate_report_birt.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,74 @@
+<?php
+# Appel de la génération d'un rapport BIRT (par projet) et affichage en .pdf/.doc
+
+	require_once( '../core.php' );
+	
+	# Vérification de l'authentification de l'utilisateur
+	if ( auth_forge_attempt_login( array_merge($_GET, $_POST) , false ) ) {
+		session_set( 'secure_session', true );
+	} else{
+		// Redirection vers la page de login si l'user n'est pas authentifié...
+		print_header_redirect( '../login_page.php' );
+	}
+	
+	# Récupération du projet concerné
+	if ( isset( $_GET[ 'instance_id'] ))
+	{	
+		ini_set("soap.wsdl_cache_enabled", "0");
+		$instance_id = $_GET[ 'instance_id'];
+		
+        $clientSOAP = new nusoap_client(config_get( 'instance_wsdl' ),true);
+        $clientSOAP->setUseCurl(false);
+        $result = $clientSOAP->call(config_get( 'instance_method' ), array('arg0' => $instance_id));         
+		// Check for a fault
+		if ($clientSOAP->fault) {
+			error_log( "fault :'" . $result['faultstring'] ."'");
+			// TODO : message d'erreur pour sélection projet
+			print_header_redirect( '../my_view_page.php' );
+		} else {
+			// Check for errors
+			$err = $clientSOAP->getError();
+			if ($err) {
+				// Display the error
+				error_log( "err :'" . $err ."'");
+				// TODO : message d'erreur pour sélection projet
+				print_header_redirect(  '../my_view_page.php' );
+			} else {
+				$project_id = $result['return'];
+				
+				if($project_id > 0){
+					// On en profite pour récupérer aussi le nom du projet
+					$project_name = project_get_name($project_id, false);
+				} else{
+					print_header_redirect(  '../my_view_page.php' );
+				}
+			}
+		}
+	} else{
+		// On renvoit vers la page par défaut de Mantis
+		// TODO : à  modifier pour les futurs rapports
+		print_header_redirect( config_get( 'default_home_page' ) );
+	}
+	
+	# On vérifie si les rapports n'ont pas déjà  été générés (granularité actuelle : minute), sinon on appele le shell de génération
+	//$date = date('YmdHi');
+	$date = date('YmdH');
+	$resultat = shell_exec( 'ls -al /datas/novaforge3/datas/birt-report/www/birt/anomalies_' . $project_id . '_' . $date . '*' );
+	if ( $resultat == NULL) {
+		// Appel du scrip shell de génération BIRT (param 1 : id du projet, param 2 : AAAAMMJJhhmm)
+		$resultat = shell_exec( '/datas/novaforge3/bin/birt_report_forge.sh ' . $project_id . ' ' . $date );
+	} else  {
+		// Le rapport a déjà  été généré
+		//echo 'Utilisation de rapports déjà  générés...<br/>';
+	}
+
+//TODO : Gérer erreur et afficher message le cas échéant
+?>
+
+<div width="100%">
+	<div align="center"><h2>Rapport de qualimétrie pour le projet : <?php echo $project_name; ?></h2></div>
+</div>
+<div width="100%">
+	<div align="center"><b>PDF : </b><a href="/birt/anomalies_<?php echo $project_id; ?>_<?php echo $date; ?>.pdf"><img src="../images/fileicons/pdf.gif"/></a><div>
+	<div align="center"><b>DOC : </b><a href="/birt/anomalies_<?php echo $project_id; ?>_<?php echo $date; ?>.doc"><img src="../images/fileicons/doc.gif"/></a></div>
+<div>
diff -rNU5 mantisbt-1.2.5/birt/generate_report_birt.php.ori mantis_ard/birt/generate_report_birt.php.ori
--- mantisbt-1.2.5/birt/generate_report_birt.php.ori	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/birt/generate_report_birt.php.ori	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,74 @@
+<?php
+# Appel de la génération d'un rapport BIRT (par projet) et affichage en .pdf/.doc
+
+	require_once( '../core.php' );
+	
+	# Vérification de l'authentification de l'utilisateur
+	if ( auth_forge_attempt_login( array_merge($_GET, $_POST) , false ) ) {
+		session_set( 'secure_session', true );
+	} else{
+		// Redirection vers la page de login si l'user n'est pas authentifié...
+		print_header_redirect( '../login_page.php' );
+	}
+	
+	# Récupération du projet concerné
+	if ( isset( $_GET[ 'instance_id'] ))
+	{	
+		ini_set("soap.wsdl_cache_enabled", "0");
+		$instance_id = $_GET[ 'instance_id'];
+		
+        $clientSOAP = new nusoap_client(config_get( 'instance_wsdl' ),true);
+        $clientSOAP->setUseCurl(false);
+        $result = $clientSOAP->call(config_get( 'instance_method' ), array('arg0' => $instance_id));         
+		// Check for a fault
+		if ($clientSOAP->fault) {
+			error_log( "fault :'" . $result['faultstring'] ."'");
+			// TODO : message d'erreur pour sélection projet
+			print_header_redirect( '../my_view_page.php' );
+		} else {
+			// Check for errors
+			$err = $clientSOAP->getError();
+			if ($err) {
+				// Display the error
+				error_log( "err :'" . $err ."'");
+				// TODO : message d'erreur pour sélection projet
+				print_header_redirect(  '../my_view_page.php' );
+			} else {
+				$project_id = $result['return'];
+				
+				if($project_id > 0){
+					// On en profite pour récupérer aussi le nom du projet
+					$project_name = project_get_name($project_id, false);
+				} else{
+					print_header_redirect(  '../my_view_page.php' );
+				}
+			}
+		}
+	} else{
+		// On renvoit vers la page par défaut de Mantis
+		// TODO : à  modifier pour les futurs rapports
+		print_header_redirect( config_get( 'default_home_page' ) );
+	}
+	
+	# On vérifie si les rapports n'ont pas déjà  été générés (granularité actuelle : minute), sinon on appele le shell de génération
+	//$date = date('YmdHi');
+	$date = date('YmdH');
+	$resultat = shell_exec( 'ls -al SED_BIRT_WWWW_HOME/anomalies_' . $project_id . '_' . $date . '*' );
+	if ( $resultat == NULL) {
+		// Appel du scrip shell de génération BIRT (param 1 : id du projet, param 2 : AAAAMMJJhhmm)
+		$resultat = shell_exec( 'SED_SHELL_REPORT_BIRT ' . $project_id . ' ' . $date );
+	} else  {
+		// Le rapport a déjà  été généré
+		//echo 'Utilisation de rapports déjà  générés...<br/>';
+	}
+
+//TODO : Gérer erreur et afficher message le cas échéant
+?>
+
+<div width="100%">
+	<div align="center"><h2>Rapport de qualimétrie pour le projet : <?php echo $project_name; ?></h2></div>
+</div>
+<div width="100%">
+	<div align="center"><b>PDF : </b><a href="/birt/anomalies_<?php echo $project_id; ?>_<?php echo $date; ?>.pdf"><img src="../images/fileicons/pdf.gif"/></a><div>
+	<div align="center"><b>DOC : </b><a href="/birt/anomalies_<?php echo $project_id; ?>_<?php echo $date; ?>.doc"><img src="../images/fileicons/doc.gif"/></a></div>
+<div>
diff -rNU5 mantisbt-1.2.5/birt/resources/prism.rptdesign mantis_ard/birt/resources/prism.rptdesign
--- mantisbt-1.2.5/birt/resources/prism.rptdesign	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/birt/resources/prism.rptdesign	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,2584 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
+    <property name="createdBy">Eclipse BIRT Designer Version 3.7.2.v20120213 Build &lt;3.7.2.v20120214-1408></property>
+    <list-property name="propertyBindings">
+        <structure>
+            <property name="name">queryText</property>
+            <property name="id">222</property>
+        </structure>
+        <structure>
+            <property name="name">queryTimeOut</property>
+            <property name="id">222</property>
+        </structure>
+        <structure>
+            <property name="name">rowFetchSize</property>
+            <property name="id">222</property>
+        </structure>
+    </list-property>
+    <property name="units">in</property>
+    <method name="initialize"><![CDATA[var green = "#45DB2B";
+/**
+* 
+*/
+function calculateSuccesChance(val){
+	var result;
+	if(val<7){
+	  result = 6;
+	}
+	else if(val<13)
+	{
+	  result = 5;
+	} 
+	else if(val<15)
+	{
+	  result = 4,5;
+	} 
+	else if(val<16)
+	{
+	  result = 4+(15-val)/2;
+	}
+	else if(val<17)
+	{
+	  result = 3,5+(16-val)*3/2;
+	} 
+	else if(val<22)
+	{
+	  result = 2;
+	} 
+	else if(val<=23)
+	{
+	  result = 2,5;
+	} 
+	else if(val<=28)
+	{
+	  result = 1;
+	}
+	else
+	{
+	  result = 0;
+	}
+	return result;
+}
+
+
+
+function calculateColor(val){
+	var result;
+	if (val < 2.0){
+		result = green;
+	}else if (val <= 3.0){
+		result = "orange";
+	}else {
+		result = "red";
+	}
+	return result;
+}
+
+function calculateTotalColor(val){
+	var result;
+	if (val < 2.0){
+		result = "red";
+	}else if (val < 4.0){
+		result = "orange";
+	}else {
+		result = green;
+	}
+	return result;
+}
+
+function showCurrentDate(){
+	var date = new Date();
+	
+	return showDate(date);
+}
+
+function showSQLDate(stringDate){
+
+	"2012-04-12"
+	var y = stringDate.substr(0,4);
+    var m = stringDate.substr(5,2);
+    var d = stringDate.substr(8,2);
+    return '' + d +'/'+ m +'/'+ y;
+	
+}
+
+
+function showDate(date){
+	var d = date.getDate();
+    var m = date.getMonth()+1;
+    var y = date.getFullYear();
+    return '' + (d<=9?'0'+d:d) +'/'+ (m<=9?'0'+m:m) +'/'+ y;
+}
+
+
+function getFrenchName(label){
+	
+	var result = label;
+
+	switch (label) {
+		 case 'duration':
+		 	result = 'durée';
+		 	break;
+		 case 'integrity':
+		 	result = 'intégrité';
+		 	break;
+		 case 'management_commitment':
+		 	result = 'engagement management';
+		 	break;
+		 case 'team_commitment':
+		 	result = 'engagement équipe';
+		 	break;
+ 		 case 'effort':
+		 	result = 'effort';
+		 	break;
+ 		 case 'others':
+		 	result = 'autre';
+		 	break;
+		 default: 
+		 	break;
+	}
+	return result;
+}
+
+
+]]></method>
+    <property name="iconFile">/templates/blank_report.gif</property>
+    <property name="bidiLayoutOrientation">ltr</property>
+    <property name="imageDPI">96</property>
+    <parameters>
+        <scalar-parameter name="projectId" id="242">
+            <property name="valueType">static</property>
+            <property name="dataType">string</property>
+            <property name="distinct">true</property>
+            <simple-property-list name="defaultValue">
+                <value type="constant">338</value>
+            </simple-property-list>
+            <list-property name="selectionList"/>
+            <property name="paramType">simple</property>
+            <property name="controlType">text-box</property>
+            <structure name="format">
+                <property name="category">Unformatted</property>
+            </structure>
+        </scalar-parameter>
+    </parameters>
+    <data-sources>
+        <oda-data-source extensionID="org.eclipse.birt.report.data.oda.jdbc" name="PrismDataSource" id="7">
+            <list-property name="privateDriverProperties">
+                <ex-property>
+                    <name>metadataBidiFormatStr</name>
+                    <value>ILYNN</value>
+                </ex-property>
+                <ex-property>
+                    <name>disabledMetadataBidiFormatStr</name>
+                </ex-property>
+                <ex-property>
+                    <name>contentBidiFormatStr</name>
+                    <value>ILYNN</value>
+                </ex-property>
+                <ex-property>
+                    <name>disabledContentBidiFormatStr</name>
+                </ex-property>
+            </list-property>
+            <property name="odaDriverClass">com.mysql.jdbc.Driver</property>
+            <property name="odaURL">jdbc:mysql://localhost:3306/mantisARD</property>
+            <property name="odaUser">root</property>
+            <encrypted-property name="odaPassword" encryptionID="base64">cm9vdA==</encrypted-property>
+        </oda-data-source>
+    </data-sources>
+    <data-sets>
+        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="IndicateurGlobalDataSet" id="8">
+            <list-property name="parameters">
+                <structure>
+                    <property name="name">project_id</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">1</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+                <structure>
+                    <property name="name">project_id_2</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">2</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+                <structure>
+                    <property name="name">project_id_3</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">3</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+            </list-property>
+            <structure name="cachedMetaData">
+                <list-property name="resultSet">
+                    <structure>
+                        <property name="position">1</property>
+                        <property name="name">name</property>
+                        <property name="dataType">string</property>
+                    </structure>
+                    <structure>
+                        <property name="position">2</property>
+                        <property name="name">actual</property>
+                        <property name="dataType">float</property>
+                    </structure>
+                    <structure>
+                        <property name="position">3</property>
+                        <property name="name">previous</property>
+                        <property name="dataType">float</property>
+                    </structure>
+                    <structure>
+                        <property name="position">4</property>
+                        <property name="name">date_modified</property>
+                        <property name="dataType">date</property>
+                    </structure>
+                </list-property>
+            </structure>
+            <property name="dataSource">PrismDataSource</property>
+            <list-property name="resultSet">
+                <structure>
+                    <property name="position">1</property>
+                    <property name="name">name</property>
+                    <property name="nativeName">name</property>
+                    <property name="dataType">string</property>
+                </structure>
+                <structure>
+                    <property name="position">2</property>
+                    <property name="name">actual</property>
+                    <property name="nativeName">actual</property>
+                    <property name="dataType">float</property>
+                </structure>
+                <structure>
+                    <property name="position">3</property>
+                    <property name="name">previous</property>
+                    <property name="nativeName">previous</property>
+                    <property name="dataType">float</property>
+                </structure>
+                <structure>
+                    <property name="position">4</property>
+                    <property name="name">date_modified</property>
+                    <property name="nativeName">date_modified</property>
+                    <property name="dataType">date</property>
+                </structure>
+            </list-property>
+            <xml-property name="queryText"><![CDATA[select name,
+(select ROUND(histoLast.evaluation, 2)  from mantis_risk_evaluation_history_table histoLast where cat.id = histoLast.category_id and histo.project_id = ? order by histoLast.date_modified Desc limit 1) as actual,
+(select ROUND(histoPrev.evaluation, 2) from mantis_risk_evaluation_history_table histoPrev where cat.id = histoPrev.category_id and histo.project_id = ? order by histoPrev.date_modified Desc limit 1,1) as previous,
+histo.date_modified
+from mantis_risk_evaluation_history_table histo
+left outer join mantis_category_table cat on cat.id = histo.category_id and cat.project_id = -1
+where histo.category_id <> 0 and histo.project_id = ?
+group by histo.date_modified, histo.category_id
+order by histo.date_modified DESC
+limit 6 ]]></xml-property>
+            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
+<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
+  <Version>2.0</Version>
+  <design:ResultSets derivedMetaData="true">
+    <design:resultSetDefinitions>
+      <design:resultSetColumns>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>id</design:name>
+              <design:position>1</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>10</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>NotNullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>id</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>id</design:label>
+            <design:formattingHints>
+              <design:displaySize>10</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>category_id</design:name>
+              <design:position>2</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>10</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>NotNullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>category_id</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>category_id</design:label>
+            <design:formattingHints>
+              <design:displaySize>10</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>evaluation</design:name>
+              <design:position>3</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>7</design:nativeDataTypeCode>
+            <design:precision>12</design:precision>
+            <design:scale>31</design:scale>
+            <design:nullability>NotNullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>evaluation</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>evaluation</design:label>
+            <design:formattingHints>
+              <design:displaySize>12</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>date_modified</design:name>
+              <design:position>4</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>10</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>NotNullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>date_modified</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>date_modified</design:label>
+            <design:formattingHints>
+              <design:displaySize>10</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>id</design:name>
+              <design:position>5</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>10</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>id</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>id</design:label>
+            <design:formattingHints>
+              <design:displaySize>10</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>project_id</design:name>
+              <design:position>6</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>10</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>project_id</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>project_id</design:label>
+            <design:formattingHints>
+              <design:displaySize>10</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>user_id</design:name>
+              <design:position>7</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>10</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>user_id</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>user_id</design:label>
+            <design:formattingHints>
+              <design:displaySize>10</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>name</design:name>
+              <design:position>8</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>12</design:nativeDataTypeCode>
+            <design:precision>128</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>name</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>name</design:label>
+            <design:formattingHints>
+              <design:displaySize>128</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>status</design:name>
+              <design:position>9</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>10</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>status</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>status</design:label>
+            <design:formattingHints>
+              <design:displaySize>10</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+      </design:resultSetColumns>
+      <design:criteria/>
+    </design:resultSetDefinitions>
+  </design:ResultSets>
+</model:DesignValues>]]></xml-property>
+        </oda-data-set>
+        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="TotalDataSet" id="182">
+            <list-property name="parameters">
+                <structure>
+                    <property name="name">project_id</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">1</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+                <structure>
+                    <property name="name">project_id_2</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">2</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+                <structure>
+                    <property name="name">project_id_3</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">3</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+                <structure>
+                    <property name="name">project_id_4</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">4</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+                <structure>
+                    <property name="name">project_id_5</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">5</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+            </list-property>
+            <structure name="cachedMetaData">
+                <list-property name="resultSet">
+                    <structure>
+                        <property name="position">1</property>
+                        <property name="name">currentTotal</property>
+                        <property name="dataType">float</property>
+                    </structure>
+                    <structure>
+                        <property name="position">2</property>
+                        <property name="name">currentDate</property>
+                        <property name="dataType">date</property>
+                    </structure>
+                    <structure>
+                        <property name="position">3</property>
+                        <property name="name">previousTotal</property>
+                        <property name="dataType">float</property>
+                    </structure>
+                    <structure>
+                        <property name="position">4</property>
+                        <property name="name">previousDate</property>
+                        <property name="dataType">date</property>
+                    </structure>
+                </list-property>
+            </structure>
+            <property name="dataSource">PrismDataSource</property>
+            <list-property name="resultSet">
+                <structure>
+                    <property name="position">1</property>
+                    <property name="name">currentTotal</property>
+                    <property name="nativeName">currentTotal</property>
+                    <property name="dataType">float</property>
+                </structure>
+                <structure>
+                    <property name="position">2</property>
+                    <property name="name">currentDate</property>
+                    <property name="nativeName">currentDate</property>
+                    <property name="dataType">date</property>
+                </structure>
+                <structure>
+                    <property name="position">3</property>
+                    <property name="name">previousTotal</property>
+                    <property name="nativeName">previousTotal</property>
+                    <property name="dataType">float</property>
+                </structure>
+                <structure>
+                    <property name="position">4</property>
+                    <property name="name">previousDate</property>
+                    <property name="nativeName">previousDate</property>
+                    <property name="dataType">date</property>
+                </structure>
+            </list-property>
+            <xml-property name="queryText"><![CDATA[select 
+(select ROUND(histoLast.evaluation, 2) from mantis_risk_evaluation_history_table histoLast where histoLast.category_id = 0 and histo.project_id = ? order by histoLast.date_modified Desc limit 1) as currentTotal,
+(select histoLast.date_modified from mantis_risk_evaluation_history_table histoLast where histoLast.category_id = 0 and histo.project_id = ? order by histoLast.date_modified Desc limit 1) as currentDate,
+(select ROUND(histoPrev.evaluation, 2) from mantis_risk_evaluation_history_table histoPrev where histoPrev.category_id = 0 and histo.project_id = ? order by histoPrev.date_modified Desc limit 1,1) as previousTotal,
+(select histoPrev.date_modified from mantis_risk_evaluation_history_table histoPrev where histoPrev.category_id = 0 and histo.project_id = ? order by histoPrev.date_modified Desc limit 1,1) as previousDate
+from mantis_risk_evaluation_history_table histo
+where histo.category_id = 0 and histo.project_id = ?
+group by histo.date_modified, histo.category_id
+order by histo.date_modified DESC
+limit 1 ]]></xml-property>
+            <xml-property name="designerValues"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
+<model:DesignValues xmlns:design="http://www.eclipse.org/datatools/connectivity/oda/design" xmlns:model="http://www.eclipse.org/birt/report/model/adapter/odaModel">
+  <Version>2.0</Version>
+  <design:ResultSets derivedMetaData="true">
+    <design:resultSetDefinitions>
+      <design:resultSetColumns>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>currentTotal</design:name>
+              <design:position>1</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>8</design:nativeDataTypeCode>
+            <design:precision>19</design:precision>
+            <design:scale>2</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>currentTotal</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>currentTotal</design:label>
+            <design:formattingHints>
+              <design:displaySize>19</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>currentDate</design:name>
+              <design:position>2</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>11</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>currentDate</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>currentDate</design:label>
+            <design:formattingHints>
+              <design:displaySize>11</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>previousTotal</design:name>
+              <design:position>3</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>8</design:nativeDataTypeCode>
+            <design:precision>19</design:precision>
+            <design:scale>2</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>previousTotal</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>previousTotal</design:label>
+            <design:formattingHints>
+              <design:displaySize>19</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+        <design:resultColumnDefinitions>
+          <design:attributes>
+            <design:identifier>
+              <design:name>previousDate</design:name>
+              <design:position>4</design:position>
+            </design:identifier>
+            <design:nativeDataTypeCode>4</design:nativeDataTypeCode>
+            <design:precision>11</design:precision>
+            <design:scale>0</design:scale>
+            <design:nullability>Nullable</design:nullability>
+            <design:uiHints>
+              <design:displayName>previousDate</design:displayName>
+            </design:uiHints>
+          </design:attributes>
+          <design:usageHints>
+            <design:label>previousDate</design:label>
+            <design:formattingHints>
+              <design:displaySize>11</design:displaySize>
+            </design:formattingHints>
+          </design:usageHints>
+        </design:resultColumnDefinitions>
+      </design:resultSetColumns>
+      <design:criteria/>
+    </design:resultSetDefinitions>
+  </design:ResultSets>
+</model:DesignValues>]]></xml-property>
+        </oda-data-set>
+        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="HistogrammeDataSet" id="222">
+            <property name="nullsOrdering">nulls lowest</property>
+            <list-property name="parameters">
+                <structure>
+                    <property name="name">project_id</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">1</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+            </list-property>
+            <structure name="cachedMetaData">
+                <list-property name="resultSet">
+                    <structure>
+                        <property name="position">1</property>
+                        <property name="name">date_modified</property>
+                        <property name="dataType">date</property>
+                    </structure>
+                    <structure>
+                        <property name="position">2</property>
+                        <property name="name">val</property>
+                        <property name="dataType">float</property>
+                    </structure>
+                </list-property>
+            </structure>
+            <property name="dataSource">PrismDataSource</property>
+            <list-property name="resultSet">
+                <structure>
+                    <property name="position">1</property>
+                    <property name="name">date_modified</property>
+                    <property name="nativeName">date_modified</property>
+                    <property name="dataType">date</property>
+                </structure>
+                <structure>
+                    <property name="position">2</property>
+                    <property name="name">val</property>
+                    <property name="nativeName">val</property>
+                    <property name="dataType">float</property>
+                </structure>
+            </list-property>
+            <xml-property name="queryText"><![CDATA[select histo.date_modified, ROUND(histo.evaluation, 2) as val 
+from mantis_risk_evaluation_history_table histo 
+where histo.category_id = 0 and histo.project_id = ?
+order by histo.date_modified ]]></xml-property>
+        </oda-data-set>
+        <oda-data-set extensionID="org.eclipse.birt.report.data.oda.jdbc.JdbcSelectDataSet" name="GetNameProjectDataSet" id="272">
+            <list-property name="parameters">
+                <structure>
+                    <property name="name">project_id</property>
+                    <property name="paramName">projectId</property>
+                    <property name="dataType">integer</property>
+                    <property name="position">1</property>
+                    <property name="isInput">true</property>
+                    <property name="isOutput">false</property>
+                </structure>
+            </list-property>
+            <structure name="cachedMetaData">
+                <list-property name="resultSet">
+                    <structure>
+                        <property name="position">1</property>
+                        <property name="name">description</property>
+                        <property name="dataType">string</property>
+                    </structure>
+                </list-property>
+            </structure>
+            <property name="dataSource">PrismDataSource</property>
+            <list-property name="resultSet">
+                <structure>
+                    <property name="position">1</property>
+                    <property name="name">description</property>
+                    <property name="nativeName">description</property>
+                    <property name="dataType">string</property>
+                </structure>
+            </list-property>
+            <xml-property name="queryText"><![CDATA[select project.description 
+from `mantis_project_table` project
+inner join `mantis_project_hierarchy_table` h on h.parent_id = project.id
+where h.child_id = ?]]></xml-property>
+            <xml-property name="designerValues"><![CDATA[]]></xml-property>
+        </oda-data-set>
+    </data-sets>
+    <styles>
+        <style name="report" id="4">
+            <property name="fontFamily">sans-serif</property>
+            <property name="fontSize">10pt</property>
+        </style>
+        <style name="crosstab-cell" id="5">
+            <property name="borderBottomColor">#CCCCCC</property>
+            <property name="borderBottomStyle">solid</property>
+            <property name="borderBottomWidth">1pt</property>
+            <property name="borderLeftColor">#CCCCCC</property>
+            <property name="borderLeftStyle">solid</property>
+            <property name="borderLeftWidth">1pt</property>
+            <property name="borderRightColor">#CCCCCC</property>
+            <property name="borderRightStyle">solid</property>
+            <property name="borderRightWidth">1pt</property>
+            <property name="borderTopColor">#CCCCCC</property>
+            <property name="borderTopStyle">solid</property>
+            <property name="borderTopWidth">1pt</property>
+        </style>
+        <style name="crosstab" id="6">
+            <property name="borderBottomColor">#CCCCCC</property>
+            <property name="borderBottomStyle">solid</property>
+            <property name="borderBottomWidth">1pt</property>
+            <property name="borderLeftColor">#CCCCCC</property>
+            <property name="borderLeftStyle">solid</property>
+            <property name="borderLeftWidth">1pt</property>
+            <property name="borderRightColor">#CCCCCC</property>
+            <property name="borderRightStyle">solid</property>
+            <property name="borderRightWidth">1pt</property>
+            <property name="borderTopColor">#CCCCCC</property>
+            <property name="borderTopStyle">solid</property>
+            <property name="borderTopWidth">1pt</property>
+        </style>
+    </styles>
+    <page-setup>
+        <simple-master-page name="Simple MasterPage" id="2"/>
+    </page-setup>
+    <body>
+        <grid id="244">
+            <property name="width">7.906in</property>
+            <column id="245"/>
+            <column id="247"/>
+            <row id="248">
+                <cell id="249">
+                    <label id="263">
+                        <property name="fontWeight">bold</property>
+                        <property name="paddingRight">10pt</property>
+                        <property name="textAlign">right</property>
+                        <text-property name="text">Projet</text-property>
+                    </label>
+                </cell>
+                <cell id="251">
+                    <property name="borderBottomColor">#000000</property>
+                    <property name="borderBottomStyle">solid</property>
+                    <property name="borderLeftColor">#000000</property>
+                    <property name="borderLeftStyle">solid</property>
+                    <property name="borderRightColor">#000000</property>
+                    <property name="borderRightStyle">solid</property>
+                    <property name="borderTopColor">#000000</property>
+                    <property name="borderTopStyle">solid</property>
+                    <data id="273">
+                        <property name="fontWeight">bold</property>
+                        <property name="textAlign">center</property>
+                        <property name="dataSet">GetNameProjectDataSet</property>
+                        <list-property name="boundDataColumns">
+                            <structure>
+                                <property name="name">description</property>
+                                <text-property name="displayName">description</text-property>
+                                <expression name="expression" type="javascript">dataSetRow["description"]</expression>
+                                <property name="dataType">string</property>
+                            </structure>
+                        </list-property>
+                        <property name="resultSetColumn">description</property>
+                    </data>
+                </cell>
+            </row>
+            <row id="252">
+                <cell id="253"/>
+                <cell id="255">
+                    <label id="270">
+                        <text-property name="text"> </text-property>
+                    </label>
+                </cell>
+            </row>
+            <row id="256">
+                <cell id="257">
+                    <label id="264">
+                        <property name="fontWeight">bold</property>
+                        <property name="paddingRight">10pt</property>
+                        <property name="textAlign">right</property>
+                        <text-property name="text">Date de révision</text-property>
+                    </label>
+                </cell>
+                <cell id="259">
+                    <property name="borderBottomColor">#000000</property>
+                    <property name="borderBottomStyle">solid</property>
+                    <property name="borderLeftColor">#000000</property>
+                    <property name="borderLeftStyle">solid</property>
+                    <property name="borderRightColor">#000000</property>
+                    <property name="borderRightStyle">solid</property>
+                    <property name="borderTopColor">#000000</property>
+                    <property name="borderTopStyle">solid</property>
+                    <text-data id="271">
+                        <property name="fontWeight">bold</property>
+                        <property name="textAlign">center</property>
+                        <property name="dataSet">TotalDataSet</property>
+                        <list-property name="boundDataColumns">
+                            <structure>
+                                <property name="name">currentTotal</property>
+                                <text-property name="displayName">currentTotal</text-property>
+                                <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                <property name="dataType">float</property>
+                            </structure>
+                            <structure>
+                                <property name="name">currentDate</property>
+                                <text-property name="displayName">currentDate</text-property>
+                                <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                <property name="dataType">date</property>
+                            </structure>
+                            <structure>
+                                <property name="name">previousTotal</property>
+                                <text-property name="displayName">previousTotal</text-property>
+                                <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                <property name="dataType">float</property>
+                            </structure>
+                            <structure>
+                                <property name="name">previousDate</property>
+                                <text-property name="displayName">previousDate</text-property>
+                                <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                <property name="dataType">date</property>
+                            </structure>
+                        </list-property>
+                        <expression name="valueExpr">showSQLDate(row["currentDate"].toString())</expression>
+                        <property name="contentType">html</property>
+                    </text-data>
+                </cell>
+            </row>
+            <row id="260">
+                <cell id="261"/>
+                <cell id="262">
+                    <label id="269">
+                        <text-property name="text"> </text-property>
+                    </label>
+                </cell>
+            </row>
+        </grid>
+        <table id="154">
+            <property name="borderBottomColor">#000000</property>
+            <property name="borderBottomStyle">solid</property>
+            <property name="borderLeftColor">#000000</property>
+            <property name="borderLeftStyle">solid</property>
+            <property name="borderRightColor">#000000</property>
+            <property name="borderRightStyle">solid</property>
+            <property name="borderTopColor">#000000</property>
+            <property name="borderTopStyle">solid</property>
+            <property name="width">7.90625in</property>
+            <property name="dataSet">IndicateurGlobalDataSet</property>
+            <list-property name="boundDataColumns">
+                <structure>
+                    <property name="name">name</property>
+                    <text-property name="displayName">name</text-property>
+                    <expression name="expression" type="javascript">getFrenchName(dataSetRow["name"]);</expression>
+                    <property name="dataType">string</property>
+                    <property name="allowExport">true</property>
+                </structure>
+                <structure>
+                    <property name="name">actual</property>
+                    <text-property name="displayName">actual</text-property>
+                    <expression name="expression" type="javascript">dataSetRow["actual"]</expression>
+                    <property name="dataType">float</property>
+                    <property name="allowExport">true</property>
+                </structure>
+                <structure>
+                    <property name="name">previous</property>
+                    <text-property name="displayName">previous</text-property>
+                    <expression name="expression" type="javascript">dataSetRow["previous"]</expression>
+                    <property name="dataType">float</property>
+                </structure>
+                <structure>
+                    <property name="name">date_modified</property>
+                    <text-property name="displayName">date_modified</text-property>
+                    <expression name="expression" type="javascript">dataSetRow["date_modified"]</expression>
+                    <property name="dataType">date</property>
+                    <property name="allowExport">true</property>
+                </structure>
+            </list-property>
+            <column id="178">
+                <property name="width">3.8854166666666665in</property>
+            </column>
+            <column id="179">
+                <property name="width">2.0104166666666665in</property>
+            </column>
+            <column id="180">
+                <property name="width">2.0104166666666665in</property>
+            </column>
+            <header>
+                <row id="155">
+                    <property name="fontWeight">bold</property>
+                    <property name="borderBottomColor">#000000</property>
+                    <property name="borderBottomStyle">solid</property>
+                    <property name="borderLeftColor">#000000</property>
+                    <property name="borderLeftStyle">solid</property>
+                    <property name="borderRightColor">#000000</property>
+                    <property name="borderRightStyle">solid</property>
+                    <property name="borderTopColor">#000000</property>
+                    <property name="borderTopStyle">solid</property>
+                    <cell id="156">
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <label id="157">
+                            <text-property name="text">Facteurs</text-property>
+                        </label>
+                    </cell>
+                    <cell id="158">
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <property name="borderLeftColor">#000000</property>
+                        <property name="borderLeftStyle">solid</property>
+                        <property name="borderRightColor">#000000</property>
+                        <property name="borderRightStyle">solid</property>
+                        <text-data id="186">
+                            <property name="dataSet">TotalDataSet</property>
+                            <list-property name="boundDataColumns">
+                                <structure>
+                                    <property name="name">currentTotal</property>
+                                    <text-property name="displayName">currentTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">currentDate</property>
+                                    <text-property name="displayName">currentDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousTotal</property>
+                                    <text-property name="displayName">previousTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousDate</property>
+                                    <text-property name="displayName">previousDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                            </list-property>
+                            <expression name="valueExpr">"Actuel("+ showSQLDate(row["currentDate"].toString()) +")"</expression>
+                            <property name="contentType">html</property>
+                        </text-data>
+                    </cell>
+                    <cell id="160">
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <text-data id="187">
+                            <property name="dataSet">TotalDataSet</property>
+                            <list-property name="boundDataColumns">
+                                <structure>
+                                    <property name="name">currentTotal</property>
+                                    <text-property name="displayName">currentTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">currentDate</property>
+                                    <text-property name="displayName">currentDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousTotal</property>
+                                    <text-property name="displayName">previousTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousDate</property>
+                                    <text-property name="displayName">previousDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                            </list-property>
+                            <expression name="valueExpr">"Précédent("+showSQLDate(row["previousDate"].toString())+")"</expression>
+                            <property name="contentType">html</property>
+                        </text-data>
+                    </cell>
+                </row>
+            </header>
+            <detail>
+                <row id="164">
+                    <property name="borderBottomColor">#000000</property>
+                    <property name="borderBottomStyle">solid</property>
+                    <property name="borderBottomWidth">thin</property>
+                    <property name="borderLeftColor">#000000</property>
+                    <property name="borderLeftStyle">solid</property>
+                    <property name="borderRightColor">#000000</property>
+                    <property name="borderRightStyle">solid</property>
+                    <property name="borderTopColor">#000000</property>
+                    <property name="borderTopStyle">solid</property>
+                    <property name="borderTopWidth">thin</property>
+                    <cell id="165">
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <property name="borderBottomWidth">thin</property>
+                        <property name="borderRightColor">#000000</property>
+                        <property name="borderRightStyle">solid</property>
+                        <data id="166">
+                            <property name="resultSetColumn">name</property>
+                        </data>
+                    </cell>
+                    <cell id="167">
+                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = calculateColor(row["actual"]);]]></method>
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <property name="borderBottomWidth">thin</property>
+                        <data id="168">
+                            <property name="textAlign">center</property>
+                            <property name="resultSetColumn">actual</property>
+                        </data>
+                    </cell>
+                    <cell id="169">
+                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = calculateColor(row["previous"]);]]></method>
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <property name="borderBottomWidth">thin</property>
+                        <property name="borderLeftColor">#000000</property>
+                        <property name="borderLeftStyle">solid</property>
+                        <property name="borderRightColor">#000000</property>
+                        <property name="borderRightStyle">solid</property>
+                        <data id="170">
+                            <property name="textAlign">center</property>
+                            <property name="resultSetColumn">previous</property>
+                        </data>
+                    </cell>
+                </row>
+            </detail>
+            <footer>
+                <row id="173">
+                    <property name="fontWeight">bold</property>
+                    <property name="borderBottomColor">#000000</property>
+                    <property name="borderBottomStyle">solid</property>
+                    <property name="borderLeftColor">#000000</property>
+                    <property name="borderLeftStyle">solid</property>
+                    <property name="borderRightColor">#000000</property>
+                    <property name="borderRightStyle">solid</property>
+                    <property name="borderTopColor">#000000</property>
+                    <property name="borderTopStyle">solid</property>
+                    <cell id="174">
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <property name="borderLeftColor">#000000</property>
+                        <property name="borderLeftStyle">solid</property>
+                        <property name="borderRightColor">#000000</property>
+                        <property name="borderRightStyle">solid</property>
+                        <property name="borderTopColor">#000000</property>
+                        <property name="borderTopStyle">solid</property>
+                        <property name="paddingTop">0pt</property>
+                        <property name="paddingLeft">0pt</property>
+                        <property name="paddingBottom">0pt</property>
+                        <property name="paddingRight">0pt</property>
+                        <grid id="201">
+                            <property name="height">0.9583333333333334in</property>
+                            <column id="202"/>
+                            <row id="203">
+                                <property name="height">0.1875in</property>
+                                <cell id="204">
+                                    <property name="borderBottomColor">#000000</property>
+                                    <property name="borderBottomStyle">solid</property>
+                                    <property name="borderBottomWidth">thin</property>
+                                    <property name="paddingTop">0pt</property>
+                                    <property name="paddingLeft">0pt</property>
+                                    <property name="paddingBottom">0pt</property>
+                                    <property name="paddingRight">0pt</property>
+                                    <label id="188">
+                                        <property name="paddingTop">1pt</property>
+                                        <property name="paddingLeft">1pt</property>
+                                        <property name="paddingBottom">1pt</property>
+                                        <property name="paddingRight">1pt</property>
+                                        <text-property name="text">Total score (D+2I+2C1+C2+E) ou (D+2I+2C1+C2+E+A)*7/8</text-property>
+                                    </label>
+                                </cell>
+                            </row>
+                            <row id="205">
+                                <cell id="206">
+                                    <label id="219">
+                                        <text-property name="text">Chance de succès :&#13;
+5: Forte chance de succès&#13;
+3: Mitigé&#13;
+1:Forte chance d'échec</text-property>
+                                    </label>
+                                </cell>
+                            </row>
+                        </grid>
+                    </cell>
+                    <cell id="175">
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <property name="borderLeftColor">#000000</property>
+                        <property name="borderLeftStyle">solid</property>
+                        <property name="borderRightColor">#000000</property>
+                        <property name="borderRightStyle">solid</property>
+                        <property name="borderTopColor">#000000</property>
+                        <property name="borderTopStyle">solid</property>
+                        <property name="paddingTop">0pt</property>
+                        <property name="paddingLeft">0pt</property>
+                        <property name="paddingBottom">0pt</property>
+                        <property name="paddingRight">0pt</property>
+                        <grid id="207">
+                            <property name="height">0.9583333333333334in</property>
+                            <property name="dataSet">TotalDataSet</property>
+                            <list-property name="boundDataColumns">
+                                <structure>
+                                    <property name="name">currentTotal</property>
+                                    <text-property name="displayName">currentTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">currentDate</property>
+                                    <text-property name="displayName">currentDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousTotal</property>
+                                    <text-property name="displayName">previousTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousDate</property>
+                                    <text-property name="displayName">previousDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                            </list-property>
+                            <column id="208"/>
+                            <row id="209">
+                                <property name="height">0.1875in</property>
+                                <cell id="210">
+                                    <property name="borderBottomColor">#000000</property>
+                                    <property name="borderBottomStyle">solid</property>
+                                    <property name="borderBottomWidth">thin</property>
+                                    <property name="paddingTop">0pt</property>
+                                    <property name="paddingLeft">0pt</property>
+                                    <property name="paddingBottom">0pt</property>
+                                    <property name="paddingRight">0pt</property>
+                                    <text-data id="184">
+                                        <property name="paddingTop">1pt</property>
+                                        <property name="paddingLeft">1pt</property>
+                                        <property name="paddingBottom">1pt</property>
+                                        <property name="paddingRight">1pt</property>
+                                        <property name="textAlign">center</property>
+                                        <property name="dataSet">TotalDataSet</property>
+                                        <list-property name="boundDataColumns">
+                                            <structure>
+                                                <property name="name">currentTotal</property>
+                                                <text-property name="displayName">currentTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">currentDate</property>
+                                                <text-property name="displayName">currentDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousTotal</property>
+                                                <text-property name="displayName">previousTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousDate</property>
+                                                <text-property name="displayName">previousDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                        </list-property>
+                                        <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = calculateTotalColor(calculateSuccesChance(row["currentTotal"]));]]></method>
+                                        <expression name="valueExpr" type="javascript">row["currentTotal"]</expression>
+                                        <property name="contentType">html</property>
+                                    </text-data>
+                                </cell>
+                            </row>
+                            <row id="211">
+                                <property name="height">0.7708333333333334in</property>
+                                <cell id="212">
+                                    <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = calculateTotalColor(calculateSuccesChance(row["currentTotal"]));]]></method>
+                                    <text-data id="220">
+                                        <property name="textAlign">center</property>
+                                        <property name="dataSet">TotalDataSet</property>
+                                        <list-property name="boundDataColumns">
+                                            <structure>
+                                                <property name="name">currentTotal</property>
+                                                <text-property name="displayName">currentTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">currentDate</property>
+                                                <text-property name="displayName">currentDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousTotal</property>
+                                                <text-property name="displayName">previousTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousDate</property>
+                                                <text-property name="displayName">previousDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                        </list-property>
+                                        <expression name="valueExpr">calculateSuccesChance(row["currentTotal"]);</expression>
+                                        <property name="contentType">html</property>
+                                    </text-data>
+                                </cell>
+                            </row>
+                        </grid>
+                    </cell>
+                    <cell id="176">
+                        <property name="borderBottomColor">#000000</property>
+                        <property name="borderBottomStyle">solid</property>
+                        <property name="borderLeftColor">#000000</property>
+                        <property name="borderLeftStyle">solid</property>
+                        <property name="borderRightColor">#000000</property>
+                        <property name="borderRightStyle">solid</property>
+                        <property name="borderTopColor">#000000</property>
+                        <property name="borderTopStyle">solid</property>
+                        <property name="paddingTop">0pt</property>
+                        <property name="paddingLeft">0pt</property>
+                        <property name="paddingBottom">0pt</property>
+                        <property name="paddingRight">0pt</property>
+                        <grid id="213">
+                            <property name="height">0.9583333333333334in</property>
+                            <property name="dataSet">TotalDataSet</property>
+                            <list-property name="boundDataColumns">
+                                <structure>
+                                    <property name="name">currentTotal</property>
+                                    <text-property name="displayName">currentTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">currentDate</property>
+                                    <text-property name="displayName">currentDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousTotal</property>
+                                    <text-property name="displayName">previousTotal</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                    <property name="dataType">float</property>
+                                </structure>
+                                <structure>
+                                    <property name="name">previousDate</property>
+                                    <text-property name="displayName">previousDate</text-property>
+                                    <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                    <property name="dataType">date</property>
+                                    <property name="allowExport">true</property>
+                                </structure>
+                            </list-property>
+                            <column id="214"/>
+                            <row id="215">
+                                <property name="height">0.1875in</property>
+                                <cell id="216">
+                                    <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = calculateTotalColor(calculateSuccesChance(row["previousTotal"]));]]></method>
+                                    <property name="borderBottomColor">#000000</property>
+                                    <property name="borderBottomStyle">solid</property>
+                                    <property name="borderBottomWidth">thin</property>
+                                    <text-data id="185">
+                                        <property name="textAlign">center</property>
+                                        <property name="dataSet">TotalDataSet</property>
+                                        <list-property name="boundDataColumns">
+                                            <structure>
+                                                <property name="name">currentTotal</property>
+                                                <text-property name="displayName">currentTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">currentDate</property>
+                                                <text-property name="displayName">currentDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousTotal</property>
+                                                <text-property name="displayName">previousTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousDate</property>
+                                                <text-property name="displayName">previousDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                        </list-property>
+                                        <expression name="valueExpr">row["previousTotal"]</expression>
+                                        <property name="contentType">html</property>
+                                    </text-data>
+                                </cell>
+                            </row>
+                            <row id="217">
+                                <property name="height">0.7708333333333334in</property>
+                                <cell id="218">
+                                    <method name="onCreate"><![CDATA[this.getStyle().backgroundColor = calculateTotalColor(calculateSuccesChance(row["previousTotal"]));]]></method>
+                                    <text-data id="221">
+                                        <property name="textAlign">center</property>
+                                        <property name="dataSet">TotalDataSet</property>
+                                        <list-property name="boundDataColumns">
+                                            <structure>
+                                                <property name="name">currentTotal</property>
+                                                <text-property name="displayName">currentTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">currentDate</property>
+                                                <text-property name="displayName">currentDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["currentDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousTotal</property>
+                                                <text-property name="displayName">previousTotal</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousTotal"]</expression>
+                                                <property name="dataType">float</property>
+                                            </structure>
+                                            <structure>
+                                                <property name="name">previousDate</property>
+                                                <text-property name="displayName">previousDate</text-property>
+                                                <expression name="expression" type="javascript">dataSetRow["previousDate"]</expression>
+                                                <property name="dataType">date</property>
+                                                <property name="allowExport">true</property>
+                                            </structure>
+                                        </list-property>
+                                        <expression name="valueExpr">calculateSuccesChance(row["previousTotal"]);</expression>
+                                        <property name="contentType">html</property>
+                                    </text-data>
+                                </cell>
+                            </row>
+                        </grid>
+                    </cell>
+                </row>
+            </footer>
+        </table>
+        <extended-item extensionName="Chart" id="267">
+            <xml-property name="xmlRepresentation"><![CDATA[<model:ChartWithAxes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:data="http://www.birt.eclipse.org/ChartModelData" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:model="http://www.birt.eclipse.org/ChartModel" xmlns:type="http://www.birt.eclipse.org/ChartModelType">
+  <Version>2.5.3</Version>
+  <Type>Bar Chart</Type>
+  <SubType>Side-by-side</SubType>
+  <Block>
+    <Children xsi:type="layout:TitleBlock">
+      <Bounds>
+        <Left>0.0</Left>
+        <Top>0.0</Top>
+        <Width>0.0</Width>
+        <Height>0.0</Height>
+      </Bounds>
+      <Insets>
+        <Top>3.0</Top>
+        <Left>3.0</Left>
+        <Bottom>3.0</Bottom>
+        <Right>3.0</Right>
+      </Insets>
+      <Row>-1</Row>
+      <Column>-1</Column>
+      <Rowspan>-1</Rowspan>
+      <Columnspan>-1</Columnspan>
+      <Outline>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Color>
+        <Visible>false</Visible>
+      </Outline>
+      <Visible>true</Visible>
+      <Label>
+        <Caption>
+          <Value>Historique des Total Scores</Value>
+          <Font>
+            <Size>16.0</Size>
+            <Bold>true</Bold>
+            <Alignment>
+              <horizontalAlignment>Center</horizontalAlignment>
+              <verticalAlignment>Center</verticalAlignment>
+            </Alignment>
+          </Font>
+        </Caption>
+        <Background xsi:type="attribute:ColorDefinition">
+          <Transparency>0</Transparency>
+          <Red>255</Red>
+          <Green>255</Green>
+          <Blue>255</Blue>
+        </Background>
+        <Outline>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>0</Green>
+            <Blue>0</Blue>
+          </Color>
+        </Outline>
+        <Insets>
+          <Top>0.0</Top>
+          <Left>2.0</Left>
+          <Bottom>0.0</Bottom>
+          <Right>3.0</Right>
+        </Insets>
+        <Visible>true</Visible>
+      </Label>
+    </Children>
+    <Children xsi:type="layout:Plot">
+      <Bounds>
+        <Left>0.0</Left>
+        <Top>0.0</Top>
+        <Width>0.0</Width>
+        <Height>0.0</Height>
+      </Bounds>
+      <Insets>
+        <Top>3.0</Top>
+        <Left>3.0</Left>
+        <Bottom>3.0</Bottom>
+        <Right>3.0</Right>
+      </Insets>
+      <Row>-1</Row>
+      <Column>-1</Column>
+      <Rowspan>-1</Rowspan>
+      <Columnspan>-1</Columnspan>
+      <Outline>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Color>
+        <Visible>false</Visible>
+      </Outline>
+      <Visible>true</Visible>
+      <HorizontalSpacing>5</HorizontalSpacing>
+      <VerticalSpacing>5</VerticalSpacing>
+      <ClientArea>
+        <Outline>
+          <Style>Solid</Style>
+          <Thickness>0</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>0</Green>
+            <Blue>0</Blue>
+          </Color>
+          <Visible>false</Visible>
+        </Outline>
+        <Insets>
+          <Top>0.0</Top>
+          <Left>0.0</Left>
+          <Bottom>0.0</Bottom>
+          <Right>0.0</Right>
+        </Insets>
+      </ClientArea>
+    </Children>
+    <Children xsi:type="layout:Legend">
+      <Bounds>
+        <Left>0.0</Left>
+        <Top>0.0</Top>
+        <Width>0.0</Width>
+        <Height>0.0</Height>
+      </Bounds>
+      <Insets>
+        <Top>3.0</Top>
+        <Left>3.0</Left>
+        <Bottom>3.0</Bottom>
+        <Right>3.0</Right>
+      </Insets>
+      <Row>-1</Row>
+      <Column>-1</Column>
+      <Rowspan>-1</Rowspan>
+      <Columnspan>-1</Columnspan>
+      <Outline>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Color>
+        <Visible>false</Visible>
+      </Outline>
+      <Visible>false</Visible>
+      <ClientArea>
+        <Outline>
+          <Style>Solid</Style>
+          <Thickness>0</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>0</Green>
+            <Blue>0</Blue>
+          </Color>
+          <Visible>false</Visible>
+        </Outline>
+        <Insets>
+          <Top>2.0</Top>
+          <Left>2.0</Left>
+          <Bottom>2.0</Bottom>
+          <Right>2.0</Right>
+        </Insets>
+      </ClientArea>
+      <Text>
+        <Value></Value>
+        <Font>
+          <Alignment/>
+        </Font>
+      </Text>
+      <Orientation>Vertical</Orientation>
+      <Direction>Top_Bottom</Direction>
+      <Separator>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Color>
+        <Visible>true</Visible>
+      </Separator>
+      <Position>Right</Position>
+      <ItemType>Series</ItemType>
+      <Title>
+        <Caption>
+          <Value></Value>
+          <Font>
+            <Alignment/>
+          </Font>
+        </Caption>
+        <Background xsi:type="attribute:ColorDefinition">
+          <Transparency>0</Transparency>
+          <Red>255</Red>
+          <Green>255</Green>
+          <Blue>255</Blue>
+        </Background>
+        <Outline>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>0</Green>
+            <Blue>0</Blue>
+          </Color>
+          <Visible>false</Visible>
+        </Outline>
+        <Insets>
+          <Top>0.0</Top>
+          <Left>2.0</Left>
+          <Bottom>0.0</Bottom>
+          <Right>3.0</Right>
+        </Insets>
+        <Visible>false</Visible>
+      </Title>
+      <TitlePosition>Above</TitlePosition>
+    </Children>
+    <Bounds>
+      <Left>0.0</Left>
+      <Top>0.0</Top>
+      <Width>212.0</Width>
+      <Height>130.0</Height>
+    </Bounds>
+    <Insets>
+      <Top>3.0</Top>
+      <Left>3.0</Left>
+      <Bottom>3.0</Bottom>
+      <Right>3.0</Right>
+    </Insets>
+    <Row>-1</Row>
+    <Column>-1</Column>
+    <Rowspan>-1</Rowspan>
+    <Columnspan>-1</Columnspan>
+    <Outline>
+      <Style>Solid</Style>
+      <Thickness>1</Thickness>
+      <Color>
+        <Transparency>255</Transparency>
+        <Red>0</Red>
+        <Green>0</Green>
+        <Blue>0</Blue>
+      </Color>
+      <Visible>false</Visible>
+    </Outline>
+    <Visible>true</Visible>
+  </Block>
+  <Dimension>Two_Dimensional</Dimension>
+  <Units>Points</Units>
+  <SeriesThickness>10.0</SeriesThickness>
+  <ExtendedProperties>
+    <Name>enable.area.alt</Name>
+    <Value>false</Value>
+  </ExtendedProperties>
+  <SampleData>
+    <BaseSampleData>
+      <DataSetRepresentation>01/05/2000,02/01/2000,04/12/2000,03/12/2000,02/29/2000</DataSetRepresentation>
+    </BaseSampleData>
+    <OrthogonalSampleData>
+      <DataSetRepresentation>5,4,12</DataSetRepresentation>
+      <SeriesDefinitionIndex>0</SeriesDefinitionIndex>
+    </OrthogonalSampleData>
+  </SampleData>
+  <Interactivity/>
+  <EmptyMessage>
+    <Caption>
+      <Value>This chart contains no data.</Value>
+      <Font>
+        <Alignment>
+          <horizontalAlignment>Center</horizontalAlignment>
+          <verticalAlignment>Center</verticalAlignment>
+        </Alignment>
+      </Font>
+    </Caption>
+    <Background xsi:type="attribute:ColorDefinition">
+      <Transparency>64</Transparency>
+      <Red>127</Red>
+      <Green>127</Green>
+      <Blue>127</Blue>
+    </Background>
+    <Outline>
+      <Color>
+        <Transparency>128</Transparency>
+        <Red>127</Red>
+        <Green>127</Green>
+        <Blue>127</Blue>
+      </Color>
+      <Visible>true</Visible>
+    </Outline>
+    <Insets>
+      <Top>10.0</Top>
+      <Left>10.0</Left>
+      <Bottom>10.0</Bottom>
+      <Right>10.0</Right>
+    </Insets>
+    <Visible>false</Visible>
+  </EmptyMessage>
+  <Axes>
+    <Type>DateTime</Type>
+    <Title>
+      <Caption>
+        <Value>X-Axis Title</Value>
+        <Font>
+          <Size>14.0</Size>
+          <Bold>true</Bold>
+          <Alignment>
+            <horizontalAlignment>Center</horizontalAlignment>
+            <verticalAlignment>Center</verticalAlignment>
+          </Alignment>
+        </Font>
+      </Caption>
+      <Background xsi:type="attribute:ColorDefinition">
+        <Transparency>0</Transparency>
+        <Red>255</Red>
+        <Green>255</Green>
+        <Blue>255</Blue>
+      </Background>
+      <Outline>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Color>
+      </Outline>
+      <Insets>
+        <Top>0.0</Top>
+        <Left>2.0</Left>
+        <Bottom>0.0</Bottom>
+        <Right>3.0</Right>
+      </Insets>
+      <Visible>false</Visible>
+    </Title>
+    <TitlePosition>Below</TitlePosition>
+    <AssociatedAxes>
+      <Type>Linear</Type>
+      <Title>
+        <Caption>
+          <Value>Y-Axis Title</Value>
+          <Font>
+            <Size>14.0</Size>
+            <Bold>true</Bold>
+            <Alignment>
+              <horizontalAlignment>Center</horizontalAlignment>
+              <verticalAlignment>Center</verticalAlignment>
+            </Alignment>
+          </Font>
+        </Caption>
+        <Background xsi:type="attribute:ColorDefinition">
+          <Transparency>0</Transparency>
+          <Red>255</Red>
+          <Green>255</Green>
+          <Blue>255</Blue>
+        </Background>
+        <Outline>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>0</Green>
+            <Blue>0</Blue>
+          </Color>
+        </Outline>
+        <Insets>
+          <Top>0.0</Top>
+          <Left>2.0</Left>
+          <Bottom>0.0</Bottom>
+          <Right>3.0</Right>
+        </Insets>
+        <Visible>false</Visible>
+      </Title>
+      <TitlePosition>Left</TitlePosition>
+      <SeriesDefinitions>
+        <Query>
+          <Definition></Definition>
+        </Query>
+        <SeriesPalette>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>80</Red>
+            <Green>166</Green>
+            <Blue>218</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>242</Red>
+            <Green>88</Green>
+            <Blue>106</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>232</Red>
+            <Green>172</Green>
+            <Blue>57</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>255</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>64</Red>
+            <Green>128</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>128</Green>
+            <Blue>192</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>170</Red>
+            <Green>85</Green>
+            <Blue>85</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>128</Green>
+            <Blue>0</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>192</Red>
+            <Green>192</Green>
+            <Blue>192</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>255</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>192</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>7</Red>
+            <Green>146</Green>
+            <Blue>94</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>128</Green>
+            <Blue>255</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>128</Green>
+            <Blue>192</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>255</Green>
+            <Blue>255</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>128</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>128</Green>
+            <Blue>192</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>128</Green>
+            <Blue>192</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>0</Green>
+            <Blue>255</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>64</Green>
+            <Blue>64</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>128</Green>
+            <Blue>64</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>80</Red>
+            <Green>240</Green>
+            <Blue>120</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>64</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>0</Green>
+            <Blue>64</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>0</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>128</Green>
+            <Blue>64</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>128</Red>
+            <Green>128</Green>
+            <Blue>128</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>128</Green>
+            <Blue>255</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>64</Green>
+            <Blue>0</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>0</Green>
+            <Blue>0</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>255</Green>
+            <Blue>255</Blue>
+          </Entries>
+          <Entries xsi:type="attribute:ColorDefinition">
+            <Transparency>255</Transparency>
+            <Red>255</Red>
+            <Green>128</Green>
+            <Blue>0</Blue>
+          </Entries>
+        </SeriesPalette>
+        <Series xsi:type="type:BarSeries">
+          <Visible>true</Visible>
+          <Label>
+            <Caption>
+              <Value></Value>
+              <Font>
+                <Alignment/>
+              </Font>
+            </Caption>
+            <Background xsi:type="attribute:ColorDefinition">
+              <Transparency>0</Transparency>
+              <Red>255</Red>
+              <Green>255</Green>
+              <Blue>255</Blue>
+            </Background>
+            <Outline>
+              <Style>Solid</Style>
+              <Thickness>1</Thickness>
+              <Color>
+                <Transparency>255</Transparency>
+                <Red>0</Red>
+                <Green>0</Green>
+                <Blue>0</Blue>
+              </Color>
+              <Visible>false</Visible>
+            </Outline>
+            <Insets>
+              <Top>0.0</Top>
+              <Left>2.0</Left>
+              <Bottom>0.0</Bottom>
+              <Right>3.0</Right>
+            </Insets>
+            <Visible>false</Visible>
+          </Label>
+          <DataDefinition>
+            <Definition>row[&quot;val&quot;]</Definition>
+            <Grouping>
+              <GroupType>Text</GroupType>
+              <AggregateExpression>Sum</AggregateExpression>
+            </Grouping>
+          </DataDefinition>
+          <SeriesIdentifier>Series 1</SeriesIdentifier>
+          <DataPoint>
+            <Components>
+              <Type>Orthogonal_Value</Type>
+            </Components>
+            <Separator>, </Separator>
+          </DataPoint>
+          <LabelPosition>Outside</LabelPosition>
+          <Stacked>false</Stacked>
+          <Triggers>
+            <Condition>onmouseover</Condition>
+            <Action>
+              <Type>Show_Tooltip</Type>
+              <Value xsi:type="attribute:TooltipValue">
+                <Text></Text>
+                <Delay>200</Delay>
+              </Value>
+            </Action>
+          </Triggers>
+          <Riser>Rectangle</Riser>
+        </Series>
+        <Grouping>
+          <GroupType>Text</GroupType>
+          <AggregateExpression>Sum</AggregateExpression>
+        </Grouping>
+      </SeriesDefinitions>
+      <Orientation>Vertical</Orientation>
+      <LineAttributes>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Color>
+        <Visible>true</Visible>
+      </LineAttributes>
+      <Label>
+        <Caption>
+          <Value></Value>
+          <Font>
+            <Alignment/>
+          </Font>
+        </Caption>
+        <Background xsi:type="attribute:ColorDefinition">
+          <Transparency>0</Transparency>
+          <Red>255</Red>
+          <Green>255</Green>
+          <Blue>255</Blue>
+        </Background>
+        <Outline>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>0</Red>
+            <Green>0</Green>
+            <Blue>0</Blue>
+          </Color>
+        </Outline>
+        <Insets>
+          <Top>0.0</Top>
+          <Left>2.0</Left>
+          <Bottom>0.0</Bottom>
+          <Right>3.0</Right>
+        </Insets>
+        <Visible>true</Visible>
+      </Label>
+      <LabelPosition>Left</LabelPosition>
+      <MajorGrid>
+        <LineAttributes>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>196</Red>
+            <Green>196</Green>
+            <Blue>196</Blue>
+          </Color>
+          <Visible>false</Visible>
+        </LineAttributes>
+        <TickStyle>Across</TickStyle>
+        <TickAttributes>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>196</Red>
+            <Green>196</Green>
+            <Blue>196</Blue>
+          </Color>
+          <Visible>true</Visible>
+        </TickAttributes>
+      </MajorGrid>
+      <MinorGrid>
+        <LineAttributes>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>225</Red>
+            <Green>225</Green>
+            <Blue>225</Blue>
+          </Color>
+          <Visible>false</Visible>
+        </LineAttributes>
+        <TickStyle>Across</TickStyle>
+        <TickAttributes>
+          <Style>Solid</Style>
+          <Thickness>1</Thickness>
+          <Color>
+            <Transparency>255</Transparency>
+            <Red>225</Red>
+            <Green>225</Green>
+            <Blue>225</Blue>
+          </Color>
+          <Visible>false</Visible>
+        </TickAttributes>
+      </MinorGrid>
+      <Scale>
+        <MinorGridsPerUnit>5</MinorGridsPerUnit>
+      </Scale>
+      <Origin>
+        <Type>Min</Type>
+        <Value xsi:type="data:NumberDataElement">
+          <Value>0.0</Value>
+        </Value>
+      </Origin>
+      <PrimaryAxis>true</PrimaryAxis>
+      <Percent>false</Percent>
+    </AssociatedAxes>
+    <SeriesDefinitions>
+      <Query>
+        <Definition></Definition>
+      </Query>
+      <SeriesPalette>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>80</Red>
+          <Green>166</Green>
+          <Blue>218</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>242</Red>
+          <Green>88</Green>
+          <Blue>106</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>232</Red>
+          <Green>172</Green>
+          <Blue>57</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>255</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>64</Red>
+          <Green>128</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>128</Green>
+          <Blue>192</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>170</Red>
+          <Green>85</Green>
+          <Blue>85</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>128</Green>
+          <Blue>0</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>192</Red>
+          <Green>192</Green>
+          <Blue>192</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>255</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>192</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>7</Red>
+          <Green>146</Green>
+          <Blue>94</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>128</Green>
+          <Blue>255</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>128</Green>
+          <Blue>192</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>255</Green>
+          <Blue>255</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>128</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>128</Green>
+          <Blue>192</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>128</Green>
+          <Blue>192</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>0</Green>
+          <Blue>255</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>64</Green>
+          <Blue>64</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>128</Green>
+          <Blue>64</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>80</Red>
+          <Green>240</Green>
+          <Blue>120</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>64</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>0</Green>
+          <Blue>64</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>0</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>128</Green>
+          <Blue>64</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>128</Red>
+          <Green>128</Green>
+          <Blue>128</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>128</Green>
+          <Blue>255</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>64</Green>
+          <Blue>0</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>255</Green>
+          <Blue>255</Blue>
+        </Entries>
+        <Entries xsi:type="attribute:ColorDefinition">
+          <Transparency>255</Transparency>
+          <Red>255</Red>
+          <Green>128</Green>
+          <Blue>0</Blue>
+        </Entries>
+      </SeriesPalette>
+      <Series>
+        <Visible>true</Visible>
+        <Label>
+          <Caption>
+            <Value></Value>
+            <Font>
+              <Alignment/>
+            </Font>
+          </Caption>
+          <Background xsi:type="attribute:ColorDefinition">
+            <Transparency>0</Transparency>
+            <Red>255</Red>
+            <Green>255</Green>
+            <Blue>255</Blue>
+          </Background>
+          <Outline>
+            <Style>Solid</Style>
+            <Thickness>1</Thickness>
+            <Color>
+              <Transparency>255</Transparency>
+              <Red>0</Red>
+              <Green>0</Green>
+              <Blue>0</Blue>
+            </Color>
+            <Visible>false</Visible>
+          </Outline>
+          <Insets>
+            <Top>0.0</Top>
+            <Left>2.0</Left>
+            <Bottom>0.0</Bottom>
+            <Right>3.0</Right>
+          </Insets>
+          <Visible>false</Visible>
+        </Label>
+        <DataDefinition>
+          <Definition>row[&quot;date_modified&quot;]</Definition>
+        </DataDefinition>
+        <SeriesIdentifier></SeriesIdentifier>
+        <DataPoint>
+          <Components>
+            <Type>Orthogonal_Value</Type>
+          </Components>
+          <Separator>, </Separator>
+        </DataPoint>
+        <LabelPosition>Outside</LabelPosition>
+        <Stacked>false</Stacked>
+      </Series>
+      <Grouping>
+        <Enabled>false</Enabled>
+        <GroupingUnit>Years</GroupingUnit>
+        <GroupType>DateTime</GroupType>
+        <AggregateExpression>Sum</AggregateExpression>
+      </Grouping>
+      <Sorting>Ascending</Sorting>
+      <SortKey>
+        <Definition>row[&quot;date_modified&quot;]</Definition>
+      </SortKey>
+    </SeriesDefinitions>
+    <Orientation>Horizontal</Orientation>
+    <LineAttributes>
+      <Style>Solid</Style>
+      <Thickness>1</Thickness>
+      <Color>
+        <Transparency>255</Transparency>
+        <Red>0</Red>
+        <Green>0</Green>
+        <Blue>0</Blue>
+      </Color>
+      <Visible>true</Visible>
+    </LineAttributes>
+    <Label>
+      <Caption>
+        <Value></Value>
+        <Font>
+          <Alignment/>
+          <Rotation>45.0</Rotation>
+        </Font>
+      </Caption>
+      <Background xsi:type="attribute:ColorDefinition">
+        <Transparency>0</Transparency>
+        <Red>255</Red>
+        <Green>255</Green>
+        <Blue>255</Blue>
+      </Background>
+      <Outline>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>0</Red>
+          <Green>0</Green>
+          <Blue>0</Blue>
+        </Color>
+      </Outline>
+      <Insets>
+        <Top>0.0</Top>
+        <Left>2.0</Left>
+        <Bottom>0.0</Bottom>
+        <Right>3.0</Right>
+      </Insets>
+      <Visible>true</Visible>
+    </Label>
+    <FormatSpecifier xsi:type="attribute:DateFormatSpecifier">
+      <Type>Short</Type>
+      <Detail>Date</Detail>
+    </FormatSpecifier>
+    <LabelPosition>Below</LabelPosition>
+    <Staggered>false</Staggered>
+    <MajorGrid>
+      <LineAttributes>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>196</Red>
+          <Green>196</Green>
+          <Blue>196</Blue>
+        </Color>
+        <Visible>false</Visible>
+      </LineAttributes>
+      <TickStyle>Across</TickStyle>
+      <TickAttributes>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>196</Red>
+          <Green>196</Green>
+          <Blue>196</Blue>
+        </Color>
+        <Visible>true</Visible>
+      </TickAttributes>
+    </MajorGrid>
+    <MinorGrid>
+      <LineAttributes>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>225</Red>
+          <Green>225</Green>
+          <Blue>225</Blue>
+        </Color>
+        <Visible>false</Visible>
+      </LineAttributes>
+      <TickStyle>Across</TickStyle>
+      <TickAttributes>
+        <Style>Solid</Style>
+        <Thickness>1</Thickness>
+        <Color>
+          <Transparency>255</Transparency>
+          <Red>225</Red>
+          <Green>225</Green>
+          <Blue>225</Blue>
+        </Color>
+        <Visible>false</Visible>
+      </TickAttributes>
+    </MinorGrid>
+    <Scale>
+      <MinorGridsPerUnit>5</MinorGridsPerUnit>
+    </Scale>
+    <Origin>
+      <Type>Min</Type>
+      <Value xsi:type="data:NumberDataElement">
+        <Value>0.0</Value>
+      </Value>
+    </Origin>
+    <PrimaryAxis>true</PrimaryAxis>
+    <CategoryAxis>true</CategoryAxis>
+    <Percent>false</Percent>
+  </Axes>
+  <Orientation>Vertical</Orientation>
+  <UnitSpacing>50.0</UnitSpacing>
+  <Rotation>
+    <Angles>
+      <XAngle>-20.0</XAngle>
+      <YAngle>45.0</YAngle>
+      <ZAngle>0.0</ZAngle>
+      <Type>None</Type>
+    </Angles>
+  </Rotation>
+</model:ChartWithAxes>
+]]></xml-property>
+            <property name="outputFormat">SVG</property>
+            <property name="inheritColumns">false</property>
+            <property name="dataSet">HistogrammeDataSet</property>
+            <property name="height">4.604166666666667in</property>
+            <property name="width">7.9375in</property>
+            <list-property name="boundDataColumns">
+                <structure>
+                    <property name="name">date_modified</property>
+                    <expression name="expression" type="javascript">dataSetRow["date_modified"]</expression>
+                    <property name="dataType">date</property>
+                </structure>
+                <structure>
+                    <property name="name">val</property>
+                    <expression name="expression" type="javascript">dataSetRow["val"]</expression>
+                    <property name="dataType">float</property>
+                </structure>
+            </list-property>
+        </extended-item>
+    </body>
+</report>
diff -rNU5 mantisbt-1.2.5/bug_actiongroup_page.php mantis_ard/bug_actiongroup_page.php
--- mantisbt-1.2.5/bug_actiongroup_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/bug_actiongroup_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -29,13 +29,20 @@
 
 	require_once( 'bug_group_action_api.php' );
 
 	auth_ensure_user_authenticated();
 
+	$f_link_id = gpc_get_string( 'link_id', 0 );
 	$f_action = gpc_get_string( 'action', '' );
 	$f_bug_arr = gpc_get_int_array( 'bug_arr', array() );
 
+	if ( 0 != $f_link_id ) {
+		foreach ( $f_bug_arr as $t_bug_id ) {
+			relationship_add( $t_bug_id, $f_link_id, 2 );
+		}
+		print_successful_redirect( 'view.php?id='.$f_link_id );
+	}
 	# redirects to all_bug_page if nothing is selected
 	if ( is_blank( $f_action ) || ( 0 == count( $f_bug_arr ) ) ) {
 		print_header_redirect( 'view_all_bug_page.php' );
 	}
 
diff -rNU5 mantisbt-1.2.5/bug_actiongroup.php mantis_ard/bug_actiongroup.php
--- mantisbt-1.2.5/bug_actiongroup.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/bug_actiongroup.php	2013-03-27 11:11:16.000000000 +0100
@@ -25,10 +25,12 @@
 	  * MantisBT Core API's
 	  */
 	require_once( 'core.php' );
 
 	require_once( 'bug_api.php' );
+	require_once( 'risk_criteria_api.php' );
+	
 
 	auth_ensure_user_authenticated();
 	helper_begin_long_process();
 
 	$f_action	= gpc_get_string( 'action' );
@@ -89,11 +91,20 @@
 			break;
 
 		case 'DELETE':
 			if ( access_has_bug_level( config_get( 'delete_bug_threshold' ), $t_bug_id ) ) {
 				event_signal( 'EVENT_BUG_DELETED', array( $t_bug_id ) );
+				
+				# Manage risk criteria
+				$t_bug_summary = $t_bug->summary;
+				if ( project_get_other_type_project_id('risk') == helper_get_current_project()) {
+					$risk_criteria_id = risk_criteria_get_id_by_name($t_bug_summary);
+					$risk_criteria = risk_criteria_get($risk_criteria_id);
+					$risk_criteria->delete();
+				}
 				bug_delete( $t_bug_id );
+	
 			} else {
 				$t_failed_ids[$t_bug_id] = lang_get( 'bug_actiongroup_access' );
 			}
 			break;
 
diff -rNU5 mantisbt-1.2.5/bug_associate.php mantis_ard/bug_associate.php
--- mantisbt-1.2.5/bug_associate.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/bug_associate.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,37 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+ 
+	/**
+	 * MantisBT Core API's
+	 */
+	require_once( 'core.php' );
+ 
+
+	$f_bug_id = gpc_get_int( 'bug_id', 0 );
+	$f_associate_bug_id = gpc_get_int( 'associate_bug_id', 0 );
+	
+	if ( $f_bug_id > 0 &&  $f_associate_bug_id > 0 ) {
+		relationship_add( $f_bug_id, $f_associate_bug_id, 1 );
+	}
+	
+	print_successful_redirect_to_bug( $f_bug_id );
+	
+?>
diff -rNU5 mantisbt-1.2.5/bug_report_page.php mantis_ard/bug_report_page.php
--- mantisbt-1.2.5/bug_report_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/bug_report_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -33,10 +33,27 @@
 	require_once( 'file_api.php' );
 	require_once( 'custom_field_api.php' );
 	require_once( 'last_visited_api.php' );
 	require_once( 'projax_api.php' );
 	require_once( 'collapse_api.php' );
+	
+	if ( 1 == preg_match('/management/i', project_get_type_management() ) ) {
+		print_header_redirect( 'my_view_page.php' );		
+	}
+	# if a creation button action is selected from a risk 
+	if ( null != $_GET['relationship_id']) {
+		if ( null != $_GET['project_id']) {
+			//$g_project_override is set to null to allow setting new project
+			global $g_project_override;
+			$g_project_override = null;
+			helper_set_current_project($_GET['project_id']);
+			print_header_redirect( 'bug_report_page.php?relationship_id='.$_GET['relationship_id'] );
+		}
+		else {
+			$f_link_id = $_GET['relationship_id'];			
+		}
+	}
 
 	$f_master_bug_id = gpc_get_int( 'm_id', 0 );
 
 	# this page is invalid for the 'All Project' selection except if this is a clone
 	if ( ( ALL_PROJECTS == helper_get_current_project() ) && ( 0 == $f_master_bug_id ) ) {
@@ -162,10 +179,11 @@
 <?php echo form_security_field( 'bug_report' ) ?>
 <table class="width90" cellspacing="1">
 	<tr>
 		<td class="form-title" colspan="2">
 			<input type="hidden" name="m_id" value="<?php echo $f_master_bug_id ?>" />
+			<input type="hidden" name="link_id" value="<?php echo $f_link_id ?>" />
 			<input type="hidden" name="project_id" value="<?php echo $t_project_id ?>" />
 			<?php echo lang_get( 'enter_report_details_title' ) ?>
 		</td>
 	</tr>
 <?php
@@ -181,11 +199,11 @@
 			<?php if ( $t_changed_project ) {
 				echo "[" . project_get_field( $t_bug->project_id, 'name' ) . "] ";
 			} ?>
 			<select <?php echo helper_get_tab_index() ?> name="category_id">
 				<?php
-					print_category_option_list( $f_category_id );
+					print_category_option_list( $f_category_id, null, false );
 				?>
 			</select>
 		</td>
 	</tr>
 <?php }
@@ -193,11 +211,12 @@
 	if ( $tpl_show_reproducibility ) {
 ?>
 
 	<tr <?php echo helper_alternate_class() ?>>
 		<td class="category">
-			<?php print_documentation_link( 'reproducibility' ) ?>
+			<?php echo config_get( 'allow_no_reproducibility' ) ? '' : '<span class="required">*</span>';
+			print_documentation_link( 'reproducibility' ) ?>
 		</td>
 		<td>
 			<select <?php echo helper_get_tab_index() ?> name="reproducibility">
 				<?php print_enum_string_option_list( 'reproducibility', $f_reproducibility ) ?>
 			</select>
@@ -208,26 +227,28 @@
 
 	if ( $tpl_show_severity ) {
 ?>
 	<tr <?php echo helper_alternate_class() ?>>
 		<td class="category">
-			<?php print_documentation_link( 'severity' ) ?>
+			<?php echo config_get( 'allow_no_severity' ) ? '' : '<span class="required">*</span>';
+			print_documentation_link( 'severity' ) ?>
 		</td>
 		<td>
 			<select <?php echo helper_get_tab_index() ?> name="severity">
-				<?php print_enum_string_option_list( 'severity', $f_severity ) ?>
+				<?php print_enum_string_option_list( 'severity', $f_severity, true) ?>
 			</select>
 		</td>
 	</tr>
 <?php
 	}
 
 	if ( $tpl_show_priority ) {
 ?>
 	<tr <?php echo helper_alternate_class() ?>>
 		<td class="category">
-			<?php print_documentation_link( 'priority' ) ?>
+			<?php echo config_get( 'allow_no_priority' ) ? '' : '<span class="required">*</span>';
+			print_documentation_link( 'priority' ); ?>
 		</td>
 		<td>
 			<select <?php echo helper_get_tab_index() ?> name="priority">
 				<?php print_enum_string_option_list( 'priority', $f_priority ) ?>
 			</select>
@@ -371,16 +392,26 @@
 <?php } ?>
 
 <?php if ( $tpl_show_handler ) { ?>
 	<tr <?php echo helper_alternate_class() ?>>
 		<td class="category">
-			<?php echo lang_get( 'assign_to' ) ?>
+			<?php echo lang_get( 'assign_to' );
+			
+			
+//			TODO ARD remove
+//var_dump($f_handler_id);
+//die();
+//	project_get_all_user_rows( helper_get_current_project(),  user_get_access_level(auth_get_current_user_id(), helper_get_current_project()));
+
+//				print_assign_to_option_list( $f_handler_id, helper_get_current_project(), config_get('report_bug_threshold') ) 	
+// print_assign_to_option_list( $f_handler_id )
+			 ?>
 		</td>
 		<td>
 			<select <?php echo helper_get_tab_index() ?> name="handler_id">
 				<option value="0" selected="selected"></option>
-				<?php print_assign_to_option_list( $f_handler_id ) ?>
+				<?php print_assign_to_option_list( $f_handler_id) ?>
 			</select>
 		</td>
 	</tr>
 <?php } ?>
 
diff -rNU5 mantisbt-1.2.5/bug_report.php mantis_ard/bug_report.php
--- mantisbt-1.2.5/bug_report.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/bug_report.php	2013-03-27 11:11:16.000000000 +0100
@@ -29,10 +29,11 @@
 
 	require_once( 'string_api.php' );
 	require_once( 'file_api.php' );
 	require_once( 'bug_api.php' );
 	require_once( 'custom_field_api.php' );
+	require_once( 'risk_criteria_api.php' );
 
 	form_security_validate( 'bug_report' );
 
 	access_ensure_project_level( config_get('report_bug_threshold' ) );
 
@@ -42,10 +43,11 @@
 	$t_bug_data->os					= gpc_get_string( 'os', '' );
 	$t_bug_data->os_build				= gpc_get_string( 'os_build', '' );
 	$t_bug_data->version			= gpc_get_string( 'product_version', '' );
 	$t_bug_data->profile_id			= gpc_get_int( 'profile_id', 0 );
 	$t_bug_data->handler_id			= gpc_get_int( 'handler_id', 0 );
+	$t_bug_data->responsable_id			= gpc_get_int( 'responsable_id', 0 );
 	$t_bug_data->view_state			= gpc_get_int( 'view_state', config_get( 'default_bug_view_status' ) );
 
 	$t_bug_data->category_id			= gpc_get_int( 'category_id', 0 );
 	$t_bug_data->reproducibility		= gpc_get_int( 'reproducibility', config_get( 'default_bug_reproducibility' ) );
 	$t_bug_data->severity				= gpc_get_int( 'severity', config_get( 'default_bug_severity' ) );
@@ -63,19 +65,26 @@
 		$t_bug_data->due_date = date_get_null();
 	} else {
 		$t_bug_data->due_date = $t_bug_data->due_date;
 	}
 
+	$f_link_id = gpc_get_int( 'link_id', 0 );
+	
 	$f_file					= gpc_get_file( 'file', null ); /** @todo (thraxisp) Note that this always returns a structure */
 															# size = 0, if no file
 	$f_report_stay			= gpc_get_bool( 'report_stay', false );
 	$t_bug_data->project_id			= gpc_get_int( 'project_id' );
 
 	$t_bug_data->reporter_id		= auth_get_current_user_id();
 
 	$t_bug_data->summary			= trim( $t_bug_data->summary );
 
+	
+	if ( $f_link_id > 0 ) {
+		$t_bug_data->status	= get_enum_id('status', 'progress');
+	}
+
 	if ( access_has_project_level( config_get( 'roadmap_update_threshold' ), $t_bug_data->project_id ) ) {
 		$t_bug_data->target_version = gpc_get_string( 'target_version', '' );
 	}
 
 	# if a profile was selected then let's use that information
@@ -94,10 +103,11 @@
 		}
 		if ( is_blank( $t_bug_data->os_build ) ) {
 			$t_bug_data->os_build = $row['os_build'];
 		}
 	}
+
 	helper_call_custom_function( 'issue_create_validate', array( $t_bug_data ) );
 
 	# Validate the custom fields before adding the bug.
 	$t_related_custom_field_ids = custom_field_get_linked_ids( $t_bug_data->project_id );
 	foreach( $t_related_custom_field_ids as $t_id ) {
@@ -118,11 +128,18 @@
 
 	# Allow plugins to pre-process bug data
 	$t_bug_data = event_signal( 'EVENT_REPORT_BUG_DATA', $t_bug_data );
 
 	# Create the bug
-	$t_bug_id = $t_bug_data->create();
+	$t_bug_id = $t_bug_data->create(false);
+	
+	# Create a risk criteria if report is a risk and gravity > 8
+	if ( project_get_other_type_project_id('risk') == helper_get_current_project() &&
+	($t_bug_data->severity * $t_bug_data->reproducibility / 100 > 8 )) {
+		$risk_criteria = bug_to_risk_criteria_object($t_bug_data);
+		$risk_criteria->create();
+	}
 
 	# Mark the added issue as visited so that it appears on the last visited list.
 	last_visited_issue( $t_bug_id );
 
 	# Handle the file upload
@@ -141,11 +158,11 @@
 		if( !custom_field_set_value( $t_id, $t_bug_id, gpc_get_custom_field( "custom_field_$t_id", $t_def['type'], '' ), false ) ) {
 			error_parameters( lang_get_defaulted( custom_field_get_field( $t_id, 'name' ) ) );
 			trigger_error( ERROR_CUSTOM_FIELD_INVALID_VALUE, ERROR );
 		}
 	}
-
+	
 	$f_master_bug_id = gpc_get_int( 'm_id', 0 );
 	$f_rel_type = gpc_get_int( 'rel_type', -1 );
 
 	if ( $f_master_bug_id > 0 ) {
 		# it's a child generation... let's create the relationship and add some lines in the history
@@ -170,10 +187,15 @@
 			
 			# Send the email notification
 			email_relationship_added( $f_master_bug_id, $t_bug_id, relationship_get_complementary_type( $f_rel_type ) );
 		}
 	}
+	
+	# Add relationship between 2 bugs
+	if ( $f_link_id > 0 ) {
+		relationship_add( $t_bug_id, $f_link_id, 1 );
+	}
 
 	helper_call_custom_function( 'issue_create_notify', array( $t_bug_id ) );
 
 	# Allow plugins to post-process bug data with the new bug ID
 	event_signal( 'EVENT_REPORT_BUG', array( $t_bug_data, $t_bug_id ) );
diff -rNU5 mantisbt-1.2.5/bug_update_advanced_page.php mantis_ard/bug_update_advanced_page.php
--- mantisbt-1.2.5/bug_update_advanced_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/bug_update_advanced_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -637,25 +637,26 @@
 echo '<tr ', helper_alternate_class(), '>';
 echo '<td class="category">', lang_get( 'add_bugnote_title' ), '</td>';
 echo '<td colspan="5"><textarea ', helper_get_tab_index(), ' name="bugnote_text" cols="80" rows="10"></textarea></td></tr>';
 
 # Bugnote Private Checkbox (if permitted)
-if ( access_has_bug_level( config_get( 'private_bugnote_threshold' ), $tpl_bug_id ) ) {
-	echo '<tr ', helper_alternate_class(), '>';
-	echo '<td class="category">', lang_get( 'private' ), '</td>';
-	echo '<td colspan="5">';
-
-	$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );
-	if ( access_has_bug_level( config_get( 'set_view_status_threshold' ), $tpl_bug_id ) ) {
-		echo '<input ', helper_get_tab_index(), ' type="checkbox" name="private" ', check_checked( config_get( 'default_bugnote_view_status' ), VS_PRIVATE ), ' />';
-		echo lang_get( 'private' );
-	} else {
-		echo get_enum_element( 'view_state', $t_default_bugnote_view_status );
-	}
-
-	echo '</td></tr>';
-}
+# This information is duplicated in the update page and this one not functional
+//if ( access_has_bug_level( config_get( 'private_bugnote_threshold' ), $tpl_bug_id ) ) {
+//	echo '<tr ', helper_alternate_class(), '>';
+//	echo '<td class="category">', lang_get( 'private' ), '</td>';
+//	echo '<td colspan="5">';
+//
+//	$t_default_bugnote_view_status = config_get( 'default_bugnote_view_status' );
+//	if ( access_has_bug_level( config_get( 'set_view_status_threshold' ), $tpl_bug_id ) ) {
+//		echo '<input ', helper_get_tab_index(), ' type="checkbox" name="private" ', check_checked( config_get( 'default_bugnote_view_status' ), VS_PRIVATE ), ' />';
+//		echo lang_get( 'private' );
+//	} else {
+//		echo get_enum_element( 'view_state', $t_default_bugnote_view_status );
+//	}
+//
+//	echo '</td></tr>';
+//}
 
 # Time Tracking (if permitted)
 if ( config_get('time_tracking_enabled') ) {
 	if ( access_has_bug_level( config_get( 'time_tracking_edit_threshold' ), $tpl_bug_id ) ) {
 		echo '<tr ', helper_alternate_class(), '>';
diff -rNU5 mantisbt-1.2.5/bug_update.php mantis_ard/bug_update.php
--- mantisbt-1.2.5/bug_update.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/bug_update.php	2013-03-27 11:11:16.000000000 +0100
@@ -28,18 +28,21 @@
 	require_once( 'core.php' );
 
 	require_once( 'bug_api.php' );
 	require_once( 'bugnote_api.php' );
 	require_once( 'custom_field_api.php' );
+	require_once( 'risk_criteria_api.php' );
 
 	form_security_validate( 'bug_update' );
 
 	$f_bug_id = gpc_get_int( 'bug_id' );
 	$f_update_mode = gpc_get_bool( 'update_mode', FALSE ); # set if called from generic update page
 	$f_new_status	= gpc_get_int( 'status', bug_get_field( $f_bug_id, 'status' ) );
 
 	$t_bug_data = bug_get( $f_bug_id, true );
+	$t_old_summary = $t_bug_data->summary;
+	
 	if( $t_bug_data->project_id != helper_get_current_project() ) {
 		# in case the current project is not the same project of the bug we are viewing...
 		# ... override the current project. This to avoid problems with categories and handlers lists etc.
 		$g_project_override = $t_bug_data->project_id;
 	}
@@ -52,10 +55,11 @@
 								( ON == config_get( 'allow_reporter_close' ) ) ) )
 			) ) {
 		access_denied();
 	}
 
+	
 	# extract current extended information
 	$t_old_bug_status = $t_bug_data->status;
 
 	$t_bug_data->reporter_id		= gpc_get_int( 'reporter_id', $t_bug_data->reporter_id );
 	$t_bug_data->handler_id			= gpc_get_int( 'handler_id', $t_bug_data->handler_id );
@@ -74,10 +78,11 @@
 	$t_bug_data->version			= gpc_get_string( 'version', $t_bug_data->version );
 	$t_bug_data->build				= gpc_get_string( 'build', $t_bug_data->build );
 	$t_bug_data->fixed_in_version		= gpc_get_string( 'fixed_in_version', $t_bug_data->fixed_in_version );
 	$t_bug_data->view_state			= gpc_get_int( 'view_state', $t_bug_data->view_state );
 	$t_bug_data->summary			= gpc_get_string( 'summary', $t_bug_data->summary );
+	$t_bug_data->description = gpc_get_string( 'description', $t_bug_data->description );
 	$t_due_date = gpc_get_string( 'due_date', null );
 
 	if( access_has_project_level( config_get( 'roadmap_update_threshold' ), $t_bug_data->project_id ) ) {
 		$t_bug_data->target_version		= gpc_get_string( 'target_version', $t_bug_data->target_version );
 	}
@@ -87,26 +92,49 @@
 			$t_bug_data->due_date = 1;
 		} else {
 			$t_bug_data->due_date = strtotime( $t_due_date );
 		}		
 	}
-
-	$t_bug_data->description		= gpc_get_string( 'description', $t_bug_data->description );
+	
 	$t_bug_data->steps_to_reproduce	= gpc_get_string( 'steps_to_reproduce', $t_bug_data->steps_to_reproduce );
 	$t_bug_data->additional_information	= gpc_get_string( 'additional_information', $t_bug_data->additional_information );
 
 	$f_private						= gpc_get_bool( 'private' );
 	$f_bugnote_text					= gpc_get_string( 'bugnote_text', '' );
 	$f_time_tracking			= gpc_get_string( 'time_tracking', '0:00' );
 	$f_close_now					= gpc_get_string( 'close_now', false );
 
+	
+	# Manage risk criteria
+	if ( project_get_other_type_project_id('risk') == helper_get_current_project()) {
+		$risk_criteria_id = risk_criteria_get_id_by_name($t_old_summary);
+		$gravity = $t_bug_data->severity * $t_bug_data->reproducibility / 100 ;
+		if ( 0 != $risk_criteria_id ) {
+			$risk_criteria = risk_criteria_get($risk_criteria_id);
+			if ( $gravity > 8  ) {
+				$risk_criteria->label = $t_bug_data->summary;
+				$risk_criteria->update();
+			}
+			else {
+				$risk_criteria->delete();
+			}
+		}
+		elseif ( $gravity > 8 ) {
+			$risk_criteria = bug_to_risk_criteria_object($t_bug_data);
+			$risk_criteria->create();
+		}
+	}
+	
 	# Handle auto-assigning
-	if ( ( config_get( 'bug_submit_status' ) == $t_bug_data->status )
-	  && ( $t_bug_data->status == $t_old_bug_status )
-	  && ( 0 != $t_bug_data->handler_id )
-	  && ( ON == config_get( 'auto_set_status_to_assigned' ) ) ) {
-		$t_bug_data->status = config_get( 'bug_assigned_status' );
+	#never read because of management mantis
+	if ( false ) {
+		if ( ( config_get( 'bug_submit_status' ) == $t_bug_data->status )
+		  && ( $t_bug_data->status == $t_old_bug_status )
+		  && ( 0 != $t_bug_data->handler_id )
+		  && ( ON == config_get( 'auto_set_status_to_assigned' ) ) ) {
+			$t_bug_data->status = config_get( 'bug_assigned_status' );
+		}
 	}
 
 	helper_call_custom_function( 'issue_update_validate', array( $f_bug_id, $t_bug_data, $f_bugnote_text ) );
 
 	$t_resolved = config_get( 'bug_resolved_status_threshold' );
diff -rNU5 mantisbt-1.2.5/bug_view_inc.php mantis_ard/bug_view_inc.php
--- mantisbt-1.2.5/bug_view_inc.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/bug_view_inc.php	2013-03-27 11:11:16.000000000 +0100
@@ -40,701 +40,721 @@
 	require_once( 'relationship_api.php' );
 	require_once( 'last_visited_api.php' );
 	require_once( 'tag_api.php' );
 
 	$f_bug_id = gpc_get_int( 'id' );
-
-	bug_ensure_exists( $f_bug_id );
-
-	$tpl_bug = bug_get( $f_bug_id, true );
-
-	# In case the current project is not the same project of the bug we are
-	# viewing, override the current project. This ensures all config_get and other
-	# per-project function calls use the project ID of this bug.
-	$g_project_override = $tpl_bug->project_id;
-
-	access_ensure_bug_level( VIEWER, $f_bug_id );
-
-	$f_history = gpc_get_bool( 'history', config_get( 'history_default_visible' ) );
-
-	$t_fields = config_get( $tpl_fields_config_option );
-	$t_fields = columns_filter_disabled( $t_fields );
-
-	compress_enable();
-
-	if ( $tpl_show_page_header ) {
-		html_page_top( bug_format_summary( $f_bug_id, SUMMARY_CAPTION ) );
-		print_recently_visited();
-	}
-
-	$t_action_button_position = config_get( 'action_button_position' );
-
-	$t_bugslist = gpc_get_cookie( config_get( 'bug_list_cookie' ), false );
-
-	$tpl_show_versions = version_should_show_product_version( $tpl_bug->project_id );
-	$tpl_show_product_version = $tpl_show_versions && in_array( 'product_version', $t_fields );
-	$tpl_show_fixed_in_version = $tpl_show_versions && in_array( 'fixed_in_version', $t_fields );
-	$tpl_show_product_build = $tpl_show_versions && in_array( 'product_build', $t_fields )
-		&& ( config_get( 'enable_product_build' ) == ON );
-	$tpl_product_build = $tpl_show_product_build ? string_display_line( $tpl_bug->build ) : '';
-	$tpl_show_target_version = $tpl_show_versions && in_array( 'target_version', $t_fields )
-		&& access_has_bug_level( config_get( 'roadmap_view_threshold' ), $f_bug_id );
-
-	$tpl_product_version_string  = '';
-	$tpl_target_version_string   = '';
-	$tpl_fixed_in_version_string = '';
-
-	if ( $tpl_show_product_version || $tpl_show_fixed_in_version || $tpl_show_target_version ) {
-		$t_version_rows = version_get_all_rows( $tpl_bug->project_id );
-
-		if ( $tpl_show_product_version ) {
-			$tpl_product_version_string  = prepare_version_string( $tpl_bug->project_id, version_get_id( $tpl_bug->version, $tpl_bug->project_id ), $t_version_rows );
-		}
-
-		if ( $tpl_show_target_version ) {
-			$tpl_target_version_string   = prepare_version_string( $tpl_bug->project_id, version_get_id( $tpl_bug->target_version, $tpl_bug->project_id) , $t_version_rows );
-		}
-
-		if ( $tpl_show_fixed_in_version ) {
-			$tpl_fixed_in_version_string = prepare_version_string( $tpl_bug->project_id, version_get_id( $tpl_bug->fixed_in_version, $tpl_bug->project_id ), $t_version_rows );
+	if ( 0 == $f_bug_id ) {
+		
+		html_page_top( lang_get( 'main_link' ) );
+		echo '<br /><div align="center">';
+		echo lang_get('no_bug_message');
+		echo '<div>';
+	}
+	else {
+		bug_ensure_exists( $f_bug_id );
+
+		$tpl_bug = bug_get( $f_bug_id, true );
+	
+		# In case the current project is not the same project of the bug we are
+		# viewing, override the current project. This ensures all config_get and other
+		# per-project function calls use the project ID of this bug.
+		if ( helper_get_current_project() != $tpl_bug->project_id ) {
+			helper_set_current_project($tpl_bug->project_id);
+			$g_project_override = $tpl_bug->project_id;
+			print_header_redirect( 'view.php?id='.$tpl_bug->id );
+		}
+	
+		access_ensure_bug_level( VIEWER, $f_bug_id );
+	
+		$f_history = gpc_get_bool( 'history', config_get( 'history_default_visible' ) );
+	
+		$t_fields = config_get( $tpl_fields_config_option );
+		$t_fields = columns_filter_disabled( $t_fields );
+	
+		compress_enable();
+		if ( $tpl_show_page_header ) {
+			html_page_top( bug_format_summary( $f_bug_id, SUMMARY_CAPTION ) );
+			print_recently_visited();
+		}
+		$t_action_button_position = config_get( 'action_button_position' );
+	
+		$t_bugslist = gpc_get_cookie( config_get( 'bug_list_cookie' ), false );
+	
+		$tpl_show_versions = version_should_show_product_version( $tpl_bug->project_id );
+		$tpl_show_product_version = $tpl_show_versions && in_array( 'product_version', $t_fields );
+		$tpl_show_fixed_in_version = $tpl_show_versions && in_array( 'fixed_in_version', $t_fields );
+		$tpl_show_product_build = $tpl_show_versions && in_array( 'product_build', $t_fields )
+			&& ( config_get( 'enable_product_build' ) == ON );
+		$tpl_product_build = $tpl_show_product_build ? string_display_line( $tpl_bug->build ) : '';
+		$tpl_show_target_version = $tpl_show_versions && in_array( 'target_version', $t_fields )
+			&& access_has_bug_level( config_get( 'roadmap_view_threshold' ), $f_bug_id );
+	
+		$tpl_product_version_string  = '';
+		$tpl_target_version_string   = '';
+		$tpl_fixed_in_version_string = '';
+	
+		if ( $tpl_show_product_version || $tpl_show_fixed_in_version || $tpl_show_target_version ) {
+			$t_version_rows = version_get_all_rows( $tpl_bug->project_id );
+	
+			if ( $tpl_show_product_version ) {
+				$tpl_product_version_string  = prepare_version_string( $tpl_bug->project_id, version_get_id( $tpl_bug->version, $tpl_bug->project_id ), $t_version_rows );
+			}
+	
+			if ( $tpl_show_target_version ) {
+				$tpl_target_version_string   = prepare_version_string( $tpl_bug->project_id, version_get_id( $tpl_bug->target_version, $tpl_bug->project_id) , $t_version_rows );
+			}
+	
+			if ( $tpl_show_fixed_in_version ) {
+				$tpl_fixed_in_version_string = prepare_version_string( $tpl_bug->project_id, version_get_id( $tpl_bug->fixed_in_version, $tpl_bug->project_id ), $t_version_rows );
+			}
 		}
-	}
-
-	$tpl_product_version_string = string_display_line( $tpl_product_version_string );
-	$tpl_target_version_string = string_display_line( $tpl_target_version_string );
-	$tpl_fixed_in_version_string = string_display_line( $tpl_fixed_in_version_string );
-
-	$tpl_bug_id = $f_bug_id;
-	$tpl_form_title = lang_get( 'bug_view_title' );
-	$tpl_wiki_link = config_get_global( 'wiki_enable' ) == ON ? 'wiki.php?id=' . $f_bug_id : '';
-
-	if ( access_has_bug_level( config_get( 'view_history_threshold' ), $f_bug_id ) ) {
-		$tpl_history_link = "view.php?id=$f_bug_id&history=1#history";
-	} else {
-		$tpl_history_link = '';
-	}
-
-	$tpl_show_reminder_link = !current_user_is_anonymous() && !bug_is_readonly( $f_bug_id ) &&
-		  access_has_bug_level( config_get( 'bug_reminder_threshold' ), $f_bug_id );
-	$tpl_bug_reminder_link = 'bug_reminder_page.php?bug_id=' . $f_bug_id;
-
-	$tpl_print_link = 'print_bug_page.php?bug_id=' . $f_bug_id;
-
-	$tpl_top_buttons_enabled = !$tpl_force_readonly && ( $t_action_button_position == POSITION_TOP || $t_action_button_position == POSITION_BOTH );
-	$tpl_bottom_buttons_enabled = !$tpl_force_readonly && ( $t_action_button_position == POSITION_BOTTOM || $t_action_button_position == POSITION_BOTH );
-
-	$tpl_show_project = in_array( 'project', $t_fields );
-	$tpl_project_name = $tpl_show_project ? string_display_line( project_get_name( $tpl_bug->project_id ) ): '';
-	$tpl_show_id = in_array( 'id', $t_fields );
-	$tpl_formatted_bug_id = $tpl_show_id ? string_display_line( bug_format_id( $f_bug_id ) ) : '';
-
-	$tpl_show_date_submitted = in_array( 'date_submitted', $t_fields );
-	$tpl_date_submitted = $tpl_show_date_submitted ? date( config_get( 'normal_date_format' ), $tpl_bug->date_submitted ) : '';
-
-	$tpl_show_last_updated = in_array( 'last_updated', $t_fields );
-	$tpl_last_updated = $tpl_show_last_updated ? date( config_get( 'normal_date_format' ), $tpl_bug->last_updated ) : '';
-
-	$tpl_show_tags = in_array( 'tags', $t_fields ) && access_has_global_level( config_get( 'tag_view_threshold' ) );
-
-	$tpl_bug_overdue = bug_is_overdue( $f_bug_id );
-
-	$tpl_show_view_state = in_array( 'view_state', $t_fields );
-	$tpl_bug_view_state_enum = $tpl_show_view_state ? string_display_line( get_enum_element( 'view_state', $tpl_bug->view_state ) ) : '';
-
-	$tpl_show_due_date = in_array( 'due_date', $t_fields ) && access_has_bug_level( config_get( 'due_date_view_threshold' ), $f_bug_id );
-
-	if ( $tpl_show_due_date ) {
-		if ( !date_is_null( $tpl_bug->due_date ) ) {
-			$tpl_bug_due_date = date( config_get( 'normal_date_format' ), $tpl_bug->due_date );
-		} else {
-			$tpl_bug_due_date = '';
+	
+		$tpl_product_version_string = string_display_line( $tpl_product_version_string );
+		$tpl_target_version_string = string_display_line( $tpl_target_version_string );
+		$tpl_fixed_in_version_string = string_display_line( $tpl_fixed_in_version_string );
+	
+		$tpl_bug_id = $f_bug_id;
+		$tpl_form_title = lang_get( 'bug_view_title' );
+		$tpl_wiki_link = config_get_global( 'wiki_enable' ) == ON ? 'wiki.php?id=' . $f_bug_id : '';
+	
+		if ( access_has_bug_level( config_get( 'view_history_threshold' ), $f_bug_id ) ) {
+			$tpl_history_link = "view.php?id=$f_bug_id&history=1#history";
+		} else {
+			$tpl_history_link = '';
+		}
+	
+		$tpl_show_reminder_link = !current_user_is_anonymous() && !bug_is_readonly( $f_bug_id ) &&
+			  access_has_bug_level( config_get( 'bug_reminder_threshold' ), $f_bug_id );
+		$tpl_bug_reminder_link = 'bug_reminder_page.php?bug_id=' . $f_bug_id;
+	
+		$tpl_print_link = 'print_bug_page.php?bug_id=' . $f_bug_id;
+	
+		$tpl_top_buttons_enabled = !$tpl_force_readonly && ( $t_action_button_position == POSITION_TOP || $t_action_button_position == POSITION_BOTH );
+		$tpl_bottom_buttons_enabled = !$tpl_force_readonly && ( $t_action_button_position == POSITION_BOTTOM || $t_action_button_position == POSITION_BOTH );
+	
+		$tpl_show_project = in_array( 'project', $t_fields );
+		$tpl_project_name = $tpl_show_project ? string_display_line( project_get_name( $tpl_bug->project_id ) ): '';
+		$tpl_show_id = in_array( 'id', $t_fields );
+		$tpl_formatted_bug_id = $tpl_show_id ? string_display_line( bug_format_id( $f_bug_id ) ) : '';
+	
+		$tpl_show_date_submitted = in_array( 'date_submitted', $t_fields );
+		$tpl_date_submitted = $tpl_show_date_submitted ? date( config_get( 'normal_date_format' ), $tpl_bug->date_submitted ) : '';
+	
+		$tpl_show_last_updated = in_array( 'last_updated', $t_fields );
+		$tpl_last_updated = $tpl_show_last_updated ? date( config_get( 'normal_date_format' ), $tpl_bug->last_updated ) : '';
+	
+		$tpl_show_tags = in_array( 'tags', $t_fields ) && access_has_global_level( config_get( 'tag_view_threshold' ) );
+	
+		$tpl_bug_overdue = bug_is_overdue( $f_bug_id );
+	
+		$tpl_show_view_state = in_array( 'view_state', $t_fields );
+		$tpl_bug_view_state_enum = $tpl_show_view_state ? string_display_line( get_enum_element( 'view_state', $tpl_bug->view_state ) ) : '';
+	
+		$tpl_show_due_date = in_array( 'due_date', $t_fields ) && access_has_bug_level( config_get( 'due_date_view_threshold' ), $f_bug_id );
+	
+		if ( $tpl_show_due_date ) {
+			if ( !date_is_null( $tpl_bug->due_date ) ) {
+				$tpl_bug_due_date = date( config_get( 'normal_date_format' ), $tpl_bug->due_date );
+			} else {
+				$tpl_bug_due_date = '';
+			}
 		}
-	}
-
-	$tpl_show_reporter = in_array( 'reporter', $t_fields );
-	$tpl_show_handler = in_array( 'handler', $t_fields ) && access_has_bug_level( config_get( 'view_handler_threshold' ), $f_bug_id );
-	$tpl_show_additional_information = !is_blank( $tpl_bug->additional_information ) && in_array( 'additional_info', $t_fields );
-	$tpl_show_steps_to_reproduce = !is_blank( $tpl_bug->steps_to_reproduce ) && in_array( 'steps_to_reproduce', $t_fields );
-	$tpl_show_monitor_box = !$tpl_force_readonly;
-	$tpl_show_relationships_box = !$tpl_force_readonly;
-	$tpl_show_upload_form = !$tpl_force_readonly && !bug_is_readonly( $f_bug_id );
-	$tpl_show_history = $f_history;
-	$tpl_show_profiles = config_get( 'enable_profiles' );
-	$tpl_show_platform = $tpl_show_profiles && in_array( 'platform', $t_fields );
-	$tpl_platform = $tpl_show_platform ? string_display_line( $tpl_bug->platform ) : '';
-	$tpl_show_os = $tpl_show_profiles && in_array( 'os', $t_fields );
-	$tpl_os = $tpl_show_os ? string_display_line( $tpl_bug->os ) : '';
-	$tpl_show_os_version = $tpl_show_profiles && in_array( 'os_version', $t_fields );
-	$tpl_os_version = $tpl_show_os_version ? string_display_line( $tpl_bug->os_build ) : '';
-	$tpl_show_projection = in_array( 'projection', $t_fields );
-	$tpl_projection = $tpl_show_projection ? string_display_line( get_enum_element( 'projection', $tpl_bug->projection ) ) : '';
-	$tpl_show_eta = in_array( 'eta', $t_fields );
-	$tpl_eta = $tpl_show_eta ? string_display_line( get_enum_element( 'eta', $tpl_bug->eta ) ) : '';
-	$tpl_show_attachments = in_array( 'attachments', $t_fields );
-	$tpl_can_attach_tag = $tpl_show_tags && !$tpl_force_readonly && access_has_bug_level( config_get( 'tag_attach_threshold' ), $f_bug_id );
-	$tpl_show_category = in_array( 'category_id', $t_fields );
-	$tpl_category = $tpl_show_category ? string_display_line( category_full_name( $tpl_bug->category_id ) ) : '';
-	$tpl_show_priority = in_array( 'priority', $t_fields );
-	$tpl_priority = $tpl_show_priority ? string_display_line( get_enum_element( 'priority', $tpl_bug->priority ) ) : '';
-	$tpl_show_severity = in_array( 'severity', $t_fields );
-	$tpl_severity = $tpl_show_severity ? string_display_line( get_enum_element( 'severity', $tpl_bug->severity ) ) : '';
-	$tpl_show_reproducibility = in_array( 'reproducibility', $t_fields );
-	$tpl_reproducibility = $tpl_show_reproducibility ? string_display_line( get_enum_element( 'reproducibility', $tpl_bug->reproducibility ) ): '';
-	$tpl_show_status = in_array( 'status', $t_fields );
-	$tpl_status = $tpl_show_status ? string_display_line( get_enum_element( 'status', $tpl_bug->status ) ) : '';
-	$tpl_show_resolution = in_array( 'resolution', $t_fields );
-	$tpl_resolution = $tpl_show_resolution ? string_display_line( get_enum_element( 'resolution', $tpl_bug->resolution ) ) : '';
-	$tpl_show_summary = in_array( 'summary', $t_fields );
-	$tpl_show_description = in_array( 'description', $t_fields );
-
-	$tpl_summary = $tpl_show_summary ? bug_format_summary( $f_bug_id, SUMMARY_FIELD ) : '';
-	$tpl_description = $tpl_show_description ? string_display_links( $tpl_bug->description ) : '';
-	$tpl_steps_to_reproduce = $tpl_show_steps_to_reproduce ? string_display_links( $tpl_bug->steps_to_reproduce ) : '';
-	$tpl_additional_information = $tpl_show_additional_information ? string_display_links( $tpl_bug->additional_information ) : '';
-
-	$tpl_links = event_signal( 'EVENT_MENU_ISSUE', $f_bug_id );
-
-	#
-	# Start of Template
-	#
-
-	echo '<br />';
-	echo '<table class="width100" cellspacing="1">';
-	echo '<tr>';
-
-	# Form Title
-	echo '<td class="form-title" colspan="', $t_bugslist ? '3' : '4', '">';
-
-	echo $tpl_form_title;
-
-	echo '&#160;<span class="small">';
-
-	# Jump to Bugnotes
-	print_bracket_link( "#bugnotes", lang_get( 'jump_to_bugnotes' ) );
-
-	# Send Bug Reminder
-	if ( $tpl_show_reminder_link ) {
-		print_bracket_link( $tpl_bug_reminder_link, lang_get( 'bug_reminder' ) );
-	}
-
-	if ( !is_blank( $tpl_wiki_link ) ) {
-		print_bracket_link( $tpl_wiki_link, lang_get( 'wiki' ) );
-	}
-
-	foreach ( $tpl_links as $t_plugin => $t_hooks ) {
-		foreach( $t_hooks as $t_hook ) {
-			if ( is_array( $t_hook ) ) {
-				foreach( $t_hook as $t_label => $t_href ) {
-					if ( is_numeric( $t_label ) ) {
-						print_bracket_link_prepared( $t_href );
-					} else {
-						print_bracket_link( $t_href, $t_label );
+	
+		$tpl_show_reporter = in_array( 'reporter', $t_fields );
+		$tpl_show_handler = in_array( 'handler', $t_fields ) && access_has_bug_level( config_get( 'view_handler_threshold' ), $f_bug_id );
+		$tpl_show_additional_information = !is_blank( $tpl_bug->additional_information ) && in_array( 'additional_info', $t_fields );
+		$tpl_show_steps_to_reproduce = !is_blank( $tpl_bug->steps_to_reproduce ) && in_array( 'steps_to_reproduce', $t_fields );
+		$tpl_show_monitor_box = !$tpl_force_readonly;
+		$tpl_show_relationships_box = !$tpl_force_readonly;
+		$tpl_show_upload_form = !$tpl_force_readonly && !bug_is_readonly( $f_bug_id );
+		$tpl_show_history = $f_history;
+		$tpl_show_profiles = config_get( 'enable_profiles' );
+		$tpl_show_platform = $tpl_show_profiles && in_array( 'platform', $t_fields );
+		$tpl_platform = $tpl_show_platform ? string_display_line( $tpl_bug->platform ) : '';
+		$tpl_show_os = $tpl_show_profiles && in_array( 'os', $t_fields );
+		$tpl_os = $tpl_show_os ? string_display_line( $tpl_bug->os ) : '';
+		$tpl_show_os_version = $tpl_show_profiles && in_array( 'os_version', $t_fields );
+		$tpl_os_version = $tpl_show_os_version ? string_display_line( $tpl_bug->os_build ) : '';
+		$tpl_show_projection = in_array( 'projection', $t_fields );
+		$tpl_projection = $tpl_show_projection ? string_display_line( get_enum_element( 'projection', $tpl_bug->projection ) ) : '';
+		$tpl_show_eta = in_array( 'eta', $t_fields );
+		$tpl_eta = $tpl_show_eta ? string_display_line( get_enum_element( 'eta', $tpl_bug->eta ) ) : '';
+		$tpl_show_attachments = in_array( 'attachments', $t_fields );
+		$tpl_can_attach_tag = $tpl_show_tags && !$tpl_force_readonly && access_has_bug_level( config_get( 'tag_attach_threshold' ), $f_bug_id );
+		$tpl_show_category = in_array( 'category_id', $t_fields );
+		$tpl_category = $tpl_show_category ? string_display_line( category_full_name( $tpl_bug->category_id ) ) : '';
+		$tpl_show_priority = in_array( 'priority', $t_fields );
+		$tpl_priority = $tpl_show_priority ? string_display_line( get_enum_element( 'priority', $tpl_bug->priority ) ) : '';
+		$tpl_show_severity = in_array( 'severity', $t_fields );
+		$tpl_severity = $tpl_show_severity ? string_display_line( get_enum_element( 'severity', $tpl_bug->severity ) ) : '';
+		$tpl_show_reproducibility = in_array( 'reproducibility', $t_fields );
+		$tpl_reproducibility = $tpl_show_reproducibility ? string_display_line( get_enum_element( 'reproducibility', $tpl_bug->reproducibility ) ): '';
+		$tpl_show_status = in_array( 'status', $t_fields );
+		$tpl_status = $tpl_show_status ? string_display_line( get_enum_element( 'status', $tpl_bug->status ) ) : '';
+		$tpl_show_resolution = in_array( 'resolution', $t_fields );
+		$tpl_resolution = $tpl_show_resolution ? string_display_line( get_enum_element( 'resolution', $tpl_bug->resolution ) ) : '';
+		$tpl_show_gravity = in_array( 'gravity', $t_fields );
+		$tpl_gravity = $tpl_bug->severity * $tpl_bug->reproducibility / 100;
+		$tpl_show_summary = in_array( 'summary', $t_fields );
+		$tpl_show_description = in_array( 'description', $t_fields );
+	
+		$tpl_summary = $tpl_show_summary ? bug_format_summary( $f_bug_id, SUMMARY_FIELD ) : '';
+		$tpl_description = $tpl_show_description ? string_display_links( $tpl_bug->description ) : '';
+		$tpl_steps_to_reproduce = $tpl_show_steps_to_reproduce ? string_display_links( $tpl_bug->steps_to_reproduce ) : '';
+		$tpl_additional_information = $tpl_show_additional_information ? string_display_links( $tpl_bug->additional_information ) : '';
+	
+		$tpl_links = event_signal( 'EVENT_MENU_ISSUE', $f_bug_id );
+	
+		#
+		# Start of Template
+		#
+	
+		echo '<br />';
+		echo '<table class="width100" cellspacing="1">';
+		echo '<tr>';
+	
+		# Form Title
+		echo '<td class="form-title" colspan="', $t_bugslist ? '3' : '4', '">';
+	
+		echo $tpl_form_title;
+	
+		echo '&#160;<span class="small">';
+	
+		# Jump to Bugnotes
+		print_bracket_link( "#bugnotes", lang_get( 'jump_to_bugnotes' ) );
+	
+		# Send Bug Reminder
+		if ( $tpl_show_reminder_link ) {
+			print_bracket_link( $tpl_bug_reminder_link, lang_get( 'bug_reminder' ) );
+		}
+	
+		if ( !is_blank( $tpl_wiki_link ) ) {
+			print_bracket_link( $tpl_wiki_link, lang_get( 'wiki' ) );
+		}
+	
+		foreach ( $tpl_links as $t_plugin => $t_hooks ) {
+			foreach( $t_hooks as $t_hook ) {
+				if ( is_array( $t_hook ) ) {
+					foreach( $t_hook as $t_label => $t_href ) {
+						if ( is_numeric( $t_label ) ) {
+							print_bracket_link_prepared( $t_href );
+						} else {
+							print_bracket_link( $t_href, $t_label );
+						}
 					}
+				} else {
+					print_bracket_link_prepared( $t_hook );
 				}
-			} else {
-				print_bracket_link_prepared( $t_hook );
 			}
 		}
-	}
-
-	echo '</span></td>';
-
-	# prev/next links
-	if ( $t_bugslist ) {
-		echo '<td class="center"><span class="small">';
-
-		$t_bugslist = explode( ',', $t_bugslist );
-		$t_index = array_search( $f_bug_id, $t_bugslist );
-		if ( false !== $t_index ) {
-			if ( isset( $t_bugslist[$t_index-1] ) ) {
-				print_bracket_link( 'bug_view_page.php?bug_id='.$t_bugslist[$t_index-1], '&lt;&lt;' );
-			}
-
-			if ( isset( $t_bugslist[$t_index+1] ) ) {
-				print_bracket_link( 'bug_view_page.php?bug_id='.$t_bugslist[$t_index+1], '&gt;&gt;' );
+	
+		echo '</span></td>';
+	
+		# prev/next links
+		if ( $t_bugslist ) {
+			echo '<td class="center"><span class="small">';
+	
+			$t_bugslist = explode( ',', $t_bugslist );
+			$t_index = array_search( $f_bug_id, $t_bugslist );
+			if ( false !== $t_index ) {
+				if ( isset( $t_bugslist[$t_index-1] ) ) {
+					print_bracket_link( 'bug_view_page.php?bug_id='.$t_bugslist[$t_index-1], '&lt;&lt;' );
+				}
+	
+				if ( isset( $t_bugslist[$t_index+1] ) ) {
+					print_bracket_link( 'bug_view_page.php?bug_id='.$t_bugslist[$t_index+1], '&gt;&gt;' );
+				}
 			}
+			echo '</span></td>';
 		}
-		echo '</span></td>';
-	}
-
-
-	# Links
-	echo '<td class="right" colspan="2">';
-
-	if ( !is_blank( $tpl_history_link ) ) {
-		# History
+	
+	
+		# Links
+		echo '<td class="right" colspan="2">';
+	
+		if ( !is_blank( $tpl_history_link ) ) {
+			# History
+			echo '<span class="small">';
+			print_bracket_link( $tpl_history_link, lang_get( 'bug_history' ) );
+			echo '</span>';
+		}
+	
+		# Print Bug
 		echo '<span class="small">';
-		print_bracket_link( $tpl_history_link, lang_get( 'bug_history' ) );
+		print_bracket_link( $tpl_print_link, lang_get( 'print' ) );
 		echo '</span>';
-	}
-
-	# Print Bug
-	echo '<span class="small">';
-	print_bracket_link( $tpl_print_link, lang_get( 'print' ) );
-	echo '</span>';
-	echo '</td>';
-	echo '</tr>';
-
-	if ( $tpl_top_buttons_enabled ) {
-		echo '<tr align="center">';
-		echo '<td align="center" colspan="6">';
-		html_buttons_view_bug_page( $tpl_bug_id );
 		echo '</td>';
 		echo '</tr>';
-	}
-
-	if ( $tpl_show_id || $tpl_show_project || $tpl_show_category || $tpl_show_view_state || $tpl_show_date_submitted || $tpl_show_last_updated ) {
-		# Labels
-		echo '<tr>';
-		echo '<td class="category" width="15%">', $tpl_show_id ? lang_get( 'id' ) : '', '</td>';
-		echo '<td class="category" width="20%">', $tpl_show_project ? lang_get( 'email_project' ) : '', '</td>';
-		echo '<td class="category" width="15%">', $tpl_show_category ? lang_get( 'category' ) : '', '</td>';
-		echo '<td class="category" width="15%">', $tpl_show_view_state ? lang_get( 'view_status' ) : '', '</td>';
-		echo '<td class="category" width="15%">', $tpl_show_date_submitted ? lang_get( 'date_submitted' ) : '', '</td>';
-		echo '<td class="category" width="20%">', $tpl_show_last_updated ? lang_get( 'last_update' ) : '','</td>';
-		echo '</tr>';
-
-		echo '<tr ', helper_alternate_class(), '>';
-
-		# Bug ID
-		echo '<td>', $tpl_formatted_bug_id, '</td>';
-
-		# Project
-		echo '<td>', $tpl_project_name, '</td>';
-
-		# Category
-		echo '<td>', $tpl_category, '</td>';
-
-		# View Status
-		echo '<td>', $tpl_bug_view_state_enum, '</td>';
-
-		# Date Submitted
-		echo '<td>', $tpl_date_submitted, '</td>';
-
-		# Date Updated
-		echo '<td>', $tpl_last_updated, '</td>';
-
-		echo '</tr>';
-
-		# spacer
-		echo '<tr class="spacer"><td colspan="6"></td></tr>';
-	}
-
-	#
-	# Reporter
-	#
-
-	if ( $tpl_show_reporter ) {
-		echo '<tr ', helper_alternate_class(), '>';
-
-		$t_spacer = 4;
-
+	
+		if ( $tpl_top_buttons_enabled ) {
+			echo '<tr align="center">';
+			echo '<td align="center" colspan="6">';
+			html_buttons_view_bug_page( $tpl_bug_id );
+			echo '</td>';
+			echo '</tr>';
+		}
+	
+		if ( $tpl_show_id || $tpl_show_project || $tpl_show_category || $tpl_show_view_state || $tpl_show_date_submitted || $tpl_show_last_updated ) {
+			# Labels
+			echo '<tr>';
+			echo '<td class="category" width="15%">', $tpl_show_id ? lang_get( 'id' ) : '', '</td>';
+			echo '<td class="category" width="20%">', $tpl_show_project ? lang_get( 'email_project' ) : '', '</td>';
+			echo '<td class="category" width="15%">', $tpl_show_category ? lang_get( 'category' ) : '', '</td>';
+			echo '<td class="category" width="15%">', $tpl_show_view_state ? lang_get( 'view_status' ) : '', '</td>';
+			echo '<td class="category" width="15%">', $tpl_show_date_submitted ? lang_get( 'date_submitted' ) : '', '</td>';
+			echo '<td class="category" width="20%">', $tpl_show_last_updated ? lang_get( 'last_update' ) : '','</td>';
+			echo '</tr>';
+	
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			# Bug ID
+			echo '<td>', $tpl_formatted_bug_id, '</td>';
+	
+			# Project
+			echo '<td>', $tpl_project_name, '</td>';
+	
+			# Category
+			echo '<td>', $tpl_category, '</td>';
+	
+			# View Status
+			echo '<td>', $tpl_bug_view_state_enum, '</td>';
+	
+			# Date Submitted
+			echo '<td>', $tpl_date_submitted, '</td>';
+	
+			# Date Updated
+			echo '<td>', $tpl_last_updated, '</td>';
+	
+			echo '</tr>';
+	
+			# spacer
+			echo '<tr class="spacer"><td colspan="6"></td></tr>';
+		}
+	
+		#
 		# Reporter
+		#
+	
 		if ( $tpl_show_reporter ) {
-			echo '<td class="category">', lang_get( 'reporter' ), '</td>';
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			$t_spacer = 4;
+	
+			# Reporter
+			if ( $tpl_show_reporter ) {
+				echo '<td class="category">', lang_get( 'reporter' ), '</td>';
+				echo '<td>';
+				print_user_with_subject( $tpl_bug->reporter_id, $tpl_bug_id );
+				echo '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			echo '<td colspan="', $t_spacer, '">&#160;</td>';
+	
+			echo '</tr>';
+		}
+	
+		#
+		# Handler, Due Date
+		#
+	
+		if ( $tpl_show_handler || $tpl_show_due_date ) {
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			$t_spacer = 2;
+	
+			# Handler
+			echo '<td class="category">', lang_get( 'assigned_to' ), '</td>';
 			echo '<td>';
-			print_user_with_subject( $tpl_bug->reporter_id, $tpl_bug_id );
+			print_user_with_subject( $tpl_bug->handler_id, $tpl_bug_id );
 			echo '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		echo '<td colspan="', $t_spacer, '">&#160;</td>';
-
-		echo '</tr>';
-	}
-
-	#
-	# Handler, Due Date
-	#
-
-	if ( $tpl_show_handler || $tpl_show_due_date ) {
-		echo '<tr ', helper_alternate_class(), '>';
-
-		$t_spacer = 2;
-
-		# Handler
-		echo '<td class="category">', lang_get( 'assigned_to' ), '</td>';
-		echo '<td>';
-		print_user_with_subject( $tpl_bug->handler_id, $tpl_bug_id );
-		echo '</td>';
-
-		# Due Date
-		if ( $tpl_show_due_date ) {
-			echo '<td class="category">', lang_get( 'due_date' ), '</td>';
-
-			if ( $tpl_bug_overdue ) {
-				echo '<td class="overdue">', $tpl_bug_due_date, '</td>';
+	
+			# Due Date
+			if ( $tpl_show_due_date ) {
+				echo '<td class="category">', lang_get( 'due_date' ), '</td>';
+	
+				if ( $tpl_bug_overdue ) {
+					echo '<td class="overdue">', $tpl_bug_due_date, '</td>';
+				} else {
+					echo '<td>', $tpl_bug_due_date, '</td>';
+				}
 			} else {
-				echo '<td>', $tpl_bug_due_date, '</td>';
+				$t_spacer += 2;
 			}
-		} else {
-			$t_spacer += 2;
-		}
-
-		echo '<td colspan="', $t_spacer, '">&#160;</td>';
-		echo '</tr>';
-	}
-
-	#
-	# Priority, Severity, Reproducibility
-	#
-
-	if ( $tpl_show_priority || $tpl_show_severity || $tpl_show_reproducibility ) {
-		echo '<tr ', helper_alternate_class(), '>';
-
-		$t_spacer = 0;
-
-		# Priority
-		if ( $tpl_show_priority ) {
-			echo '<td class="category">', lang_get( 'priority' ), '</td>';
-			echo '<td>', $tpl_priority, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# Severity
-		if ( $tpl_show_severity ) {
-			echo '<td class="category">', lang_get( 'severity' ), '</td>';
-			echo '<td>', $tpl_severity, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# Reproducibility
-		if ( $tpl_show_reproducibility ) {
-			echo '<td class="category">', lang_get( 'reproducibility' ), '</td>';
-			echo '<td>', $tpl_reproducibility, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# spacer
-		if ( $t_spacer > 0 ) {
+	
 			echo '<td colspan="', $t_spacer, '">&#160;</td>';
+			echo '</tr>';
 		}
-
-		echo '</tr>';
-	}
-
-	#
-	# Status, Resolution
-	#
-
-	if ( $tpl_show_status || $tpl_show_resolution ) {
-		echo '<tr ', helper_alternate_class(), '>';
-
-		$t_spacer = 2;
-
-		# Status
-		if ( $tpl_show_status ) {
-			echo '<td class="category">', lang_get( 'status' ), '</td>';
-			echo '<td bgcolor="', get_status_color( $tpl_bug->status ), '">', $tpl_status, '</td>';
-		} else {
-			$t_spacer += 2;
+	
+		#
+		# Priority, Severity, Reproducibility
+		#
+	
+		if ( $tpl_show_priority || $tpl_show_severity || $tpl_show_reproducibility ) {
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			$t_spacer = 0;
+	
+			# Priority
+			if ( $tpl_show_priority ) {
+				echo '<td class="category">', lang_get( 'priority' ), '</td>';
+				echo '<td>', $tpl_priority, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# Severity
+			if ( $tpl_show_severity ) {
+				echo '<td class="category">', lang_get( 'severity' ), '</td>';
+				echo '<td>', $tpl_severity, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# Reproducibility
+			if ( $tpl_show_reproducibility ) {
+				echo '<td class="category">', lang_get( 'reproducibility' ), '</td>';
+				echo '<td>', $tpl_reproducibility, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# spacer
+			if ( $t_spacer > 0 ) {
+				echo '<td colspan="', $t_spacer, '">&#160;</td>';
+			}
+	
+			echo '</tr>';
 		}
-
-		# Resolution
-		if ( $tpl_show_resolution ) {
-			echo '<td class="category">', lang_get( 'resolution' ), '</td>';
-			echo '<td>', $tpl_resolution, '</td>';
-		} else {
-			$t_spacer += 2;
+	
+		#
+		# Status, Resolution
+		#
+	
+		if ( $tpl_show_status || $tpl_show_resolution || $tpl_show_gravity ) {
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			$t_spacer = 0;
+	
+			# Status
+			if ( $tpl_show_status ) {
+				echo '<td class="category">', lang_get( 'status' ), '</td>';
+				echo '<td bgcolor="', get_status_color( $tpl_bug->status ), '">', $tpl_status, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# Resolution
+			if ( $tpl_show_resolution ) {
+				echo '<td class="category">', lang_get( 'resolution' ), '</td>';
+				echo '<td>', $tpl_resolution, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# Gravity
+			if ( $tpl_show_gravity ) {
+				echo '<td class="category">', lang_get( 'gravity' ), '</td>';
+				echo '<td>', $tpl_gravity, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# spacer
+			if ( $t_spacer > 0 ) {
+				echo '<td colspan="', $t_spacer, '">&#160;</td>';
+			}
+	
+			echo '</tr>';
 		}
-
-		# spacer
-		if ( $t_spacer > 0 ) {
+	
+		#
+		# Projection, ETA
+		#
+	
+		if ( $tpl_show_projection || $tpl_show_eta ) {
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			$t_spacer = 2;
+	
+			if ( $tpl_show_projection ) {
+				# Projection
+				echo '<td class="category">', lang_get( 'projection' ), '</td>';
+				echo '<td>', $tpl_projection, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# ETA
+			if ( $tpl_show_eta ) {
+				echo '<td class="category">', lang_get( 'eta' ), '</td>';
+				echo '<td>', $tpl_eta, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
 			echo '<td colspan="', $t_spacer, '">&#160;</td>';
+			echo '</tr>';
 		}
-
-		echo '</tr>';
-	}
-
-	#
-	# Projection, ETA
-	#
-
-	if ( $tpl_show_projection || $tpl_show_eta ) {
-		echo '<tr ', helper_alternate_class(), '>';
-
-		$t_spacer = 2;
-
-		if ( $tpl_show_projection ) {
-			# Projection
-			echo '<td class="category">', lang_get( 'projection' ), '</td>';
-			echo '<td>', $tpl_projection, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# ETA
-		if ( $tpl_show_eta ) {
-			echo '<td class="category">', lang_get( 'eta' ), '</td>';
-			echo '<td>', $tpl_eta, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		echo '<td colspan="', $t_spacer, '">&#160;</td>';
-		echo '</tr>';
-	}
-
-	#
-	# Platform, OS, OS Version
-	#
-
-	if ( $tpl_show_platform || $tpl_show_os || $tpl_show_os_version ) {
-		$t_spacer = 0;
-
-		echo '<tr ', helper_alternate_class(), '>';
-
-		# Platform
-		if ( $tpl_show_platform ) {
-			echo '<td class="category">', lang_get( 'platform' ), '</td>';
-			echo '<td>', $tpl_platform, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# Operating System
-		if ( $tpl_show_os ) {
-			echo '<td class="category">', lang_get( 'os' ), '</td>';
-			echo '<td>', $tpl_os, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# OS Version
-		if ( $tpl_show_os_version ) {
-			echo '<td class="category">', lang_get( 'os_version' ), '</td>';
-			echo '<td>', $tpl_os_version, '</td>';
-		} else {
-			$t_spacer += 2;
+	
+		#
+		# Platform, OS, OS Version
+		#
+	
+		if ( $tpl_show_platform || $tpl_show_os || $tpl_show_os_version ) {
+			$t_spacer = 0;
+	
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			# Platform
+			if ( $tpl_show_platform ) {
+				echo '<td class="category">', lang_get( 'platform' ), '</td>';
+				echo '<td>', $tpl_platform, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# Operating System
+			if ( $tpl_show_os ) {
+				echo '<td class="category">', lang_get( 'os' ), '</td>';
+				echo '<td>', $tpl_os, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# OS Version
+			if ( $tpl_show_os_version ) {
+				echo '<td class="category">', lang_get( 'os_version' ), '</td>';
+				echo '<td>', $tpl_os_version, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			if ( $t_spacer > 0 ) {
+				echo '<td colspan="', $t_spacer, '">&#160;</td>';
+			}
+	
+			echo '</tr>';
 		}
-
-		if ( $t_spacer > 0 ) {
+	
+		#
+		# Product Version, Product Build
+		#
+	
+		if ( $tpl_show_product_version || $tpl_show_product_build ) {
+			$t_spacer = 2;
+	
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			# Product Version
+			if ( $tpl_show_product_version ) {
+				echo '<td class="category">', lang_get( 'product_version' ), '</td>';
+				echo '<td>', $tpl_product_version_string, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# Product Build
+			if ( $tpl_show_product_build ) {
+				echo '<td class="category">', lang_get( 'product_build' ), '</td>';
+				echo '<td>', $tpl_product_build, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# spacer
 			echo '<td colspan="', $t_spacer, '">&#160;</td>';
+	
+			echo '</tr>';
 		}
-
-		echo '</tr>';
-	}
-
-	#
-	# Product Version, Product Build
-	#
-
-	if ( $tpl_show_product_version || $tpl_show_product_build ) {
-		$t_spacer = 2;
-
-		echo '<tr ', helper_alternate_class(), '>';
-
-		# Product Version
-		if ( $tpl_show_product_version ) {
-			echo '<td class="category">', lang_get( 'product_version' ), '</td>';
-			echo '<td>', $tpl_product_version_string, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# Product Build
-		if ( $tpl_show_product_build ) {
-			echo '<td class="category">', lang_get( 'product_build' ), '</td>';
-			echo '<td>', $tpl_product_build, '</td>';
-		} else {
-			$t_spacer += 2;
+	
+		#
+		# Target Version, Fixed In Version
+		#
+	
+		if ( $tpl_show_target_version || $tpl_show_fixed_in_version ) {
+			$t_spacer = 2;
+	
+			echo '<tr ', helper_alternate_class(), '>';
+	
+			# target version
+			if ( $tpl_show_target_version ) {
+				# Target Version
+				echo '<td class="category">', lang_get( 'target_version' ), '</td>';
+				echo '<td>', $tpl_target_version_string, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# fixed in version
+			if ( $tpl_show_fixed_in_version ) {
+				echo '<td class="category">', lang_get( 'fixed_in_version' ), '</td>';
+				echo '<td>', $tpl_fixed_in_version_string, '</td>';
+			} else {
+				$t_spacer += 2;
+			}
+	
+			# spacer
+			echo '<td colspan="', $t_spacer, '">&#160;</td>';
+	
+			echo '</tr>';
 		}
-
+	
+		#
+		# Bug Details Event Signal
+		#
+	
+		event_signal( 'EVENT_VIEW_BUG_DETAILS', array( $tpl_bug_id ) );
+	
 		# spacer
-		echo '<td colspan="', $t_spacer, '">&#160;</td>';
-
-		echo '</tr>';
-	}
-
-	#
-	# Target Version, Fixed In Version
-	#
-
-	if ( $tpl_show_target_version || $tpl_show_fixed_in_version ) {
-		$t_spacer = 2;
-
-		echo '<tr ', helper_alternate_class(), '>';
-
-		# target version
-		if ( $tpl_show_target_version ) {
-			# Target Version
-			echo '<td class="category">', lang_get( 'target_version' ), '</td>';
-			echo '<td>', $tpl_target_version_string, '</td>';
-		} else {
-			$t_spacer += 2;
-		}
-
-		# fixed in version
-		if ( $tpl_show_fixed_in_version ) {
-			echo '<td class="category">', lang_get( 'fixed_in_version' ), '</td>';
-			echo '<td>', $tpl_fixed_in_version_string, '</td>';
-		} else {
-			$t_spacer += 2;
+		echo '<tr class="spacer"><td colspan="6"></td></tr>';
+	
+		#
+		# Bug Details (screen wide fields)
+		#
+	
+		# Summary
+		if ( $tpl_show_summary ) {
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category">', lang_get( 'summary' ), '</td>';
+			echo '<td colspan="5">', $tpl_summary, '</td>';
+			echo '</tr>';
+		}
+	
+		# Description
+		if ( $tpl_show_description ) {
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category">', lang_get( 'description' ), '</td>';
+			echo '<td colspan="5">', $tpl_description, '</td>';
+			echo '</tr>';
+		}
+	
+		# Steps to Reproduce
+		if ( $tpl_show_steps_to_reproduce ) {
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category">', lang_get( 'steps_to_reproduce' ), '</td>';
+			echo '<td colspan="5">', $tpl_steps_to_reproduce, '</td>';
+			echo '</tr>';
+		}
+	
+		# Additional Information
+		if ( $tpl_show_additional_information ) {
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category">', lang_get( 'additional_information' ), '</td>';
+			echo '<td colspan="5">', $tpl_additional_information, '</td>';
+			echo '</tr>';
+		}
+	
+		# Tagging
+		if ( $tpl_show_tags ) {
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category">', lang_get( 'tags' ), '</td>';
+			echo '<td colspan="5">';
+			tag_display_attached( $tpl_bug_id );
+			echo '</td></tr>';
+		}
+	
+		# Attachments Form
+		if ( $tpl_can_attach_tag ) {
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category">', lang_get( 'tag_attach_long' ), '</td>';
+			echo '<td colspan="5">';
+			print_tag_attach_form( $tpl_bug_id );
+			echo '</td></tr>';
 		}
-
-		# spacer
-		echo '<td colspan="', $t_spacer, '">&#160;</td>';
-
-		echo '</tr>';
-	}
-
-	#
-	# Bug Details Event Signal
-	#
-
-	event_signal( 'EVENT_VIEW_BUG_DETAILS', array( $tpl_bug_id ) );
-
-	# spacer
-	echo '<tr class="spacer"><td colspan="6"></td></tr>';
-
-	#
-	# Bug Details (screen wide fields)
-	#
-
-	# Summary
-	if ( $tpl_show_summary ) {
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category">', lang_get( 'summary' ), '</td>';
-		echo '<td colspan="5">', $tpl_summary, '</td>';
-		echo '</tr>';
-	}
-
-	# Description
-	if ( $tpl_show_description ) {
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category">', lang_get( 'description' ), '</td>';
-		echo '<td colspan="5">', $tpl_description, '</td>';
-		echo '</tr>';
-	}
-
-	# Steps to Reproduce
-	if ( $tpl_show_steps_to_reproduce ) {
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category">', lang_get( 'steps_to_reproduce' ), '</td>';
-		echo '<td colspan="5">', $tpl_steps_to_reproduce, '</td>';
-		echo '</tr>';
-	}
-
-	# Additional Information
-	if ( $tpl_show_additional_information ) {
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category">', lang_get( 'additional_information' ), '</td>';
-		echo '<td colspan="5">', $tpl_additional_information, '</td>';
-		echo '</tr>';
-	}
-
-	# Tagging
-	if ( $tpl_show_tags ) {
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category">', lang_get( 'tags' ), '</td>';
-		echo '<td colspan="5">';
-		tag_display_attached( $tpl_bug_id );
-		echo '</td></tr>';
-	}
-
-	# Attachments Form
-	if ( $tpl_can_attach_tag ) {
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category">', lang_get( 'tag_attach_long' ), '</td>';
-		echo '<td colspan="5">';
-		print_tag_attach_form( $tpl_bug_id );
-		echo '</td></tr>';
-	}
-
-	# spacer
-	echo '<tr class="spacer"><td colspan="6"></td></tr>';
-
-	# Custom Fields
-	$t_custom_fields_found = false;
-	$t_related_custom_field_ids = custom_field_get_linked_ids( $tpl_bug->project_id );
-
-	foreach( $t_related_custom_field_ids as $t_id ) {
-		if ( !custom_field_has_read_access( $t_id, $f_bug_id ) ) {
-			continue;
-		} # has read access
-
-		$t_custom_fields_found = true;
-		$t_def = custom_field_get_definition( $t_id );
-
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category">', string_display( lang_get_defaulted( $t_def['name'] ) ), '</td>';
-		echo '<td colspan="5">';
-		print_custom_field_value( $t_def, $t_id, $f_bug_id );
-		echo '</td></tr>';
-	}
-
-	if ( $t_custom_fields_found ) {
+	
 		# spacer
 		echo '<tr class="spacer"><td colspan="6"></td></tr>';
-	} # custom fields found
-
-	# Attachments
-	if ( $tpl_show_attachments ) {
-		echo '<tr ', helper_alternate_class(), '>';
-		echo '<td class="category"><a name="attachments" id="attachments" />', lang_get( 'attached_files' ), '</td>';
-		echo '<td colspan="5">';
-		print_bug_attachments_list( $tpl_bug_id );
-		echo '</td></tr>';
-	}
-
-	if ( $tpl_bottom_buttons_enabled ) {
-		echo '<tr align="center"><td align="center" colspan="6">';
-		html_buttons_view_bug_page( $tpl_bug_id );
-		echo '</td></tr>';
-	}
-
-	echo '</table>';
-
-	# User list sponsoring the bug
-	include( $tpl_mantis_dir . 'bug_sponsorship_list_view_inc.php' );
-
-	# Bug Relationships
-	if ( $tpl_show_relationships_box ) {
-		relationship_view_box ( $tpl_bug->id );
-	}
-
-	# File upload box
-	if ( $tpl_show_upload_form ) {
-		include( $tpl_mantis_dir . 'bug_file_upload_inc.php' );
-	}
-
-	# User list monitoring the bug
-	if ( $tpl_show_monitor_box ) {
-		include( $tpl_mantis_dir . 'bug_monitor_list_view_inc.php' );
-	}
-
-	# Bugnotes and "Add Note" box
-	if ( 'ASC' == current_user_get_pref( 'bugnote_order' ) ) {
-		include( $tpl_mantis_dir . 'bugnote_view_inc.php' );
-
-		if ( !$tpl_force_readonly ) {
-			include( $tpl_mantis_dir . 'bugnote_add_inc.php' );
+	
+		# Custom Fields
+		$t_custom_fields_found = false;
+		$t_related_custom_field_ids = custom_field_get_linked_ids( $tpl_bug->project_id );
+	
+		foreach( $t_related_custom_field_ids as $t_id ) {
+			if ( !custom_field_has_read_access( $t_id, $f_bug_id ) ) {
+				continue;
+			} # has read access
+	
+			$t_custom_fields_found = true;
+			$t_def = custom_field_get_definition( $t_id );
+	
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category">', string_display( lang_get_defaulted( $t_def['name'] ) ), '</td>';
+			echo '<td colspan="5">';
+			print_custom_field_value( $t_def, $t_id, $f_bug_id );
+			echo '</td></tr>';
+		}
+	
+		if ( $t_custom_fields_found ) {
+			# spacer
+			echo '<tr class="spacer"><td colspan="6"></td></tr>';
+		} # custom fields found
+	
+		# Attachments
+		if ( $tpl_show_attachments ) {
+			echo '<tr ', helper_alternate_class(), '>';
+			echo '<td class="category"><a name="attachments" id="attachments" />', lang_get( 'attached_files' ), '</td>';
+			echo '<td colspan="5">';
+			print_bug_attachments_list( $tpl_bug_id );
+			echo '</td></tr>';
+		}
+	
+		# Actions buttons
+		if ( $tpl_bottom_buttons_enabled ) {
+			echo '<tr align="center"><td align="center" colspan="6">';
+			html_buttons_view_bug_page( $tpl_bug_id );
+			echo '</td></tr>';
+		}
+	
+		echo '</table>';
+	
+		# User list sponsoring the bug
+		include( $tpl_mantis_dir . 'bug_sponsorship_list_view_inc.php' );
+	
+		# Bug Relationships
+		if ( $tpl_show_relationships_box ) {
+			relationship_view_box ( $tpl_bug->id );
+		}
+	
+		# File upload box
+		if ( $tpl_show_upload_form ) {
+			include( $tpl_mantis_dir . 'bug_file_upload_inc.php' );
+		}
+	
+		# User list monitoring the bug
+		if ( $tpl_show_monitor_box ) {
+			include( $tpl_mantis_dir . 'bug_monitor_list_view_inc.php' );
+		}
+	
+		# Bugnotes and "Add Note" box
+		if ( 'ASC' == current_user_get_pref( 'bugnote_order' ) ) {
+			include( $tpl_mantis_dir . 'bugnote_view_inc.php' );
+	
+			if ( !$tpl_force_readonly ) {
+				include( $tpl_mantis_dir . 'bugnote_add_inc.php' );
+			}
+		} else {
+			if ( !$tpl_force_readonly ) {
+				include( $tpl_mantis_dir . 'bugnote_add_inc.php' );
+			}
+	
+			include( $tpl_mantis_dir . 'bugnote_view_inc.php' );
 		}
-	} else {
-		if ( !$tpl_force_readonly ) {
-			include( $tpl_mantis_dir . 'bugnote_add_inc.php' );
+	
+		# Allow plugins to display stuff after notes
+		event_signal( 'EVENT_VIEW_BUG_EXTRA', array( $f_bug_id ) );
+	
+		# Time tracking statistics
+		if ( config_get( 'time_tracking_enabled' ) &&
+			access_has_bug_level( config_get( 'time_tracking_view_threshold' ), $f_bug_id ) ) {
+			include( $tpl_mantis_dir . 'bugnote_stats_inc.php' );
 		}
-
-		include( $tpl_mantis_dir . 'bugnote_view_inc.php' );
-	}
-
-	# Allow plugins to display stuff after notes
-	event_signal( 'EVENT_VIEW_BUG_EXTRA', array( $f_bug_id ) );
-
-	# Time tracking statistics
-	if ( config_get( 'time_tracking_enabled' ) &&
-		access_has_bug_level( config_get( 'time_tracking_view_threshold' ), $f_bug_id ) ) {
-		include( $tpl_mantis_dir . 'bugnote_stats_inc.php' );
-	}
-
-	# History
-	if ( $tpl_show_history ) {
-		include( $tpl_mantis_dir . 'history_inc.php' );
+	
+		# History
+		if ( $tpl_show_history ) {
+			include( $tpl_mantis_dir . 'history_inc.php' );
+		}
+		last_visited_issue( $tpl_bug_id );
 	}
 
 	html_page_bottom();
-
-	last_visited_issue( $tpl_bug_id );
diff -rNU5 mantisbt-1.2.5/CAS.php mantis_ard/CAS.php
--- mantisbt-1.2.5/CAS.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/CAS.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,1975 @@
+<?php
+
+/**
+ * Licensed to Jasig under one or more contributor license
+ * agreements. See the NOTICE file distributed with this work for
+ * additional information regarding copyright ownership.
+ *
+ * Jasig licenses this file to you under the Apache License,
+ * Version 2.0 (the "License"); you may not use this file except in
+ * compliance with the License. You may obtain a copy of the License at:
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ *
+ *
+ * Interface class of the phpCAS library
+ * PHP Version 5
+ *
+ * @file     CAS/CAS.php
+ * @category Authentication
+ * @package  PhpCAS
+ * @author   Pascal Aubry <pascal.aubry@univ-rennes1.fr>
+ * @author   Olivier Berger <olivier.berger@it-sudparis.eu>
+ * @author   Brett Bieber <brett.bieber@gmail.com>
+ * @author   Joachim Fritschi <jfritschi@freenet.de>
+ * @author   Adam Franco <afranco@middlebury.edu>
+ * @license  http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0
+ * @link     https://wiki.jasig.org/display/CASC/phpCAS
+ * @ingroup public
+ */
+
+
+//
+// hack by Vangelis Haniotakis to handle the absence of $_SERVER['REQUEST_URI']
+// in IIS
+//
+
+if (php_sapi_name() != 'cli') {
+    if (!isset($_SERVER['REQUEST_URI'])) {
+        $_SERVER['REQUEST_URI'] = $_SERVER['SCRIPT_NAME'] . '?' . $_SERVER['QUERY_STRING'];
+    }
+}
+
+// Add a E_USER_DEPRECATED for php versions <= 5.2
+if (!defined('E_USER_DEPRECATED')) {
+    define('E_USER_DEPRECATED', E_USER_NOTICE);
+}
+
+
+// ########################################################################
+//  CONSTANTS
+// ########################################################################
+
+// ------------------------------------------------------------------------
+//  CAS VERSIONS
+// ------------------------------------------------------------------------
+
+/**
+ * phpCAS version. accessible for the user by phpCAS::getVersion().
+ */
+define('PHPCAS_VERSION', '1.3.1');
+
+/**
+ * @addtogroup public
+ * @{
+ */
+
+/**
+ * CAS version 1.0
+ */
+define("CAS_VERSION_1_0", '1.0');
+/*!
+ * CAS version 2.0
+*/
+define("CAS_VERSION_2_0", '2.0');
+
+// ------------------------------------------------------------------------
+//  SAML defines
+// ------------------------------------------------------------------------
+
+/**
+ * SAML protocol
+ */
+define("SAML_VERSION_1_1", 'S1');
+
+/**
+ * XML header for SAML POST
+ */
+define("SAML_XML_HEADER", '<?xml version="1.0" encoding="UTF-8"?>');
+
+/**
+ * SOAP envelope for SAML POST
+ */
+define("SAML_SOAP_ENV", '<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"><SOAP-ENV:Header/>');
+
+/**
+ * SOAP body for SAML POST
+ */
+define("SAML_SOAP_BODY", '<SOAP-ENV:Body>');
+
+/**
+ * SAMLP request
+ */
+define("SAMLP_REQUEST", '<samlp:Request xmlns:samlp="urn:oasis:names:tc:SAML:1.0:protocol"  MajorVersion="1" MinorVersion="1" RequestID="_192.168.16.51.1024506224022" IssueInstant="2002-06-19T17:03:44.022Z">');
+define("SAMLP_REQUEST_CLOSE", '</samlp:Request>');
+
+/**
+ * SAMLP artifact tag (for the ticket)
+ */
+define("SAML_ASSERTION_ARTIFACT", '<samlp:AssertionArtifact>');
+
+/**
+ * SAMLP close
+ */
+define("SAML_ASSERTION_ARTIFACT_CLOSE", '</samlp:AssertionArtifact>');
+
+/**
+ * SOAP body close
+ */
+define("SAML_SOAP_BODY_CLOSE", '</SOAP-ENV:Body>');
+
+/**
+ * SOAP envelope close
+ */
+define("SAML_SOAP_ENV_CLOSE", '</SOAP-ENV:Envelope>');
+
+/**
+ * SAML Attributes
+ */
+define("SAML_ATTRIBUTES", 'SAMLATTRIBS');
+
+/** @} */
+/**
+ * @addtogroup publicPGTStorage
+ * @{
+ */
+// ------------------------------------------------------------------------
+//  FILE PGT STORAGE
+// ------------------------------------------------------------------------
+/**
+ * Default path used when storing PGT's to file
+ */
+define("CAS_PGT_STORAGE_FILE_DEFAULT_PATH", session_save_path());
+/** @} */
+// ------------------------------------------------------------------------
+// SERVICE ACCESS ERRORS
+// ------------------------------------------------------------------------
+/**
+ * @addtogroup publicServices
+ * @{
+ */
+
+/**
+ * phpCAS::service() error code on success
+ */
+define("PHPCAS_SERVICE_OK", 0);
+/**
+ * phpCAS::service() error code when the PT could not retrieve because
+ * the CAS server did not respond.
+ */
+define("PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE", 1);
+/**
+ * phpCAS::service() error code when the PT could not retrieve because
+ * the response of the CAS server was ill-formed.
+ */
+define("PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE", 2);
+/**
+ * phpCAS::service() error code when the PT could not retrieve because
+ * the CAS server did not want to.
+ */
+define("PHPCAS_SERVICE_PT_FAILURE", 3);
+/**
+ * phpCAS::service() error code when the service was not available.
+ */
+define("PHPCAS_SERVICE_NOT_AVAILABLE", 4);
+
+// ------------------------------------------------------------------------
+// SERVICE TYPES
+// ------------------------------------------------------------------------
+/**
+ * phpCAS::getProxiedService() type for HTTP GET
+ */
+define("PHPCAS_PROXIED_SERVICE_HTTP_GET", 'CAS_ProxiedService_Http_Get');
+/**
+ * phpCAS::getProxiedService() type for HTTP POST
+ */
+define("PHPCAS_PROXIED_SERVICE_HTTP_POST", 'CAS_ProxiedService_Http_Post');
+/**
+ * phpCAS::getProxiedService() type for IMAP
+ */
+define("PHPCAS_PROXIED_SERVICE_IMAP", 'CAS_ProxiedService_Imap');
+
+
+/** @} */
+// ------------------------------------------------------------------------
+//  LANGUAGES
+// ------------------------------------------------------------------------
+/**
+ * @addtogroup publicLang
+ * @{
+ */
+
+define("PHPCAS_LANG_ENGLISH", 'CAS_Languages_English');
+define("PHPCAS_LANG_FRENCH", 'CAS_Languages_French');
+define("PHPCAS_LANG_GREEK", 'CAS_Languages_Greek');
+define("PHPCAS_LANG_GERMAN", 'CAS_Languages_German');
+define("PHPCAS_LANG_JAPANESE", 'CAS_Languages_Japanese');
+define("PHPCAS_LANG_SPANISH", 'CAS_Languages_Spanish');
+define("PHPCAS_LANG_CATALAN", 'CAS_Languages_Catalan');
+
+/** @} */
+
+/**
+ * @addtogroup internalLang
+ * @{
+ */
+
+/**
+ * phpCAS default language (when phpCAS::setLang() is not used)
+ */
+define("PHPCAS_LANG_DEFAULT", PHPCAS_LANG_ENGLISH);
+
+/** @} */
+// ------------------------------------------------------------------------
+//  DEBUG
+// ------------------------------------------------------------------------
+/**
+ * @addtogroup publicDebug
+ * @{
+ */
+
+/**
+ * The default directory for the debug file under Unix.
+ */
+define('DEFAULT_DEBUG_DIR', '/tmp/');
+
+/** @} */
+
+// include the class autoloader
+require_once dirname(__FILE__) . '/CAS/Autoload.php';
+
+/**
+ * The phpCAS class is a simple container for the phpCAS library. It provides CAS
+ * authentication for web applications written in PHP.
+ *
+ * @ingroup public
+ * @class phpCAS
+ * @category Authentication
+ * @package  PhpCAS
+ * @author   Pascal Aubry <pascal.aubry@univ-rennes1.fr>
+ * @author   Olivier Berger <olivier.berger@it-sudparis.eu>
+ * @author   Brett Bieber <brett.bieber@gmail.com>
+ * @author   Joachim Fritschi <jfritschi@freenet.de>
+ * @author   Adam Franco <afranco@middlebury.edu>
+ * @license  http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0
+ * @link     https://wiki.jasig.org/display/CASC/phpCAS
+ */
+
+class phpCAS
+{
+
+    /**
+     * This variable is used by the interface class phpCAS.
+     *
+     * @hideinitializer
+     */
+    private static $_PHPCAS_CLIENT;
+
+    /**
+     * This variable is used to store where the initializer is called from
+     * (to print a comprehensive error in case of multiple calls).
+     *
+     * @hideinitializer
+     */
+    private static $_PHPCAS_INIT_CALL;
+
+    /**
+     * This variable is used to store phpCAS debug mode.
+     *
+     * @hideinitializer
+     */
+    private static $_PHPCAS_DEBUG;
+
+
+    // ########################################################################
+    //  INITIALIZATION
+    // ########################################################################
+
+    /**
+     * @addtogroup publicInit
+     * @{
+     */
+
+    /**
+     * phpCAS client initializer.
+     *
+     * @param string $server_version  the version of the CAS server
+     * @param string $server_hostname the hostname of the CAS server
+     * @param string $server_port     the port the CAS server is running on
+     * @param string $server_uri      the URI the CAS server is responding on
+     * @param bool   $changeSessionID Allow phpCAS to change the session_id (Single 
+     * Sign Out/handleLogoutRequests is based on that change)
+     *
+     * @return a newly created CAS_Client object
+     * @note Only one of the phpCAS::client() and phpCAS::proxy functions should be
+     * called, only once, and before all other methods (except phpCAS::getVersion()
+     * and phpCAS::setDebug()).
+     */
+    public static function client($server_version, $server_hostname,
+        $server_port, $server_uri, $changeSessionID = true
+    ) {
+        phpCAS :: traceBegin();
+        if (is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error(self::$_PHPCAS_INIT_CALL['method'] . '() has already been called (at ' . self::$_PHPCAS_INIT_CALL['file'] . ':' . self::$_PHPCAS_INIT_CALL['line'] . ')');
+        }
+        if (gettype($server_version) != 'string') {
+            phpCAS :: error('type mismatched for parameter $server_version (should be `string\')');
+        }
+        if (gettype($server_hostname) != 'string') {
+            phpCAS :: error('type mismatched for parameter $server_hostname (should be `string\')');
+        }
+        if (gettype($server_port) != 'integer') {
+            phpCAS :: error('type mismatched for parameter $server_port (should be `integer\')');
+        }
+        if (gettype($server_uri) != 'string') {
+            phpCAS :: error('type mismatched for parameter $server_uri (should be `string\')');
+        }
+
+        // store where the initializer is called from
+        $dbg = debug_backtrace();
+        self::$_PHPCAS_INIT_CALL = array (
+            'done' => true,
+            'file' => $dbg[0]['file'],
+            'line' => $dbg[0]['line'],
+            'method' => __CLASS__ . '::' . __FUNCTION__
+        );
+
+        // initialize the object $_PHPCAS_CLIENT
+        self::$_PHPCAS_CLIENT = new CAS_Client(
+            $server_version, false, $server_hostname, $server_port, $server_uri,
+            $changeSessionID
+        );
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * phpCAS proxy initializer.
+     *
+     * @param string $server_version  the version of the CAS server
+     * @param string $server_hostname the hostname of the CAS server
+     * @param string $server_port     the port the CAS server is running on
+     * @param string $server_uri      the URI the CAS server is responding on
+     * @param bool   $changeSessionID Allow phpCAS to change the session_id (Single 
+     * Sign Out/handleLogoutRequests is based on that change)
+     *
+     * @return a newly created CAS_Client object
+     * @note Only one of the phpCAS::client() and phpCAS::proxy functions should be
+     * called, only once, and before all other methods (except phpCAS::getVersion()
+     * and phpCAS::setDebug()).
+     */
+    public static function proxy($server_version, $server_hostname,
+        $server_port, $server_uri, $changeSessionID = true
+    ) {
+        phpCAS :: traceBegin();
+        if (is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error(self::$_PHPCAS_INIT_CALL['method'] . '() has already been called (at ' . self::$_PHPCAS_INIT_CALL['file'] . ':' . self::$_PHPCAS_INIT_CALL['line'] . ')');
+        }
+        if (gettype($server_version) != 'string') {
+            phpCAS :: error('type mismatched for parameter $server_version (should be `string\')');
+        }
+        if (gettype($server_hostname) != 'string') {
+            phpCAS :: error('type mismatched for parameter $server_hostname (should be `string\')');
+        }
+        if (gettype($server_port) != 'integer') {
+            phpCAS :: error('type mismatched for parameter $server_port (should be `integer\')');
+        }
+        if (gettype($server_uri) != 'string') {
+            phpCAS :: error('type mismatched for parameter $server_uri (should be `string\')');
+        }
+
+        // store where the initialzer is called from
+        $dbg = debug_backtrace();
+        self::$_PHPCAS_INIT_CALL = array (
+            'done' => true,
+            'file' => $dbg[0]['file'],
+            'line' => $dbg[0]['line'],
+            'method' => __CLASS__ . '::' . __FUNCTION__
+        );
+
+        // initialize the object $_PHPCAS_CLIENT
+        self::$_PHPCAS_CLIENT = new CAS_Client(
+            $server_version, true, $server_hostname, $server_port, $server_uri,
+            $changeSessionID
+        );
+        phpCAS :: traceEnd();
+    }
+
+    /** @} */
+    // ########################################################################
+    //  DEBUGGING
+    // ########################################################################
+
+    /**
+     * @addtogroup publicDebug
+     * @{
+     */
+
+    /**
+     * Set/unset debug mode
+     *
+     * @param string $filename the name of the file used for logging, or false
+     * to stop debugging.
+     *
+     * @return void
+     */
+    public static function setDebug($filename = '')
+    {
+        if ($filename != false && gettype($filename) != 'string') {
+            phpCAS :: error('type mismatched for parameter $dbg (should be false or the name of the log file)');
+        }
+        if ($filename === false) {
+            self::$_PHPCAS_DEBUG['filename'] = false;
+
+        } else {
+            if (empty ($filename)) {
+                if (preg_match('/^Win.*/', getenv('OS'))) {
+                    if (isset ($_ENV['TMP'])) {
+                        $debugDir = $_ENV['TMP'] . '/';
+                    } else {
+                        $debugDir = '';
+                    }
+                } else {
+                    $debugDir = DEFAULT_DEBUG_DIR;
+                }
+                $filename = $debugDir . 'phpCAS.log';
+            }
+
+            if (empty (self::$_PHPCAS_DEBUG['unique_id'])) {
+                self::$_PHPCAS_DEBUG['unique_id'] = substr(strtoupper(md5(uniqid(''))), 0, 4);
+            }
+
+            self::$_PHPCAS_DEBUG['filename'] = $filename;
+            self::$_PHPCAS_DEBUG['indent'] = 0;
+
+            phpCAS :: trace('START phpCAS-' . PHPCAS_VERSION . ' ******************');
+        }
+    }
+
+
+    /**
+     * Logs a string in debug mode.
+     *
+     * @param string $str the string to write
+     *
+     * @return void
+     * @private
+     */
+    public static function log($str)
+    {
+        $indent_str = ".";
+
+
+        if (!empty(self::$_PHPCAS_DEBUG['filename'])) {
+            // Check if file exists and modifiy file permissions to be only
+            // readable by the webserver
+            if (!file_exists(self::$_PHPCAS_DEBUG['filename'])) {
+                touch(self::$_PHPCAS_DEBUG['filename']);
+                // Chmod will fail on windows
+                @chmod(self::$_PHPCAS_DEBUG['filename'], 0600);
+            }
+            for ($i = 0; $i < self::$_PHPCAS_DEBUG['indent']; $i++) {
+
+                $indent_str .= '|    ';
+            }
+            // allow for multiline output with proper identing. Usefull for dumping cas answers etc.
+            $str2 = str_replace("\n", "\n" . self::$_PHPCAS_DEBUG['unique_id'] . ' ' . $indent_str, $str);
+            error_log(self::$_PHPCAS_DEBUG['unique_id'] . ' ' . $indent_str . $str2 . "\n", 3, self::$_PHPCAS_DEBUG['filename']);
+        }
+
+    }
+
+    /**
+     * This method is used by interface methods to print an error and where the
+     * function was originally called from.
+     *
+     * @param string $msg the message to print
+     *
+     * @return void
+     * @private
+     */
+    public static function error($msg)
+    {
+        $dbg = debug_backtrace();
+        $function = '?';
+        $file = '?';
+        $line = '?';
+        if (is_array($dbg)) {
+            for ($i = 1; $i < sizeof($dbg); $i++) {
+                if (is_array($dbg[$i]) && isset($dbg[$i]['class']) ) {
+                    if ($dbg[$i]['class'] == __CLASS__) {
+                        $function = $dbg[$i]['function'];
+                        $file = $dbg[$i]['file'];
+                        $line = $dbg[$i]['line'];
+                    }
+                }
+            }
+        }
+        echo "<br />\n<b>phpCAS error</b>: <font color=\"FF0000\"><b>" . __CLASS__ . "::" . $function . '(): ' . htmlentities($msg) . "</b></font> in <b>" . $file . "</b> on line <b>" . $line . "</b><br />\n";
+        phpCAS :: trace($msg);
+        phpCAS :: traceEnd();
+
+        throw new CAS_GracefullTerminationException(__CLASS__ . "::" . $function . '(): ' . $msg);
+    }
+
+    /**
+     * This method is used to log something in debug mode.
+     *
+     * @param string $str string to log
+     *
+     * @return void
+     */
+    public static function trace($str)
+    {
+        $dbg = debug_backtrace();
+        phpCAS :: log($str . ' [' . basename($dbg[0]['file']) . ':' . $dbg[0]['line'] . ']');
+    }
+
+    /**
+     * This method is used to indicate the start of the execution of a function in debug mode.
+     *
+     * @return void
+     */
+    public static function traceBegin()
+    {
+        $dbg = debug_backtrace();
+        $str = '=> ';
+        if (!empty ($dbg[1]['class'])) {
+            $str .= $dbg[1]['class'] . '::';
+        }
+        $str .= $dbg[1]['function'] . '(';
+        if (is_array($dbg[1]['args'])) {
+            foreach ($dbg[1]['args'] as $index => $arg) {
+                if ($index != 0) {
+                    $str .= ', ';
+                }
+                if (is_object($arg)) {
+                    $str .= get_class($arg);
+                } else {
+                    $str .= str_replace(array("\r\n", "\n", "\r"), "", var_export($arg, true));
+                }
+            }
+        }
+        if (isset($dbg[1]['file'])) {
+            $file = basename($dbg[1]['file']);
+        } else {
+            $file = 'unknown_file';
+        }
+        if (isset($dbg[1]['line'])) {
+            $line = $dbg[1]['line'];
+        } else {
+            $line = 'unknown_line';
+        }
+        $str .= ') [' . $file . ':' . $line . ']';
+        phpCAS :: log($str);
+        if (!isset(self::$_PHPCAS_DEBUG['indent'])) {
+            self::$_PHPCAS_DEBUG['indent'] = 0;
+        } else {
+            self::$_PHPCAS_DEBUG['indent']++;
+        }
+    }
+
+    /**
+     * This method is used to indicate the end of the execution of a function in
+     * debug mode.
+     *
+     * @param string $res the result of the function
+     *
+     * @return void
+     */
+    public static function traceEnd($res = '')
+    {
+        if (empty(self::$_PHPCAS_DEBUG['indent'])) {
+            self::$_PHPCAS_DEBUG['indent'] = 0;
+        } else {
+            self::$_PHPCAS_DEBUG['indent']--;
+        }
+        $dbg = debug_backtrace();
+        $str = '';
+        if (is_object($res)) {
+            $str .= '<= ' . get_class($res);
+        } else {
+            $str .= '<= ' . str_replace(array("\r\n", "\n", "\r"), "", var_export($res, true));
+        }
+
+        phpCAS :: log($str);
+    }
+
+    /**
+     * This method is used to indicate the end of the execution of the program
+     *
+     * @return void
+     */
+    public static function traceExit()
+    {
+        phpCAS :: log('exit()');
+        while (self::$_PHPCAS_DEBUG['indent'] > 0) {
+            phpCAS :: log('-');
+            self::$_PHPCAS_DEBUG['indent']--;
+        }
+    }
+
+    /** @} */
+    // ########################################################################
+    //  INTERNATIONALIZATION
+    // ########################################################################
+    /**
+    * @addtogroup publicLang
+    * @{
+    */
+
+    /**
+     * This method is used to set the language used by phpCAS.
+     *
+     * @param string $lang string representing the language.
+     *
+     * @return void
+     *
+     * @sa PHPCAS_LANG_FRENCH, PHPCAS_LANG_ENGLISH
+     * @note Can be called only once.
+     */
+    public static function setLang($lang)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($lang) != 'string') {
+            phpCAS :: error('type mismatched for parameter $lang (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setLang($lang);
+    }
+
+    /** @} */
+    // ########################################################################
+    //  VERSION
+    // ########################################################################
+    /**
+    * @addtogroup public
+    * @{
+    */
+
+    /**
+     * This method returns the phpCAS version.
+     *
+     * @return the phpCAS version.
+     */
+    public static function getVersion()
+    {
+        return PHPCAS_VERSION;
+    }
+
+    /** @} */
+    // ########################################################################
+    //  HTML OUTPUT
+    // ########################################################################
+    /**
+    * @addtogroup publicOutput
+    * @{
+    */
+
+    /**
+     * This method sets the HTML header used for all outputs.
+     *
+     * @param string $header the HTML header.
+     *
+     * @return void
+     */
+    public static function setHTMLHeader($header)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($header) != 'string') {
+            phpCAS :: error('type mismatched for parameter $header (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setHTMLHeader($header);
+    }
+
+    /**
+     * This method sets the HTML footer used for all outputs.
+     *
+     * @param string $footer the HTML footer.
+     *
+     * @return void
+     */
+    public static function setHTMLFooter($footer)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($footer) != 'string') {
+            phpCAS :: error('type mismatched for parameter $footer (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setHTMLFooter($footer);
+    }
+
+    /** @} */
+    // ########################################################################
+    //  PGT STORAGE
+    // ########################################################################
+    /**
+    * @addtogroup publicPGTStorage
+    * @{
+    */
+
+    /**
+     * This method can be used to set a custom PGT storage object.
+     *
+     * @param CAS_PGTStorage $storage a PGT storage object that inherits from the
+     * CAS_PGTStorage class
+     *
+     * @return void
+     */
+    public static function setPGTStorage($storage)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called before ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() (called at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ')');
+        }
+        if ( !($storage instanceof CAS_PGTStorage) ) {
+            phpCAS :: error('type mismatched for parameter $storage (should be a CAS_PGTStorage `object\')');
+        }
+        self::$_PHPCAS_CLIENT->setPGTStorage($storage);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method is used to tell phpCAS to store the response of the
+     * CAS server to PGT requests in a database.
+     *
+     * @param string $dsn_or_pdo     a dsn string to use for creating a PDO
+     * object or a PDO object
+     * @param string $username       the username to use when connecting to the
+     * database
+     * @param string $password       the password to use when connecting to the
+     * database
+     * @param string $table          the table to use for storing and retrieving
+     * PGT's
+     * @param string $driver_options any driver options to use when connecting
+     * to the database
+     *
+     * @return void
+     */
+    public static function setPGTStorageDb($dsn_or_pdo, $username='',
+        $password='', $table='', $driver_options=null
+    ) {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called before ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() (called at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ')');
+        }
+        if (gettype($username) != 'string') {
+            phpCAS :: error('type mismatched for parameter $username (should be `string\')');
+        }
+        if (gettype($password) != 'string') {
+            phpCAS :: error('type mismatched for parameter $password (should be `string\')');
+        }
+        if (gettype($table) != 'string') {
+            phpCAS :: error('type mismatched for parameter $table (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setPGTStorageDb($dsn_or_pdo, $username, $password, $table, $driver_options);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method is used to tell phpCAS to store the response of the
+     * CAS server to PGT requests onto the filesystem.
+     *
+     * @param string $path the path where the PGT's should be stored
+     *
+     * @return void
+     */
+    public static function setPGTStorageFile($path = '')
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called before ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() (called at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ')');
+        }
+        if (gettype($path) != 'string') {
+            phpCAS :: error('type mismatched for parameter $path (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setPGTStorageFile($path);
+        phpCAS :: traceEnd();
+    }
+    /** @} */
+    // ########################################################################
+    // ACCESS TO EXTERNAL SERVICES
+    // ########################################################################
+    /**
+    * @addtogroup publicServices
+    * @{
+    */
+
+    /**
+     * Answer a proxy-authenticated service handler.
+     *
+     * @param string $type The service type. One of
+     * PHPCAS_PROXIED_SERVICE_HTTP_GET; PHPCAS_PROXIED_SERVICE_HTTP_POST;
+     * PHPCAS_PROXIED_SERVICE_IMAP
+     *
+     * @return CAS_ProxiedService
+     * @throws InvalidArgumentException If the service type is unknown.
+     */
+    public static function getProxiedService ($type)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after the programmer is sure the user has been authenticated (by calling ' . __CLASS__ . '::checkAuthentication() or ' . __CLASS__ . '::forceAuthentication()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        if (gettype($type) != 'string') {
+            phpCAS :: error('type mismatched for parameter $type (should be `string\')');
+        }
+
+        $res = self::$_PHPCAS_CLIENT->getProxiedService($type);
+
+        phpCAS :: traceEnd();
+        return $res;
+    }
+
+    /**
+     * Initialize a proxied-service handler with the proxy-ticket it should use.
+     *
+     * @param CAS_ProxiedService $proxiedService Proxied Service Handler
+     *
+     * @return void
+     * @throws CAS_ProxyTicketException If there is a proxy-ticket failure.
+     *		The code of the Exception will be one of:
+     *			PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE
+     *			PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE
+     *			PHPCAS_SERVICE_PT_FAILURE
+     */
+    public static function initializeProxiedService (CAS_ProxiedService $proxiedService)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after the programmer is sure the user has been authenticated (by calling ' . __CLASS__ . '::checkAuthentication() or ' . __CLASS__ . '::forceAuthentication()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+
+        self::$_PHPCAS_CLIENT->initializeProxiedService($proxiedService);
+    }
+
+    /**
+     * This method is used to access an HTTP[S] service.
+     *
+     * @param string $url       the service to access.
+     * @param string &$err_code an error code Possible values are
+     * PHPCAS_SERVICE_OK (on success), PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE,
+     * PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE, PHPCAS_SERVICE_PT_FAILURE,
+     * PHPCAS_SERVICE_NOT_AVAILABLE.
+     * @param string &$output   the output of the service (also used to give an
+     * error message on failure).
+     *
+     * @return bool true on success, false otherwise (in this later case,
+     * $err_code gives the reason why it failed and $output contains an error
+     * message).
+     */
+    public static function serviceWeb($url, & $err_code, & $output)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after the programmer is sure the user has been authenticated (by calling ' . __CLASS__ . '::checkAuthentication() or ' . __CLASS__ . '::forceAuthentication()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be `string\')');
+        }
+
+        $res = self::$_PHPCAS_CLIENT->serviceWeb($url, $err_code, $output);
+
+        phpCAS :: traceEnd($res);
+        return $res;
+    }
+
+    /**
+     * This method is used to access an IMAP/POP3/NNTP service.
+     *
+     * @param string $url       a string giving the URL of the service,
+     * including the mailing box for IMAP URLs, as accepted by imap_open().
+     * @param string $service   a string giving for CAS retrieve Proxy ticket
+     * @param string $flags     options given to imap_open().
+     * @param string &$err_code an error code Possible values are
+     * PHPCAS_SERVICE_OK (on success), PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE,
+     * PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE, PHPCAS_SERVICE_PT_FAILURE,
+     * PHPCAS_SERVICE_NOT_AVAILABLE.
+     * @param string &$err_msg  an error message on failure
+     * @param string &$pt       the Proxy Ticket (PT) retrieved from the CAS
+     * server to access the URL on success, false on error).
+     *
+     * @return object IMAP stream on success, false otherwise (in this later
+     * case, $err_code gives the reason why it failed and $err_msg contains an
+     * error message).
+     */
+    public static function serviceMail($url, $service, $flags, & $err_code, & $err_msg, & $pt)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after the programmer is sure the user has been authenticated (by calling ' . __CLASS__ . '::checkAuthentication() or ' . __CLASS__ . '::forceAuthentication()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be `string\')');
+        }
+
+        if (gettype($flags) != 'integer') {
+            phpCAS :: error('type mismatched for parameter $flags (should be `integer\')');
+        }
+
+        $res = self::$_PHPCAS_CLIENT->serviceMail($url, $service, $flags, $err_code, $err_msg, $pt);
+
+        phpCAS :: traceEnd($res);
+        return $res;
+    }
+
+    /** @} */
+    // ########################################################################
+    //  AUTHENTICATION
+    // ########################################################################
+    /**
+    * @addtogroup publicAuth
+    * @{
+    */
+
+    /**
+     * Set the times authentication will be cached before really accessing the
+     * CAS server in gateway mode:
+     * - -1: check only once, and then never again (until you pree login)
+     * - 0: always check
+     * - n: check every "n" time
+     *
+     * @param int $n an integer.
+     *
+     * @return void
+     */
+    public static function setCacheTimesForAuthRecheck($n)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($n) != 'integer') {
+            phpCAS :: error('type mismatched for parameter $n (should be `integer\')');
+        }
+        self::$_PHPCAS_CLIENT->setCacheTimesForAuthRecheck($n);
+    }
+
+    /**
+     * Set a callback function to be run when a user authenticates.
+     *
+     * The callback function will be passed a $logoutTicket as its first
+     * parameter, followed by any $additionalArgs you pass. The $logoutTicket
+     * parameter is an opaque string that can be used to map the session-id to
+     * logout request in order to support single-signout in applications that
+     * manage their own sessions (rather than letting phpCAS start the session).
+     *
+     * phpCAS::forceAuthentication() will always exit and forward client unless
+     * they are already authenticated. To perform an action at the moment the user
+     * logs in (such as registering an account, performing logging, etc), register
+     * a callback function here.
+     *
+     * @param string $function       Callback function
+     * @param array  $additionalArgs optional array of arguments
+     *
+     * @return void
+     */
+    public static function setPostAuthenticateCallback ($function, array $additionalArgs = array())
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+
+        self::$_PHPCAS_CLIENT->setPostAuthenticateCallback($function, $additionalArgs);
+    }
+
+    /**
+     * Set a callback function to be run when a single-signout request is
+     * received. The callback function will be passed a $logoutTicket as its
+     * first parameter, followed by any $additionalArgs you pass. The
+     * $logoutTicket parameter is an opaque string that can be used to map a
+     * session-id to the logout request in order to support single-signout in
+     * applications that manage their own sessions (rather than letting phpCAS
+     * start and destroy the session).
+     *
+     * @param string $function       Callback function
+     * @param array  $additionalArgs optional array of arguments
+     *
+     * @return void
+     */
+    public static function setSingleSignoutCallback ($function, array $additionalArgs = array())
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+
+        self::$_PHPCAS_CLIENT->setSingleSignoutCallback($function, $additionalArgs);
+    }
+
+    /**
+     * This method is called to check if the user is already authenticated
+     * locally or has a global cas session. A already existing cas session is
+     * determined by a cas gateway call.(cas login call without any interactive
+     * prompt)
+     *
+     * @return true when the user is authenticated, false when a previous
+     * gateway login failed or the function will not return if the user is
+     * redirected to the cas server for a gateway login attempt
+     */
+    public static function checkAuthentication()
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+
+        $auth = self::$_PHPCAS_CLIENT->checkAuthentication();
+
+        // store where the authentication has been checked and the result
+        self::$_PHPCAS_CLIENT->markAuthenticationCall($auth);
+
+        phpCAS :: traceEnd($auth);
+        return $auth;
+    }
+
+    /**
+     * This method is called to force authentication if the user was not already
+     * authenticated. If the user is not authenticated, halt by redirecting to
+     * the CAS server.
+     *
+     * @return bool Authentication
+     */
+    public static function forceAuthentication()
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+
+        $auth = self::$_PHPCAS_CLIENT->forceAuthentication();
+
+        // store where the authentication has been checked and the result
+        self::$_PHPCAS_CLIENT->markAuthenticationCall($auth);
+
+        /*		if (!$auth) {
+         phpCAS :: trace('user is not authenticated, redirecting to the CAS server');
+        self::$_PHPCAS_CLIENT->forceAuthentication();
+        } else {
+        phpCAS :: trace('no need to authenticate (user `' . phpCAS :: getUser() . '\' is already authenticated)');
+        }*/
+
+        phpCAS :: traceEnd();
+        return $auth;
+    }
+
+    /**
+     * This method is called to renew the authentication.
+     *
+     * @return void
+     **/
+    public static function renewAuthentication()
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        $auth = self::$_PHPCAS_CLIENT->renewAuthentication();
+
+        // store where the authentication has been checked and the result
+        self::$_PHPCAS_CLIENT->markAuthenticationCall($auth);
+
+        //self::$_PHPCAS_CLIENT->renewAuthentication();
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method is called to check if the user is authenticated (previously or by
+     * tickets given in the URL).
+     *
+     * @return true when the user is authenticated.
+     */
+    public static function isAuthenticated()
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+
+        // call the isAuthenticated method of the $_PHPCAS_CLIENT object
+        $auth = self::$_PHPCAS_CLIENT->isAuthenticated();
+
+        // store where the authentication has been checked and the result
+        self::$_PHPCAS_CLIENT->markAuthenticationCall($auth);
+
+        phpCAS :: traceEnd($auth);
+        return $auth;
+    }
+
+    /**
+     * Checks whether authenticated based on $_SESSION. Useful to avoid
+     * server calls.
+     *
+     * @return bool true if authenticated, false otherwise.
+     * @since 0.4.22 by Brendan Arnold
+     */
+    public static function isSessionAuthenticated()
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        return (self::$_PHPCAS_CLIENT->isSessionAuthenticated());
+    }
+
+    /**
+     * This method returns the CAS user's login name.
+     *
+     * @return string the login name of the authenticated user
+     * @warning should not be called only after phpCAS::forceAuthentication()
+     * or phpCAS::checkAuthentication().
+     * */
+    public static function getUser()
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::forceAuthentication() or ' . __CLASS__ . '::isAuthenticated()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        return self::$_PHPCAS_CLIENT->getUser();
+    }
+
+    /**
+     * Answer attributes about the authenticated user.
+     *
+     * @warning should not be called only after phpCAS::forceAuthentication()
+     * or phpCAS::checkAuthentication().
+     *
+     * @return array
+     */
+    public static function getAttributes()
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::forceAuthentication() or ' . __CLASS__ . '::isAuthenticated()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        return self::$_PHPCAS_CLIENT->getAttributes();
+    }
+
+    /**
+     * Answer true if there are attributes for the authenticated user.
+     *
+     * @warning should not be called only after phpCAS::forceAuthentication()
+     * or phpCAS::checkAuthentication().
+     *
+     * @return bool
+     */
+    public static function hasAttributes()
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::forceAuthentication() or ' . __CLASS__ . '::isAuthenticated()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        return self::$_PHPCAS_CLIENT->hasAttributes();
+    }
+
+    /**
+     * Answer true if an attribute exists for the authenticated user.
+     *
+     * @param string $key attribute name
+     *
+     * @return bool
+     * @warning should not be called only after phpCAS::forceAuthentication()
+     * or phpCAS::checkAuthentication().
+     */
+    public static function hasAttribute($key)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::forceAuthentication() or ' . __CLASS__ . '::isAuthenticated()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        return self::$_PHPCAS_CLIENT->hasAttribute($key);
+    }
+
+    /**
+     * Answer an attribute for the authenticated user.
+     *
+     * @param string $key attribute name
+     *
+     * @return mixed string for a single value or an array if multiple values exist.
+     * @warning should not be called only after phpCAS::forceAuthentication()
+     * or phpCAS::checkAuthentication().
+     */
+    public static function getAttribute($key)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCalled()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::forceAuthentication() or ' . __CLASS__ . '::isAuthenticated()');
+        }
+        if (!self::$_PHPCAS_CLIENT->wasAuthenticationCallSuccessful()) {
+            phpCAS :: error('authentication was checked (by ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerMethod() . '() at ' . self::$_PHPCAS_CLIENT->getAuthenticationCallerFile() . ':' . self::$_PHPCAS_CLIENT->getAuthenticationCallerLine() . ') but the method returned false');
+        }
+        return self::$_PHPCAS_CLIENT->getAttribute($key);
+    }
+
+    /**
+     * Handle logout requests.
+     *
+     * @param bool  $check_client    additional safety check
+     * @param array $allowed_clients array of allowed clients
+     *
+     * @return void
+     */
+    public static function handleLogoutRequests($check_client = true, $allowed_clients = false)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        return (self::$_PHPCAS_CLIENT->handleLogoutRequests($check_client, $allowed_clients));
+    }
+
+    /**
+     * This method returns the URL to be used to login.
+     * or phpCAS::isAuthenticated().
+     *
+     * @return the login name of the authenticated user
+     */
+    public static function getServerLoginURL()
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        return self::$_PHPCAS_CLIENT->getServerLoginURL();
+    }
+
+    /**
+     * Set the login URL of the CAS server.
+     *
+     * @param string $url the login URL
+     *
+     * @return void
+     * @since 0.4.21 by Wyman Chan
+     */
+    public static function setServerLoginURL($url = '')
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after' . __CLASS__ . '::client()');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be `string`)');
+        }
+        self::$_PHPCAS_CLIENT->setServerLoginURL($url);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Set the serviceValidate URL of the CAS server.
+     * Used only in CAS 1.0 validations
+     *
+     * @param string $url the serviceValidate URL
+     *
+     * @return void
+     */
+    public static function setServerServiceValidateURL($url = '')
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after' . __CLASS__ . '::client()');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be `string`)');
+        }
+        self::$_PHPCAS_CLIENT->setServerServiceValidateURL($url);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Set the proxyValidate URL of the CAS server.
+     * Used for all CAS 2.0 validations
+     *
+     * @param string $url the proxyValidate URL
+     *
+     * @return void
+     */
+    public static function setServerProxyValidateURL($url = '')
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after' . __CLASS__ . '::client()');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be `string`)');
+        }
+        self::$_PHPCAS_CLIENT->setServerProxyValidateURL($url);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Set the samlValidate URL of the CAS server.
+     *
+     * @param string $url the samlValidate URL
+     *
+     * @return void
+     */
+    public static function setServerSamlValidateURL($url = '')
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after' . __CLASS__ . '::client()');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be`string\')');
+        }
+        self::$_PHPCAS_CLIENT->setServerSamlValidateURL($url);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method returns the URL to be used to login.
+     * or phpCAS::isAuthenticated().
+     *
+     * @return the login name of the authenticated user
+     */
+    public static function getServerLogoutURL()
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should not be called before ' . __CLASS__ . '::client() or ' . __CLASS__ . '::proxy()');
+        }
+        return self::$_PHPCAS_CLIENT->getServerLogoutURL();
+    }
+
+    /**
+     * Set the logout URL of the CAS server.
+     *
+     * @param string $url the logout URL
+     *
+     * @return void
+     * @since 0.4.21 by Wyman Chan
+     */
+    public static function setServerLogoutURL($url = '')
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error(
+                'this method should only be called after' . __CLASS__ . '::client()'
+            );
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error(
+                'type mismatched for parameter $url (should be `string`)'
+            );
+        }
+        self::$_PHPCAS_CLIENT->setServerLogoutURL($url);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method is used to logout from CAS.
+     *
+     * @param string $params an array that contains the optional url and
+     * service parameters that will be passed to the CAS server
+     *
+     * @return void
+     */
+    public static function logout($params = "")
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        $parsedParams = array ();
+        if ($params != "") {
+            if (is_string($params)) {
+                phpCAS :: error('method `phpCAS::logout($url)\' is now deprecated, use `phpCAS::logoutWithUrl($url)\' instead');
+            }
+            if (!is_array($params)) {
+                phpCAS :: error('type mismatched for parameter $params (should be `array\')');
+            }
+            foreach ($params as $key => $value) {
+                if ($key != "service" && $key != "url") {
+                    phpCAS :: error('only `url\' and `service\' parameters are allowed for method `phpCAS::logout($params)\'');
+                }
+                $parsedParams[$key] = $value;
+            }
+        }
+        self::$_PHPCAS_CLIENT->logout($parsedParams);
+        // never reached
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method is used to logout from CAS. Halts by redirecting to the CAS
+     * server.
+     *
+     * @param service $service a URL that will be transmitted to the CAS server
+     *
+     * @return void
+     */
+    public static function logoutWithRedirectService($service)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        if (!is_string($service)) {
+            phpCAS :: error('type mismatched for parameter $service (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->logout(array ( "service" => $service ));
+        // never reached
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method is used to logout from CAS. Halts by redirecting to the CAS
+     * server.
+     *
+     * @param string $url a URL that will be transmitted to the CAS server
+     *
+     * @return void
+     * @deprecated The url parameter has been removed from the CAS server as of
+     * version 3.3.5.1
+     */
+    public static function logoutWithUrl($url)
+    {
+        trigger_error('Function deprecated for cas servers >= 3.3.5.1', E_USER_DEPRECATED);
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        if (!is_string($url)) {
+            phpCAS :: error('type mismatched for parameter $url (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->logout(array ( "url" => $url ));
+        // never reached
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * This method is used to logout from CAS. Halts by redirecting to the CAS
+     * server.
+     *
+     * @param string $service a URL that will be transmitted to the CAS server
+     * @param string $url     a URL that will be transmitted to the CAS server
+     *
+     * @return void
+     *
+     * @deprecated The url parameter has been removed from the CAS server as of
+     * version 3.3.5.1
+     */
+    public static function logoutWithRedirectServiceAndUrl($service, $url)
+    {
+        trigger_error('Function deprecated for cas servers >= 3.3.5.1', E_USER_DEPRECATED);
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        if (!is_string($service)) {
+            phpCAS :: error('type mismatched for parameter $service (should be `string\')');
+        }
+        if (!is_string($url)) {
+            phpCAS :: error('type mismatched for parameter $url (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->logout(
+            array (
+                "service" => $service,
+                "url" => $url
+            )
+        );
+        // never reached
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Set the fixed URL that will be used by the CAS server to transmit the
+     * PGT. When this method is not called, a phpCAS script uses its own URL
+     * for the callback.
+     *
+     * @param string $url the URL
+     *
+     * @return void
+     */
+    public static function setFixedCallbackURL($url = '')
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (!self::$_PHPCAS_CLIENT->isProxy()) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setCallbackURL($url);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Set the fixed URL that will be set as the CAS service parameter. When this
+     * method is not called, a phpCAS script uses its own URL.
+     *
+     * @param string $url the URL
+     *
+     * @return void
+     */
+    public static function setFixedServiceURL($url)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($url) != 'string') {
+            phpCAS :: error('type mismatched for parameter $url (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setURL($url);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Get the URL that is set as the CAS service parameter.
+     *
+     * @return string Service Url
+     */
+    public static function getServiceURL()
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        return (self::$_PHPCAS_CLIENT->getURL());
+    }
+
+    /**
+     * Retrieve a Proxy Ticket from the CAS server.
+     *
+     * @param string $target_service Url string of service to proxy
+     * @param string &$err_code      error code
+     * @param string &$err_msg       error message
+     *
+     * @return string Proxy Ticket
+     */
+    public static function retrievePT($target_service, & $err_code, & $err_msg)
+    {
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($target_service) != 'string') {
+            phpCAS :: error('type mismatched for parameter $target_service(should be `string\')');
+        }
+        return (self::$_PHPCAS_CLIENT->retrievePT($target_service, $err_code, $err_msg));
+    }
+
+    /**
+     * Set the certificate of the CAS server CA.
+     *
+     * @param string $cert CA certificate file name
+     *
+     * @return void
+     */
+    public static function setCasServerCACert($cert)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        if (gettype($cert) != 'string') {
+            phpCAS :: error('type mismatched for parameter $cert (should be `string\')');
+        }
+        self::$_PHPCAS_CLIENT->setCasServerCACert($cert);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Set no SSL validation for the CAS server.
+     *
+     * @return void
+     */
+    public static function setNoCasServerValidation()
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        phpCAS :: trace('You have configured no validation of the legitimacy of the cas server. This is not recommended for production use.');
+        self::$_PHPCAS_CLIENT->setNoCasServerValidation();
+        phpCAS :: traceEnd();
+    }
+
+
+    /**
+     * Disable the removal of a CAS-Ticket from the URL when authenticating
+     * DISABLING POSES A SECURITY RISK:
+     * We normally remove the ticket by an additional redirect as a security
+     * precaution to prevent a ticket in the HTTP_REFERRER or be carried over in
+     * the URL parameter
+     *
+     * @return void
+     */
+    public static function setNoClearTicketsFromUrl()
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        self::$_PHPCAS_CLIENT->setNoClearTicketsFromUrl();
+        phpCAS :: traceEnd();
+    }
+
+    /** @} */
+
+    /**
+     * Change CURL options.
+     * CURL is used to connect through HTTPS to CAS server
+     *
+     * @param string $key   the option key
+     * @param string $value the value to set
+     *
+     * @return void
+     */
+    public static function setExtraCurlOption($key, $value)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        self::$_PHPCAS_CLIENT->setExtraCurlOption($key, $value);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * If you want your service to be proxied you have to enable it (default
+     * disabled) and define an accepable list of proxies that are allowed to
+     * proxy your service.
+     *
+     * Add each allowed proxy definition object. For the normal CAS_ProxyChain
+     * class, the constructor takes an array of proxies to match. The list is in
+     * reverse just as seen from the service. Proxies have to be defined in reverse
+     * from the service to the user. If a user hits service A and gets proxied via
+     * B to service C the list of acceptable on C would be array(B,A). The definition
+     * of an individual proxy can be either a string or a regexp (preg_match is used)
+     * that will be matched against the proxy list supplied by the cas server
+     * when validating the proxy tickets. The strings are compared starting from
+     * the beginning and must fully match with the proxies in the list.
+     * Example:
+     * 		phpCAS::allowProxyChain(new CAS_ProxyChain(array(
+     *				'https://app.example.com/'
+     *			)));
+     * 		phpCAS::allowProxyChain(new CAS_ProxyChain(array(
+     *				'/^https:\/\/app[0-9]\.example\.com\/rest\//',
+     *				'http://client.example.com/'
+     *			)));
+     *
+     * For quick testing or in certain production screnarios you might want to
+     * allow allow any other valid service to proxy your service. To do so, add
+     * the "Any" chain:
+     *		phpcas::allowProxyChain(new CAS_ProxyChain_Any);
+     * THIS SETTING IS HOWEVER NOT RECOMMENDED FOR PRODUCTION AND HAS SECURITY
+     * IMPLICATIONS: YOU ARE ALLOWING ANY SERVICE TO ACT ON BEHALF OF A USER
+     * ON THIS SERVICE.
+     *
+     * @param CAS_ProxyChain_Interface $proxy_chain A proxy-chain that will be
+     * matched against the proxies requesting access
+     *
+     * @return void
+     */
+    public static function allowProxyChain(CAS_ProxyChain_Interface $proxy_chain)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        if (self::$_PHPCAS_CLIENT->getServerVersion() !== CAS_VERSION_2_0) {
+            phpCAS :: error('this method can only be used with the cas 2.0 protool');
+        }
+        self::$_PHPCAS_CLIENT->getAllowedProxyChains()->allowProxyChain($proxy_chain);
+        phpCAS :: traceEnd();
+    }
+
+    /**
+     * Answer an array of proxies that are sitting in front of this application.
+     * This method will only return a non-empty array if we have received and
+     * validated a Proxy Ticket.
+     *
+     * @return array
+     * @access public
+     * @since 6/25/09
+     */
+    public static function getProxies ()
+    {
+        if ( !is_object(self::$_PHPCAS_CLIENT) ) {
+            phpCAS::error('this method should only be called after '.__CLASS__.'::client()');
+        }
+
+        return(self::$_PHPCAS_CLIENT->getProxies());
+    }
+
+    // ########################################################################
+    // PGTIOU/PGTID and logoutRequest rebroadcasting
+    // ########################################################################
+
+    /**
+     * Add a pgtIou/pgtId and logoutRequest rebroadcast node.
+     *
+     * @param string $rebroadcastNodeUrl The rebroadcast node URL. Can be
+     * hostname or IP.
+     *
+     * @return void
+     */
+    public static function addRebroadcastNode($rebroadcastNodeUrl)
+    {
+        phpCAS::traceBegin();
+        phpCAS::log('rebroadcastNodeUrl:'.$rebroadcastNodeUrl);
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        if ( !(bool)preg_match("/^(http|https):\/\/([A-Z0-9][A-Z0-9_-]*(?:\.[A-Z0-9][A-Z0-9_-]*)+):?(\d+)?\/?/i", $rebroadcastNodeUrl)) {
+            phpCAS::error('type mismatched for parameter $rebroadcastNodeUrl (should be `url\')');
+        }
+        self::$_PHPCAS_CLIENT->addRebroadcastNode($rebroadcastNodeUrl);
+        phpCAS::traceEnd();
+    }
+
+    /**
+     * This method is used to add header parameters when rebroadcasting
+     * pgtIou/pgtId or logoutRequest.
+     *
+     * @param String $header Header to send when rebroadcasting.
+     *
+     * @return void
+     */
+    public static function addRebroadcastHeader($header)
+    {
+        phpCAS :: traceBegin();
+        if (!is_object(self::$_PHPCAS_CLIENT)) {
+            phpCAS :: error('this method should only be called after ' . __CLASS__ . '::client() or' . __CLASS__ . '::proxy()');
+        }
+        self::$_PHPCAS_CLIENT->addRebroadcastHeader($header);
+        phpCAS :: traceEnd();
+    }
+}
+
+// ########################################################################
+// DOCUMENTATION
+// ########################################################################
+
+// ########################################################################
+//  MAIN PAGE
+
+/**
+ * @mainpage
+ *
+ * The following pages only show the source documentation.
+ *
+ */
+
+// ########################################################################
+//  MODULES DEFINITION
+
+/** @defgroup public User interface */
+
+/** @defgroup publicInit Initialization
+ *  @ingroup public */
+
+/** @defgroup publicAuth Authentication
+ *  @ingroup public */
+
+/** @defgroup publicServices Access to external services
+ *  @ingroup public */
+
+/** @defgroup publicConfig Configuration
+ *  @ingroup public */
+
+/** @defgroup publicLang Internationalization
+ *  @ingroup publicConfig */
+
+/** @defgroup publicOutput HTML output
+ *  @ingroup publicConfig */
+
+/** @defgroup publicPGTStorage PGT storage
+ *  @ingroup publicConfig */
+
+/** @defgroup publicDebug Debugging
+ *  @ingroup public */
+
+/** @defgroup internal Implementation */
+
+/** @defgroup internalAuthentication Authentication
+ *  @ingroup internal */
+
+/** @defgroup internalBasic CAS Basic client features (CAS 1.0, Service Tickets)
+ *  @ingroup internal */
+
+/** @defgroup internalProxy CAS Proxy features (CAS 2.0, Proxy Granting Tickets)
+ *  @ingroup internal */
+
+/** @defgroup internalSAML CAS SAML features (SAML 1.1)
+ *  @ingroup internal */
+
+/** @defgroup internalPGTStorage PGT storage
+ *  @ingroup internalProxy */
+
+/** @defgroup internalPGTStorageDb PGT storage in a database
+ *  @ingroup internalPGTStorage */
+
+/** @defgroup internalPGTStorageFile PGT storage on the filesystem
+ *  @ingroup internalPGTStorage */
+
+/** @defgroup internalCallback Callback from the CAS server
+ *  @ingroup internalProxy */
+
+/** @defgroup internalProxyServices Proxy other services
+ *  @ingroup internalProxy */
+
+/** @defgroup internalService CAS client features (CAS 2.0, Proxied service)
+ *  @ingroup internal */
+
+/** @defgroup internalConfig Configuration
+ *  @ingroup internal */
+
+/** @defgroup internalBehave Internal behaviour of phpCAS
+ *  @ingroup internalConfig */
+
+/** @defgroup internalOutput HTML output
+ *  @ingroup internalConfig */
+
+/** @defgroup internalLang Internationalization
+ *  @ingroup internalConfig
+ *
+ * To add a new language:
+ * - 1. define a new constant PHPCAS_LANG_XXXXXX in CAS/CAS.php
+ * - 2. copy any file from CAS/languages to CAS/languages/XXXXXX.php
+ * - 3. Make the translations
+ */
+
+/** @defgroup internalDebug Debugging
+ *  @ingroup internal */
+
+/** @defgroup internalMisc Miscellaneous
+ *  @ingroup internal */
+
+// ########################################################################
+//  EXAMPLES
+
+/**
+ * @example example_simple.php
+ */
+/**
+ * @example example_service.php
+ */
+/**
+ * @example example_service_that_proxies.php
+ */
+/**
+ * @example example_service_POST.php
+ */
+/**
+ * @example example_proxy_serviceWeb.php
+ */
+/**
+ * @example example_proxy_serviceWeb_chaining.php
+ */
+/**
+ * @example example_proxy_POST.php
+ */
+/**
+ * @example example_proxy_GET.php
+ */
+/**
+ * @example example_lang.php
+ */
+/**
+ * @example example_html.php
+ */
+/**
+ * @example example_pgt_storage_file.php
+ */
+/**
+ * @example example_pgt_storage_db.php
+ */
+/**
+ * @example example_gateway.php
+ */
+/**
+ * @example example_logout.php
+ */
+/**
+ * @example example_rebroadcast.php
+ */
+/**
+ * @example example_custom_urls.php
+ */
+/**
+ * @example example_advanced_saml11.php
+ */
+?>
diff -rNU5 mantisbt-1.2.5/config_defaults_inc.php mantis_ard/config_defaults_inc.php
--- mantisbt-1.2.5/config_defaults_inc.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/config_defaults_inc.php	2013-03-27 11:11:16.000000000 +0100
@@ -52,11 +52,11 @@
 	$g_db_username			= 'root';
 	/**
 	 * Password for the specified user name. The default password is empty.
 	 * @global string $g_db_password
 	 */
-	$g_db_password			= '';
+	$g_db_password			= 'root';
 	 /**
 	  * Name of database that contains MantisBT tables.
 	  * The default database name is "bugtracker".
 	  * @global string $g_database_name
 	  */
@@ -1213,10 +1213,24 @@
 	 * @global int $g_default_email_on_new
 	 */
 	$g_default_email_on_new			= ON;
 
 	/**
+	*
+	* @global int $g_default_email_on_lo
+	*/
+	$g_default_email_on_lo	= ON;
+
+
+	/**
+	*
+	* @global int $g_default_email_on_2
+	*/
+	$g_default_email_on_2	= ON;
+
+
+	/**
 	 *
 	 * @global int $g_default_email_on_assigned
 	 */
 	$g_default_email_on_assigned	= ON;
 
@@ -1643,10 +1657,114 @@
 	 * Horizontal Rule Width
 	 * @global int $g_hr_width
 	 */
 	$g_hr_width				= 50;
 
+
+	/***********************
+	 * Mantis CAS Settings *
+	 ***********************/
+
+	# --- using phpCAS -------------
+	/**
+	 * @global string $g_cas_server
+	 */
+	$g_cas_server = 'example.com.au';
+
+	/**
+	 * @global int $g_cas_port
+	 */
+	$g_cas_port = 443;
+
+	/**
+	 * The CAS path on the server. E.g. '/cas'
+	 * @global string $g_cas_uri
+	 */
+	$g_cas_uri = '';
+	
+	/**
+	 * The CAS validation URL to the server
+	 * @global string $g_cas_validation
+	 */
+	$g_cas_validate = '';
+
+	/**
+	 * Protocol version 2.0 (to use CAS) or S1 (to use SAML)
+	 * @global string $g_cas_version
+	 */
+	$g_cas_version = '2.0';
+	
+	/**
+	 * Full path incl filename to the cas debug log file
+	 * @global string $g_cas_debug
+	 */
+	$g_cas_debug = '';
+	
+	/**
+	 * When using SAML the CAS can provide user attributes
+	 * @global boolean $g_cas_saml_attributes
+	 */
+	$g_cas_saml_attributes = OFF;
+	
+	/**
+	 * Array with two entries: name => ..., mail => ...
+	 * Look in your WEB-INF/deployerConfigContext.xml at the CAS server
+	 * @global array $g_cas_saml_map
+	 */
+	$g_cas_saml_map = array( 'name' => '', 'mail' => '' );
+	
+
+	# --- CAS + LDAP -------------
+	/**
+	 * Translate CAS username through LDAP.
+	 * @global $g_cas_use_ldap int
+	 */
+	$g_cas_use_ldap     = OFF;
+
+	/**
+	 * The LDAP field matching the Mantis username.
+	 * @global $g_ldap_mantis_udi string
+	 */
+	$g_ldap_mantis_uid  = 'uid';
+
+	/**
+	 * Should Mantis update user details from LDAP while authenticating with CAS?
+	 * @global $g_cas_ldap_update int
+	 */
+	$g_cas_ldap_update  = OFF;
+
+	/**
+	 * E.g. 'cn,userpassword'.
+	 * @global $g_cas_ldap_update_fields string
+	 */
+	$g_cas_ldap_update_fields = '';
+
+	/**
+	 * E.g. 'realname,password'.
+	 * @global $g_cas_ldap_update_map string
+	 */
+	$g_cas_ldap_update_map    = '';
+
+	/**
+	 * This is the field in LDAP to use to set the user's language preference.
+	 * @global $g_ldap_language_field string
+	 */
+	$g_ldap_language_field = '';
+
+	/**
+	 * E.g. 'en,zh_hans,ko'.
+	 * @global $g_ldap_language_keys string
+	 */
+	$g_ldap_language_keys = '';
+
+	/**
+	 * E.g. 'english,chinese_simplified,korean'.
+	 * @global $g_ldap_language_values string
+	 */
+	$g_cas_ldap_update_values    = '';
+
+
 	/**************************
 	 * MantisBT LDAP Settings *
 	 **************************/
 
 	/**
@@ -2503,11 +2621,11 @@
 	 * login method
 	 * CRYPT or PLAIN or MD5 or LDAP or BASIC_AUTH
 	 * You can simply change this at will. MantisBT will try to figure out how the passwords were encrypted.
 	 * @global int $g_login_method
 	 */
-	$g_login_method				= MD5;
+	$g_login_method				= CAS_AUTH;
 
 	/**
 	 * limit reporters
 	 * Set to ON if you wish to limit reporters to only viewing bugs that they report.
 	 * @global int $g_limit_reporters
diff -rNU5 mantisbt-1.2.5/config_inc.php mantis_ard/config_inc.php
--- mantisbt-1.2.5/config_inc.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/config_inc.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,120 @@
+<?php
+$g_db_type = 'mysql';
+$g_database_name = 'mantis_ard';
+$g_db_username = 'root';
+$g_db_password = 'root';
+
+$g_allow_signup = OFF;
+$g_reauthentication = OFF;
+$g_enable_email_notification = ON;
+
+/***********************
+ * Mantis CAS Settings *
+ ***********************/
+$g_login_method	 = CAS_AUTH;
+$g_cas_uri 	= '/cas';
+//$g_cas_debug = '/var/www/mantis/log/cas';
+$g_instance_method = 'getToolProjectId';
+$g_cas_server = 'localhost';
+$g_hostname = 'localhost';
+$g_cas_port = 8443;
+
+$g_instance_wsdl		= 'http://'.$g_hostname.':9000/cxf/mantisARDInstance?wsdl';
+$g_cas_validate 		= 'https://'.$g_hostname.':'.$g_cas_port.'/cas/serviceValidate';
+
+$g_smtp_password = 'PASSSMTP';
+$g_smtp_connection_mode = 'MODESMTP';
+$g_smtp_port = 'PORTSMTP';
+
+//about language
+$g_language_choices_arr = array (
+	'auto',
+	'english',
+	'french',
+	
+);
+$g_default_language = 'french';
+
+//Need because of php version used by Novaforge
+date_default_timezone_set('Europe/Paris');
+
+#menu link enable
+$g_enable_project_documentation = OFF;
+$g_wiki_enable = OFF;
+$g_roadmap_enable = OFF;
+$g_changelog_enable = OFF;
+
+#add textarea custom field
+$g_custom_field_type_enum_string = '0:string,1:numeric,2:float,3:enum,4:email,5:checkbox,6:list,7:multiselection list,8:date,9:radio,10:textarea';
+#add db
+$g_db_table['mantis_risk_criteria_table'] = '%db_table_prefix%_risk_criteria%db_table_suffix%';
+$g_db_table['mantis_risk_evaluation_history_table'] = '%db_table_prefix%_risk_evaluation_history%db_table_suffix%';
+#column bug
+$g_view_issues_page_columns_management = array (
+	'selection',
+	'edit',
+	'category_id',
+	'date_submitted',
+	'id',
+	'summary',
+	'custom_estimate_end',
+	'custom_reestimate_end',
+	'custom_real_end',
+	'custom_responsable',
+	'status',
+	'priority'
+);
+$g_view_issues_page_columns_action = array (
+	'selection',
+	'edit',
+	'category_id',
+	'date_submitted',
+	'id',
+	'summary',
+	'custom_estimate_end',
+	'custom_reestimate_end',
+	'custom_real_end',
+	'custom_responsable',
+	'status',
+	'priority'
+);
+$g_view_issues_page_columns_risk = array (
+	'selection',
+	'edit',
+	'category_id',
+	'date_submitted',
+	'id',
+	'summary',
+	'custom_estimate_end',
+	'custom_reestimate_end',
+	'custom_real_end',
+	'custom_responsable',
+	'custom_reference',
+	'status',
+	'priority'
+);
+$g_view_issues_page_columns_decision = array (
+	'selection',
+	'edit',
+	'category_id',
+	'date_submitted',
+	'id',
+	'summary',
+	'custom_estimate_end',
+	'custom_reestimate_end',
+	'custom_real_end',
+	'custom_responsable',
+	'status',
+	'priority'
+);
+$g_view_issues_page_columns_evolution = array (
+	'selection',
+	'edit',
+	'category_id',
+	'date_submitted',
+	'id',
+	'summary',
+	'status',
+	'priority'
+);
+?>
diff -rNU5 mantisbt-1.2.5/config_inc.php.sample mantis_ard/config_inc.php.sample
--- mantisbt-1.2.5/config_inc.php.sample	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/config_inc.php.sample	1970-01-01 01:00:00.000000000 +0100
@@ -1,80 +0,0 @@
-<?php
-# MantisBT - a php based bugtracking system
-
-# MantisBT is free software: you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation, either version 2 of the License, or
-# (at your option) any later version.
-#
-# MantisBT is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.
-
-/**
- * @package MantisBT
- * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org
- * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net
- * @link http://www.mantisbt.org
- */
-
-# This sample file contains the essential files that you MUST
-# configure to your specific settings.  You may override settings
-# from config_defaults_inc.php by assigning new values in this file
-
-# Rename this file to config_inc.php after configuration.
-
-# In general the value OFF means the feature is disabled and ON means the
-# feature is enabled.  Any other cases will have an explanation.
-
-# Look in http://www.mantisbt.org/docs/ or config_defaults_inc.php for more
-# detailed comments.
-
-# --- Database Configuration ---
-$g_hostname      = 'localhost';
-$g_db_username   = 'mantisdbuser';
-$g_db_password   = '';
-$g_database_name = 'bugtracker';
-$g_db_type       = 'mysql';
-
-# --- Anonymous Access / Signup ---
-$g_allow_signup				= ON;
-$g_allow_anonymous_login	= OFF;
-$g_anonymous_account		= '';
-
-# --- Email Configuration ---
-$g_phpMailer_method		= PHPMAILER_METHOD_MAIL; # or PHPMAILER_METHOD_SMTP, PHPMAILER_METHOD_SENDMAIL
-$g_smtp_host			= 'localhost';			# used with PHPMAILER_METHOD_SMTP
-$g_smtp_username		= '';					# used with PHPMAILER_METHOD_SMTP
-$g_smtp_password		= '';					# used with PHPMAILER_METHOD_SMTP
-$g_administrator_email  = 'administrator@example.com';
-$g_webmaster_email      = 'webmaster@example.com';
-$g_from_name			= 'Mantis Bug Tracker';
-$g_from_email           = 'noreply@example.com';	# the "From: " field in emails
-$g_return_path_email    = 'admin@example.com';	# the return address for bounced mail
-$g_email_receive_own	= OFF;
-$g_email_send_using_cronjob = OFF;
-
-# --- Attachments / File Uploads ---
-$g_allow_file_upload	= ON;
-$g_file_upload_method	= DATABASE; # or DISK
-$g_absolute_path_default_upload_folder = ''; # used with DISK, must contain trailing \ or /.
-$g_max_file_size		= 5000000;	# in bytes
-$g_preview_attachments_inline_max_size = 256 * 1024;
-$g_allowed_files		= '';		# extensions comma separated, e.g. 'php,html,java,exe,pl'
-$g_disallowed_files		= '';		# extensions comma separated
-
-# --- Branding ---
-$g_window_title			= 'MantisBT';
-$g_logo_image			= 'images/mantis_logo.gif';
-$g_favicon_image		= 'images/favicon.ico';
-
-# --- Real names ---
-$g_show_realname = OFF;
-$g_show_user_realname_threshold = NOBODY;	# Set to access level (e.g. VIEWER, REPORTER, DEVELOPER, MANAGER, etc)
-
-# --- Others ---
-$g_default_home_page = 'my_view_page.php';	# Set to name of page to go to after login
diff -rNU5 mantisbt-1.2.5/conf-instance/config_status_2.php mantis_ard/conf-instance/config_status_2.php
--- mantisbt-1.2.5/conf-instance/config_status_2.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/conf-instance/config_status_2.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,152 @@
+<?php
+$g_allow_no_category = OFF;
+/**
+* Custom Configuration Variables for project : projet4 (ARD)_action
+*/
+
+/**
+* Project ID
+*/
+$g_project_id = 2;
+/**
+* Particular fields
+*/
+#fields
+$g_bug_report_page_fields = array(
+	 'category_id', 
+	 'view_state', 
+	 'handler', 
+	 'priority', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_view_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_print_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_update_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_change_status_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+#priority
+$g_allow_no_priority = ON;
+#severity
+#reproducibility
+#summary
+$s_summary_french = 'Titre';
+$s_summary_english = 'Title';
+#steps_to_reproduce
+#additional_information
+$s_additional_information_french = 'Note';
+$s_additional_information_english = 'Note';
+#control
+
+/**
+* Status management
+*/
+#status
+$g_fixed_status = ON;
+$g_status_enum_string = '10:new,20:progress,30:closed';
+$g_status_fixed = array('new', 'progress', 'closed', );
+$g_language_status = array('french', 'english', );
+$g_status_colors = array(
+	'new' => '#fcbdbd',
+	'progress' => '#d2f5b0',
+	'closed' => '#c9ccc4',
+	);
+#name
+$s_status_enum_string_french = '10:nouveau,20:en cours,30:fermé';
+$s_status_enum_string_english = '10:new,20:in progress,30:closed';
+#title
+$s_new_bug_title_french = 'Nouvelle action';
+$s_new_bug_title_english = 'New action';
+$s_progress_bug_title_french = 'Action en cours';
+$s_progress_bug_title_english = 'Action in progress';
+$s_closed_bug_title_french = 'Action fermé';
+$s_closed_bug_title_english = 'Action closed';
+#button
+$s_new_bug_button_french = 'Nouvelle action';
+$s_new_bug_button_english = 'New action';
+$s_progress_bug_button_french = 'Démarrer l\'action';
+$s_progress_bug_button_english = 'Start action';
+$s_closed_bug_button_french = 'Fermer l\'action';
+$s_closed_bug_button_english = 'Close action';
+#notification_email
+#email
+$s_email_notification_title_for_status_bug_new_french = 'L\'action suivante est maintenant à  l\'état « nouveau » (encore)';
+$s_email_notification_title_for_status_bug_new_english = 'The following action is now in status «ï¿½ new »';
+$s_email_notification_title_for_status_bug_progress_french = 'L\'action suivante est maintenant  à  l\'état « en cours »';
+$s_email_notification_title_for_status_bug_progress_english = 'The following action is now in status «ï¿½ in progress »';
+$s_email_notification_title_for_status_bug_closed_french = 'L\'action suivante a été fermé.';
+$s_email_notification_title_for_status_bug_closed_english = 'The following action has been closed';
+#workflow
+$g_status_enum_workflow[10] ='20:progress';
+$g_status_enum_workflow[20] ='30:closed';
+$g_status_enum_workflow[30] ='20:progress';
+
diff -rNU5 mantisbt-1.2.5/conf-instance/config_status_3.php mantis_ard/conf-instance/config_status_3.php
--- mantisbt-1.2.5/conf-instance/config_status_3.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/conf-instance/config_status_3.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,194 @@
+<?php
+/**
+* Custom Configuration Variables for project : projet4 (ARD)_risk
+*/
+
+/**
+* Project ID
+*/
+$g_project_id = 3;
+/**
+* Particular fields
+*/
+#fields
+$g_bug_report_page_fields = array(
+	 'category_id', 
+	 'view_state', 
+	 'handler', 
+	 'priority', 
+	 'severity', 
+	 'reproducibility', 
+	 'summary', 
+	 'description', 
+	 'steps_to_reproduce', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_view_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'severity', 
+	 'reproducibility', 
+	 'status', 
+	 'resolution', 
+	 'gravity', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'steps_to_reproduce', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_print_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'severity', 
+	 'reproducibility', 
+	 'status', 
+	 'resolution', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'steps_to_reproduce', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_update_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'severity', 
+	 'reproducibility', 
+	 'status', 
+	 'resolution', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'steps_to_reproduce', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_change_status_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'severity', 
+	 'reproducibility', 
+	 'status', 
+	 'resolution', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'steps_to_reproduce', 
+	 'due_date', 
+	 'attachments', 
+);
+#priority
+$g_priority_enum_string = '10:urgency_none,20:urgency_month,30:urgency_fifteen,40:urgency_week,50:urgency_immediate';
+$g_default_bug_priority = 10;
+$g_allow_no_priority = OFF;
+$s_priority_enum_string_french = '10:non urgent,20:dans le mois,30:dans la quinzaine,40:dans la semaine,50:immédiate';
+$s_priority_enum_string_english = '10:not urgent,20:in the month,30:in the fifteen,40:in the weed,50:immediate';
+$s_priority_french = 'Urgence';
+$s_priority_english = 'Urgency';
+#severity
+$g_severity_enum_string = '10:minor,20:middle,30:important,40:major';
+$g_default_bug_severity = 10;
+$g_allow_no_severity = OFF;
+$s_severity_enum_string_french = '10:mineur [1],20:moyen [2],30:important [3],40:majeur [4]';
+$s_severity_enum_string_english = '10:minor [1],20:middle [2],30:important [3],40:major [4]';
+$s_severity_french = 'Impact';
+$s_severity_english = 'Impact';
+#reproducibility
+$g_reproducibility_enum_string = '10:low,20:middle,30:high,40:vhigh';
+$g_default_bug_reproducibility = 10;
+$g_allow_no_reproducibility = OFF;
+$s_reproducibility_enum_string_french = '10:faible [1],20:moyen [2],30:fort [3],40:très fort [4]';
+$s_reproducibility_enum_string_english = '10:low [1],20:middle [2],30:high [3],40:very high [4]';
+$s_reproducibility_french = 'Probabilité';
+$s_reproducibility_english = 'Probability';
+#summary
+$s_summary_french = 'Titre';
+$s_summary_english = 'Title';
+#steps_to_reproduce
+$g_default_bug_steps_to_reproduce = '';
+$s_steps_to_reproduce_french = 'Condition de déclenchement';
+$s_steps_to_reproduce_english = 'Trigger condition';
+#additional_information
+$s_additional_information_french = 'Note';
+$s_additional_information_english = 'Note';
+#control
+
+/**
+* Status management
+*/
+#status
+$g_fixed_status = ON;
+$g_status_enum_string = '10:new,20:progress,30:closed';
+$g_status_fixed = array('new', 'progress', 'closed', );
+$g_language_status = array('french', 'english', );
+$g_status_colors = array(
+	'new' => '#fcbdbd',
+	'progress' => '#d2f5b0',
+	'closed' => '#c9ccc4',
+);
+#name
+$s_status_enum_string_french = '10:nouveau,20:en cours,30:fermé';
+$s_status_enum_string_english = '10:new,20:in progress,30:closed';
+#title
+$s_new_bug_title_french = 'Nouveau risque';
+$s_new_bug_title_english = 'New risk';
+$s_progress_bug_title_french = 'Risque en cours';
+$s_progress_bug_title_english = 'Risk in progress';
+$s_closed_bug_title_french = 'Risque fermé';
+$s_closed_bug_title_english = 'Risk closed';
+#button
+$s_new_bug_button_french = 'Nouveau risque';
+$s_new_bug_button_english = 'New risk';
+$s_progress_bug_button_french = 'Démarrer le risque';
+$s_progress_bug_button_english = 'Start risk';
+$s_closed_bug_button_french = 'Fermer le risque';
+$s_closed_bug_button_english = 'Close risk';
+#notification_email
+#email
+$s_email_notification_title_for_status_bug_new_french = 'Le risque suivant est maintenant à  l\'état « nouveau » (encore)';
+$s_email_notification_title_for_status_bug_new_english = 'The following risk is now in status «ï¿½ new »';
+$s_email_notification_title_for_status_bug_progress_french = 'Le risque suivant est maintenant  à  l\'état « en cours »';
+$s_email_notification_title_for_status_bug_progress_english = 'The following risk is now in status «ï¿½ in progress »';
+$s_email_notification_title_for_status_bug_closed_french = 'Le risque suivant a été fermé.';
+$s_email_notification_title_for_status_bug_closed_english = 'The following risk has been closed';
+#workflow
+$g_status_enum_workflow[10] ='20:progress';
+$g_status_enum_workflow[20] ='30:closed';
+$g_status_enum_workflow[30] ='20:progress';
+
diff -rNU5 mantisbt-1.2.5/conf-instance/config_status_4.php mantis_ard/conf-instance/config_status_4.php
--- mantisbt-1.2.5/conf-instance/config_status_4.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/conf-instance/config_status_4.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,184 @@
+<?php
+$g_allow_no_category = OFF;
+/**
+* Custom Configuration Variables for project : projet4 (ARD)_decision
+*/
+
+/**
+* Project ID
+*/
+$g_project_id = 4;
+/**
+* Particular fields
+*/
+#fields
+$g_bug_report_page_fields = array(
+	 'category_id', 
+	 'view_state', 
+	 'handler', 
+	 'priority', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_view_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_print_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_update_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_change_status_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+#priority
+$g_allow_no_priority = ON;
+#severity
+#reproducibility
+#summary
+$s_summary_french = 'Titre';
+$s_summary_english = 'Title';
+#steps_to_reproduce
+#additional_information
+$s_additional_information_french = 'Note';
+$s_additional_information_english = 'Note';
+#control
+
+/**
+* Status management
+*/
+#status
+$g_fixed_status = ON;
+$g_status_enum_string = '10:new,20:progress,30:tovalidate,40:validate,50:invalidate,60:cancel,70:closed';
+$g_status_fixed = array('new', 'progress', 'tovalidate', 'validate', 'invalidate', 'cancel', 'closed', );
+$g_language_status = array('french', 'english', );
+$g_status_colors = array(
+	'new' => '#fcbdbd',
+	'progress' => '#d2f5b0',
+	'tovalidate' => '#c2dfff',
+	'validate' => '#e3b7eb',
+	'invalidate' => '#ffcd85',
+	'cancel' => '#fff494',
+	'closed' => '#c9ccc4',
+	);
+#name
+$s_status_enum_string_french = '10:nouveau,20:en cours,30: à  valider,40:validé,50:invalidé,60:annulé,70:fermé';
+$s_status_enum_string_english = '10:new,20:in progress,30:to validate,40:validated,50:invalidated,60:canceled,70:closed';
+#title
+$s_new_bug_title_french = 'Nouvelle décision';
+$s_new_bug_title_english = 'New decision';
+$s_progress_bug_title_french = 'Décision en cours';
+$s_progress_bug_title_english = 'Decision in progress';
+$s_tovalidate_bug_title_french = 'Décision à  valider';
+$s_tovalidate_bug_title_english = 'Decision validate';
+$s_validate_bug_title_french = 'Décision validée';
+$s_validate_bug_title_english = 'Decision to validate';
+$s_invalidate_bug_title_french = 'Décision invalidée';
+$s_invalidate_bug_title_english = 'Decision invalidate';
+$s_cancel_bug_title_french = 'Décision annulée';
+$s_cancel_bug_title_english = 'Decision cancelled';
+$s_closed_bug_title_french = 'Décision fermé';
+$s_closed_bug_title_english = 'Decision closed';
+#button
+$s_new_bug_button_french = 'Nouvelle décision';
+$s_new_bug_button_english = 'New decision';
+$s_progress_bug_button_french = 'Démarrer la décision';
+$s_progress_bug_button_english = 'Start decision';
+$s_tovalidate_bug_button_french = 'Décision à  valider';
+$s_tovalidate_bug_button_english = 'Validate decision';
+$s_validate_bug_button_french = 'Valider la décision';
+$s_validate_bug_button_english = 'Decision to validate';
+$s_invalidate_bug_button_french = 'Invalider la décision';
+$s_invalidate_bug_button_english = 'Invalidate decision';
+$s_cancel_bug_button_french = 'Annuler la décision';
+$s_cancel_bug_button_english = 'Cancel decision';
+$s_closed_bug_button_french = 'Fermer la décision';
+$s_closed_bug_button_english = 'Close decision';
+#notification_email
+#email
+$s_email_notification_title_for_status_bug_new_french = 'La décision suivante est maintenant à  l\'état « nouveau » (encore)';
+$s_email_notification_title_for_status_bug_new_english = 'The following decision is now in status «ï¿½ new »';
+$s_email_notification_title_for_status_bug_progress_french = 'La décision suivante est maintenant  à  l\'état « en cours »';
+$s_email_notification_title_for_status_bug_progress_english = 'The following decision is now in status «ï¿½ in progress »';
+$s_email_notification_title_for_status_bug_tovalidate_french = 'La décision suivante est à  valider';
+$s_email_notification_title_for_status_bug_tovalidate_english = 'The following decision has been validated';
+$s_email_notification_title_for_status_bug_validate_french = 'La décision suivante est validée';
+$s_email_notification_title_for_status_bug_validate_english = 'The following decision has to be validate';
+$s_email_notification_title_for_status_bug_invalidate_french = 'La décision suivante est invalidée';
+$s_email_notification_title_for_status_bug_invalidate_english = 'The following decision has been invalidated';
+$s_email_notification_title_for_status_bug_cancel_french = 'La décision suivant est annulée';
+$s_email_notification_title_for_status_bug_cancel_english = 'The following decision has been cancelled';
+$s_email_notification_title_for_status_bug_closed_french = 'La décision suivante a été fermé.';
+$s_email_notification_title_for_status_bug_closed_english = 'The following decision has been closed';
+#workflow
+$g_status_enum_workflow[10] ='20:progress,30:to_validate,60:cancel';
+$g_status_enum_workflow[20] ='30:to_validate,60:cancel';
+$g_status_enum_workflow[30] ='40:validate,50:invalidate,60:cancel';
+$g_status_enum_workflow[40] ='20:progress,70:closed';
+$g_status_enum_workflow[50] ='20:progress,70:closed';
+$g_status_enum_workflow[60] ='20:progress,70:closed';
+$g_status_enum_workflow[70] ='20:progress,30:to_validate';
+
diff -rNU5 mantisbt-1.2.5/conf-instance/config_status_5.php mantis_ard/conf-instance/config_status_5.php
--- mantisbt-1.2.5/conf-instance/config_status_5.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/conf-instance/config_status_5.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,160 @@
+<?php
+$g_allow_no_category = OFF;
+/**
+* Custom Configuration Variables for project : projet4 (ARD)_evolution
+*/
+
+/**
+* Project ID
+*/
+$g_project_id = 5;
+/**
+* Particular fields
+*/
+#fields
+$g_bug_report_page_fields = array(
+	 'category_id', 
+	 'view_state', 
+	 'handler', 
+	 'priority', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_view_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_print_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_update_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+$g_bug_change_status_page_fields = array(
+	 'id', 
+	 'project', 
+	 'category_id', 
+	 'view_state', 
+	 'date_submitted', 
+	 'last_updated', 
+	 'reporter', 
+	 'handler', 
+	 'priority', 
+	 'status', 
+	 'projection', 
+	 'eta', 
+	 'summary', 
+	 'description', 
+	 'due_date', 
+	 'attachments', 
+);
+#priority
+$g_allow_no_priority = ON;
+#severity
+#reproducibility
+#summary
+#steps_to_reproduce
+#additional_information
+#control
+
+/**
+* Status management
+*/
+#status
+$g_fixed_status = ON;
+$g_status_enum_string = '10:new,20:waiting_encryption,30:waiting_moa,40:accepted,50:cancel,60:closed';
+$g_status_fixed = array('new', 'waiting_encryption', 'waiting_moa', 'accepted', 'cancel', 'closed', );
+$g_language_status = array('french', 'english', );
+$g_status_colors = array(
+	'new' => '#fcbdbd',
+	'waiting_encryption' => '#d2f5b0',
+	'waiting_moa' => '#c2dfff',
+	'accepted' => '#e3b7eb',
+	'cancel' => '#ffcd85',
+	'closed' => '#c9ccc4',
+	);
+#name
+$s_status_enum_string_french = '10:nouveau,20:en attente de chiffrage,30:en attente MOA,40:accepté,50:annulé,60:fermé';
+$s_status_enum_string_english = '10:new,20:waiting encryption,30:waiting MOA,40:accepted,50:canceled,60:closed';
+#title
+$s_new_bug_title_french = 'Nouvelle évolution';
+$s_new_bug_title_english = 'New evolution';
+$s_waiting_encryption_bug_title_french = 'Evolution en attente de chiffrage';
+$s_waiting_encryption_bug_title_english = 'Waiting encryption evolution';
+$s_waiting_moa_bug_title_french = 'Evolution en attente MOA';
+$s_waiting_moa_bug_title_english = 'Waiting MOA evolution';
+$s_accepted_bug_title_french = 'Evolution acceptée';
+$s_accepted_bug_title_english = 'Accepted evolution';
+$s_cancel_bug_title_french = 'Evolution annulée';
+$s_cancel_bug_title_english = 'Canceled evolution';
+#button
+$s_new_bug_button_french = 'Nouvelle évolution';
+$s_new_bug_button_english = 'New evolution';
+$s_waiting_encryption_bug_button_french = 'Mettre en attente de chiffrage l\'évolution';
+$s_waiting_encryption_bug_button_english = 'Put the evolution pending encryption';
+$s_waiting_moa_bug_button_french = 'Mettre en attente MOA l\'évolution';
+$s_waiting_moa_bug_button_english = 'Put the evolution pending MOA';
+$s_accepted_bug_button_french = 'Accepter l\'évolution';
+$s_accepted_bug_button_english = 'Accept evolution';
+$s_cancel_bug_button_french = 'Annuler l\'évolution';
+$s_cancel_bug_button_english = 'Cancel evolution';
+#notification_email
+#email
+$s_email_notification_title_for_status_bug_new_french = 'L\'évolution suivante est maintenant à  l\'état « nouveau » (encore)';
+$s_email_notification_title_for_status_bug_new_english = 'The following evolution is now in status «ï¿½ new »';
+$s_email_notification_title_for_status_bug_waiting_encryption_french = 'L\'évolution suivante est en attente de chiffrage';
+$s_email_notification_title_for_status_bug_waiting_encryption_english = 'The following evolution is pending encryption';
+$s_email_notification_title_for_status_bug_waiting_moa_french = 'L\'évolution suivante est en attente MOA';
+$s_email_notification_title_for_status_bug_waiting_moa_english = 'The following evolution is pending MOA';
+$s_email_notification_title_for_status_bug_accepted_french = 'L\'évolution suivante est acceptée';
+$s_email_notification_title_for_status_bug_accepted_english = 'The following evolution has been accepted';
+$s_email_notification_title_for_status_bug_cancel_french = 'L\'évolution suivante est annulée';
+$s_email_notification_title_for_status_bug_cancel_english = 'The following evolution has been canceled';
+#workflow
+
diff -rNU5 mantisbt-1.2.5/core/authentication_api.php mantis_ard/core/authentication_api.php
--- mantisbt-1.2.5/core/authentication_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/authentication_api.php	2013-04-05 16:32:37.000000000 +0200
@@ -51,20 +51,211 @@
  * @global array $g_cache_current_user_id
  */
 $g_cache_current_user_id = null;
 
 /**
+ * Initialize phpCAS.
+ */
+function auth_cas_init() {
+        # phpCAS must be installed in the include path
+        # or in the Mantis directory.
+        require_once('CAS/CAS.php');
+
+        static $s_initialized=false;
+
+        if (! $s_initialized ) {
+                phpCAS::setDebug( config_get( 'cas_debug' ) );
+        ## These should be set in config_inc.php
+                $t_server_version = config_get( 'cas_version' );
+                $t_server_cas_server = config_get( 'cas_server' );
+                $t_server_port = config_get( 'cas_port' );
+                $t_server_uri = config_get( 'cas_uri' );
+
+                phpCAS::client($t_server_version, $t_server_cas_server, $t_server_port, $t_server_uri);
+		phpCAS::handleLogoutRequests(false);
+
+                if ($t_server_version == "S1")
+                        phpCAS::setServerSamlValidateURL( config_get( 'cas_validate' ) );
+                else
+                        phpCAS::setServerProxyValidateURL( config_get( 'cas_validate' ) );
+                if (method_exists('phpCAS', 'setNoCasServerValidation')) {
+                        // no SSL validation for the CAS server
+                        phpCAS::setNoCasServerValidation();
+                }
+
+                $s_initialized = true;
+        }
+
+}
+
+
+/**
+ * Fetches the user's CAS name, authenticating if needed.
+ * Can translate CAS login name to Mantis username through LDAP.
+ */
+function auth_cas_get_name()
+{
+        # Get CAS username from phpCAS
+        auth_cas_init();
+        phpCAS::forceAuthentication();
+        $t_cas_id = phpCAS::getUser();
+        $t_cas_attribs = phpCAS::getAttributes();
+
+        # If needed, translate the CAS username through LDAP
+        $t_username = $t_cas_id;
+        if (config_get( 'cas_use_ldap', false )) {
+                $t_username = auth_cas_ldap_translate( $t_cas_id );
+        }
+        elseif (config_get( 'cas_saml_attributes', false )) {
+                $t_cas_attribmap = config_get( 'cas_saml_map', array() );
+                $t_cas_attrib_name = $t_cas_attribs[$t_cas_attribmap['name']];
+                $t_cas_attrib_mail = $t_cas_attribs[$t_cas_attribmap['mail']];
+                if ( user_get_id_by_name($t_cas_id) == false ) {
+                        user_create( $t_cas_id, '', $t_cas_attrib_mail, null, false, true, $t_cas_attrib_name );
+	         }
+        }
+                                
+        return $t_username;
+}
+
+/**
+ * Takes an ID string, and looks up the LDAP directory to find
+ * the matching username for Mantis.
+ *
+ * Optionally, also update the user information in the Mantis user
+ * table.
+ *
+ * @param $p_cas_id string Typically, the username given by phpCAS.
+ * @param $p_update_user bool Whether or not to update user details from LDAP.
+ */
+function auth_cas_ldap_translate( $p_cas_id, $p_update_user='' )
+{
+
+        # Please make sure the Mantis CAS and LDAP settings are set in config_inc.php
+
+        $t_ldap_organization    = config_get( 'ldap_organization' );
+        $t_ldap_root_dn         = config_get( 'ldap_root_dn' );
+
+        # Required fields in LDAP for CAS
+        $t_ldap_language_field = config_get( 'ldap_language_field', '' );
+        $t_ldap_uid_field = config_get( 'ldap_uid_field', 'uid' ) ;
+        $t_ldap_mantis_uid = config_get( 'ldap_mantis_uid', 'uid' );
+        $t_ldap_required = array( $t_ldap_uid_field, $t_ldap_mantis_uid, 'dn' );
+        if ($t_ldap_language_field) {
+                // Add language field to attributes list only if it is configured.
+                $t_ldap_required[] = $t_ldap_language_field;
+        }
+        $t_ldap_required = array_combine( $t_ldap_required, $t_ldap_required );
+
+        # User-defined fields to fetch from LDAP...
+        $t_ldap_fields = explode( ',', config_get( 'cas_ldap_update_fields' ) );
+        $t_ldap_fields = array_combine( $t_ldap_fields, $t_ldap_fields );
+        # ...which are mapped to Mantis user fields
+        $t_ldap_map = explode( ',', config_get( 'cas_ldap_update_map' ) );
+        $t_ldap_map = array_combine( $t_ldap_map, $t_ldap_map );
+
+        # Build LDAP search filter, attribute list from CAS ID
+        $t_search_filter = "(&$t_ldap_organization($t_ldap_uid_field=$p_cas_id))";
+        $t_search_attrs = array_values($t_ldap_required + $t_ldap_fields);      # array union
+
+        # Use Mantis ldap_api to connect to LDAP
+        $t_ds = ldap_connect_bind();
+        $t_sr   = ldap_search( $t_ds, $t_ldap_root_dn, $t_search_filter, $t_search_attrs );
+        $t_info = ldap_get_entries( $t_ds, $t_sr );
+        # Parse the LDAP entry to find the Mantis username
+        if ( $t_info ) {
+                # Get Mantis username
+                $t_username = $t_info[0][$t_ldap_mantis_uid][0];
+
+                # @@@ The fact that we got here means the user is authenticated
+                # @@@ by CAS, and has an LDAP entry.
+                # @@@ We might as well update other user details since we are here.
+
+                # If no argument given, check settings
+                if ( '' == $p_update_user ) {
+                        $p_update_user = config_get( 'cas_ldap_update', FALSE );
+                }
+                # If there's a user record, then update it
+                if ( $p_update_user ) {
+                        # Only proceed if the field map arrays are the same length
+                        $t_field_map = array_combine( $t_ldap_fields, $t_ldap_map );
+                        if ($t_field_map) {
+                                # If user is new, then we must create their account before updating it
+                                # @@@ ( make sure $g_allow_blank_email == ON )
+                                $t_userid = user_get_id_by_name($t_username);
+                                if ( false == $t_userid ) {
+                                        user_create( $t_username, '' );
+                                        # @@@ Wow, this is pretty lame
+                                        $t_userid = user_get_id_by_name($t_username);
+                                }
+                                # @@@ maybe we can optimize this to write all fields at once?
+                                foreach ( $t_field_map as $key=>$t_userfield ) {
+                                        if (isset($t_info[0][$key][0])) {
+                                                user_set_field( $t_userid, $t_userfield, $t_info[0][$key][0] );
+                                        }
+                                }
+                        }
+
+                        // Update user's overall language preference
+                        if ($t_ldap_language_field) {
+                                $t_language = $t_info[0][$t_ldap_language_field][0];
+                                // Map the LDAP language field to Mantis' language field if needed
+                                $t_language_keys = config_get( 'ldap_language_keys', '');
+                                $t_language_values = config_get( 'ldap_language_values', '');
+                                $t_language_map = array_combine(
+                                        explode(',', $t_language_keys),
+                                        explode(',', $t_language_values)
+                                );
+                                if (isset($t_language_map[$t_language])) {
+                                        $t_language = $t_language_map[$t_language];
+                                }
+                                user_pref_set_pref($t_userid, 'language', $t_language);
+                        }
+                }
+        }
+        ldap_free_result( $t_sr );
+        ldap_unbind( $t_ds );
+
+        return $t_username;
+}
+
+
+/**
+ * Logs out of CAS, redirecting to Mantis on re-login.
+ * User should already be logged out of Mantis by the time this is called.
+ * @see auth_logout()
+ */
+function auth_cas_logout()
+{
+        $t_path = config_get('path');
+
+        auth_cas_init();
+        if (method_Exists('phpCAS', 'logoutWithUrl')) {
+                phpCAS::logoutWithUrl($t_path);
+        } else {
+                phpCAS::logout($t_path);
+        }
+}
+
+/**
  * Check that there is a user logged-in and authenticated
  * If the user's account is disabled they will be logged out
  * If there is no user logged in, redirect to the login page
  * If parameter is given it is used as a URL to redirect to following
  * successful login.  If none is given, the URL of the current page is used
  * @param string $p_return_page Page to redirect to following successful logon, defaults to current page
  * @access public
  */
 function auth_ensure_user_authenticated( $p_return_page = '' ) {
+	global $g_cache_current_user_id;
 	# if logged in
+	if ( CAS_AUTH == config_get( 'login_method' ) ) {
+		# This will detour to the CAS login page if needed
+		$f_username = auth_cas_get_name();
+		auth_attempt_login($f_username,$f_password,$f_perm_login);
+		$g_cache_current_user_id = user_get_id_by_name( $f_username );
+	}
 	if( auth_is_user_authenticated() ) {
 		# check for access enabled
 		#  This also makes sure the cookie is valid
 		if( OFF == current_user_get_field( 'enabled' ) ) {
 			print_header_redirect( 'logout_page.php' );
@@ -180,11 +371,12 @@
 	$t_user_id = user_get_id_by_name( $p_username );
 
 	$t_login_method = config_get( 'login_method' );
 
 	if ( false === $t_user_id ) {
-		if ( BASIC_AUTH == $t_login_method ) {
+		if ( in_array( $t_login_method, array( BASIC_AUTH, CAS_AUTH ) ) ) {
+			# attempt to create the user if using BASIC_AUTH or CAS_AUTH
 			$t_auto_create = true;
 		} else if ( LDAP == $t_login_method && ldap_authenticate_by_username( $p_username, $p_password ) ) {
 			$t_auto_create = true;
 		} else {
 			$t_auto_create = false;
@@ -309,10 +501,14 @@
 	}
 
 	if( HTTP_AUTH == config_get( 'login_method' ) ) {
 		auth_http_set_logout_pending( true );
 	}
+	elseif ( CAS_AUTH == config_get( 'login_method' ) ) {
+		# Redirect to CAS page to logout
+		auth_cas_logout();
+	}
 
 	session_clean();
 }
 
 /**
@@ -322,10 +518,12 @@
  */
 function auth_automatic_logon_bypass_form() {
 	switch( config_get( 'login_method' ) ) {
 		case HTTP_AUTH:
 			return true;
+		case CAS_AUTH:
+			return true;
 	}
 	return false;
 }
 
 /**
@@ -340,10 +538,14 @@
 	$t_configured_login_method = config_get( 'login_method' );
 
 	if( LDAP == $t_configured_login_method ) {
 		return ldap_authenticate( $p_user_id, $p_test_password );
 	}
+	elseif ( CAS_AUTH == $t_configured_login_method ) {
+		# CAS already took care of password verification for us
+		return true;
+	}
 
 	$t_password = user_get_field( $p_user_id, 'password' );
 	$t_login_methods = Array(
 		MD5,
 		CRYPT,
@@ -615,11 +817,11 @@
  *
  * @return bool
  * @access public
  */
 function auth_reauthenticate() {
-	if( config_get_global( 'reauthentication' ) == OFF || BASIC_AUTH == config_get( 'login_method' ) || HTTP_AUTH == config_get( 'login_method' ) ) {
+	if( config_get_global( 'reauthentication' ) == OFF || in_array(config_get('login_method'), array(BASIC_AUTH, HTTP_AUTH, CAS_AUTH)) ) {
 		return true;
 	}
 
 	$t_auth_token = token_get( TOKEN_AUTHENTICATED );
 	if( null != $t_auth_token ) {
diff -rNU5 mantisbt-1.2.5/core/bug_api.php mantis_ard/core/bug_api.php
--- mantisbt-1.2.5/core/bug_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/bug_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -267,11 +267,11 @@
 		# Summary cannot be blank
 		if( is_blank( $this->summary ) ) {
 			error_parameters( lang_get( 'summary' ) );
 			trigger_error( ERROR_EMPTY_FIELD, ERROR );
 		}
-
+		
 		if( $p_update_extended ) {
 			# Description field cannot be empty
 			if( is_blank( $this->description ) ) {
 				error_parameters( lang_get( 'description' ) );
 				trigger_error( ERROR_EMPTY_FIELD, ERROR );
@@ -282,10 +282,16 @@
 		if( 0 == $this->category_id && !config_get( 'allow_no_category' ) ) {
 			error_parameters( lang_get( 'category' ) );
 			trigger_error( ERROR_EMPTY_FIELD, ERROR );
 		}
 
+		# Make sure a priority is set
+		if( 0 == $this->priority && !config_get( 'allow_no_priority' ) ) {
+			error_parameters( lang_get( 'priority' ) );
+			trigger_error( ERROR_EMPTY_FIELD, ERROR );
+		}
+
 		if( !is_blank( $this->duplicate_id ) && ( $this->duplicate_id != 0 ) && ( $this->id == $this->duplicate_id ) ) {
 			trigger_error( ERROR_BUG_DUPLICATE_SELF, ERROR );
 			# never returns
 		}
 	}
@@ -295,11 +301,11 @@
 	 * @return int integer representing the bug id that was created
 	 * @access public
 	 * @uses database_api.php
 	 * @uses lang_api.php
 	 */
-	function create() {
+	function create($care_about_status_and_assignement = true) {
 		self::validate( true );
 
 		# check due_date format
 		if( is_blank( $this->due_date ) ) {
 			$this_due_date = date_get_null();
@@ -339,15 +345,16 @@
 				$this->handler_id = db_result( $result );
 			}
 		}
 
 		# Check if bug was pre-assigned or auto-assigned.
-		if( ( $this->handler_id != 0 ) && ( $this->status == $t_starting_status ) && ( ON == config_get( 'auto_set_status_to_assigned' ) ) ) {
+		if( $care_about_status_and_assignement && (( $this->handler_id != 0 ) && ( $this->status == $t_starting_status ) && ( ON == config_get( 'auto_set_status_to_assigned' ) ) ) ) {
 			$t_status = config_get( 'bug_assigned_status' );
 		} else {
 			$t_status = $this->status;
 		}
+		$c_date_submitted = !is_blank( $this->date_submitted ) ? $this->date_submitted : db_now();
 
 		# Insert the rest of the data
 		$query = "INSERT INTO $t_bug_table
 					    ( project_id,reporter_id, handler_id,duplicate_id,
 					      priority,severity, reproducibility,status,
@@ -364,11 +371,11 @@
 					      " . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ",
 					      " . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ",
 					      " . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ",
 					      " . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ')';
 
-		db_query_bound( $query, Array( $this->project_id, $this->reporter_id, $this->handler_id, $this->duplicate_id, $this->priority, $this->severity, $this->reproducibility, $t_status, $this->resolution, $this->projection, $this->category_id, db_now(), db_now(), $this->eta, $t_text_id, $this->os, $this->os_build, $this->platform, $this->version, $this->build, $this->profile_id, $this->summary, $this->view_state, $this->sponsorship_total, $this->sticky, $this->fixed_in_version, $this->target_version, $this->due_date ) );
+		db_query_bound( $query, Array( $this->project_id, $this->reporter_id, $this->handler_id, $this->duplicate_id, $this->priority, $this->severity, $this->reproducibility, $t_status, $this->resolution, $this->projection, $this->category_id, $c_date_submitted, db_now(), $this->eta, $t_text_id, $this->os, $this->os_build, $this->platform, $this->version, $this->build, $this->profile_id, $this->summary, $this->view_state, $this->sponsorship_total, $this->sticky, $this->fixed_in_version, $this->target_version, $this->due_date ) );
 
 		$this->id = db_insert_id( $t_bug_table );
 
 		# log new bug
 		history_log_event_special( $this->id, NEW_BUG );
diff -rNU5 mantisbt-1.2.5/core/category_api.php mantis_ard/core/category_api.php
--- mantisbt-1.2.5/core/category_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/category_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -444,11 +444,10 @@
 			return $t_categories;
 		} else {
 			return array();
 		}
 	}
-
 	$c_project_id = db_prepare_int( $p_project_id );
 
 	$t_category_table = db_get_table( 'mantis_category_table' );
 	$t_project_table = db_get_table( 'mantis_project_table' );
 
@@ -562,11 +561,16 @@
  * @return bool
  * @access public
  */
  function category_get_id_by_name( $p_category_name, $p_project_id, $p_trigger_errors = true ) {
 	$t_category_table = db_get_table( 'mantis_category_table' );
-	$t_project_name = project_get_name( $p_project_id );
+	if ( -1 != $p_project_id ) {
+		$t_project_name = project_get_name( $p_project_id );
+	}
+	else {
+		$t_project_name = '';
+	}
 
 	$t_query = "SELECT id FROM $t_category_table
 				WHERE name=" . db_param() . " AND project_id=" . db_param();
 	$t_result = db_query_bound( $t_query, array( $p_category_name, (int) $p_project_id ) );
 	$t_count = db_num_rows( $t_result );
@@ -601,9 +605,57 @@
 		$t_current_project = is_null( $p_current_project ) ? helper_get_current_project() : $p_current_project;
 
 		if( $p_show_project && $t_project_id != $t_current_project ) {
 			return '[' . project_get_name( $t_project_id ) . '] ' . $t_row['name'];
 		}
-
+		
+		if ( lang_exists( $t_row['name'], lang_get_current() ) ) {
+			return lang_get( $t_row['name'] );	
+		}
+		else {		
+			return $t_row['name'];
+		}
+	}
+}
+/**
+ * Retrieves risk criteria category name
+ * @param string $p_category_id category id
+ * @return string category full name
+ * @access public 
+ */
+function category_risk_criteria_full_name( $p_category_id ) {
+	if( 0 == $p_category_id ) {
+		# No Category
+		return lang_get( 'no_category' );
+	} 
+	else {
+		$t_row = category_get_row( $p_category_id );
+	}
+	if ( lang_exists( $t_row['name'], lang_get_current() ) ) {
+		return lang_get( $t_row['name'] );	
+	}
+	else {		
 		return $t_row['name'];
 	}
 }
+/**
+ * Get all category from risk criteria
+ * @return array categories
+ * @access public 
+ */
+function category_risk_criteria_get_all() {
+	$t_category_table = db_get_table( 'mantis_category_table' );
+	$query = "SELECT c.* FROM $t_category_table AS c
+				WHERE project_id= '-1'
+				ORDER BY c.name ";
+				
+	$result = db_query_bound( $query );
+	$count = db_num_rows( $result );
+	$rows = array();
+	for( $i = 0;$i < $count;$i++ ) {
+		$row = db_fetch_array( $result );
+
+		$rows[] = $row;
+		$g_category_cache[(int) $row['id']] = $row;
+	}
+	return $rows;
+}
diff -rNU5 mantisbt-1.2.5/core/cfdefs/cfdef_standard.php mantis_ard/core/cfdefs/cfdef_standard.php
--- mantisbt-1.2.5/core/cfdefs/cfdef_standard.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/cfdefs/cfdef_standard.php	2013-03-27 11:11:16.000000000 +0100
@@ -156,10 +156,24 @@
 	'#function_print_input' => 'cfdef_input_date',
 	'#function_string_value' => 'cfdef_prepare_date_value',
 	'#function_string_value_for_email' => 'cfdef_prepare_date_value_for_email',
 );
 
+$g_custom_field_type_definition[ CUSTOM_FIELD_TYPE_TEXTAREA ] = array (
+	'#display_possible_values' => TRUE,
+	'#display_valid_regexp' => TRUE,
+	'#display_length_min' => TRUE,
+	'#display_length_max' => TRUE,
+	'#display_default_value' => TRUE,
+	'#function_return_distinct_values' => null,
+	'#function_value_to_database' => null,
+	'#function_database_to_value' => null,
+	'#function_print_input' => 'cfdef_input_textarea',
+	'#function_string_value' => null,
+	'#function_string_value_for_email' => null,
+);
+
 function cfdef_prepare_list_database_to_value($p_value) {
 	return rtrim( ltrim( $p_value, '|' ), '|' );
 }
 
 function cfdef_prepare_list_value_for_email($p_value) {
@@ -226,11 +240,13 @@
 
 
 #print_custom_field_input
 
 function cfdef_input_list($p_field_def, $t_custom_field_value) {
-	$t_values = explode( '|', custom_field_prepare_possible_values( $p_field_def['possible_values'] ) );
+
+	$t_values = explode( '|', custom_field_prepare_possible_values( $p_field_def['possible_values'] ) );	
+	
 	$t_list_size = $t_possible_values_count = count( $t_values );
 
 	if ( $t_possible_values_count > 5 ) {
 		$t_list_size = 5;
 	}
@@ -298,10 +314,18 @@
 		echo ' maxlength="255"';
 	}
 	echo ' value="' . string_attribute( $t_custom_field_value ) .'"></input>';
 }
 
+function cfdef_input_textarea($p_field_def, $t_custom_field_value) {
+	echo '<textarea ', helper_get_tab_index(), ' name="custom_field_' . $p_field_def['id'] . '" cols="80" rows="10"';
+	if( 0 < $p_field_def['length_max'] ) {
+		echo ' maxlength="' . $p_field_def['length_max'] . '">';
+	}
+	echo string_attribute( $t_custom_field_value ) .'</textarea>';
+}
+
 /**
  * Prints the controls for the date selector.
  *
  * @param $p_field_def  The custom field definition.
  * @param $p_custom_field_value  The custom field value to print.
diff -rNU5 mantisbt-1.2.5/core/classes/MantisEnum.class.php mantis_ard/core/classes/MantisEnum.class.php
--- mantisbt-1.2.5/core/classes/MantisEnum.class.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/classes/MantisEnum.class.php	2013-03-27 11:11:16.000000000 +0100
@@ -89,11 +89,11 @@
 	 * @param string $label       The label to map.
 	 * @return integer value of the enum or false if not found.
 	 */
 	public static function getValue( $enumString, $label ) {
 		$assocArrayByLabels = MantisEnum::getAssocArrayIndexedByLabels( $enumString );
-
+		
 		if ( isset( $assocArrayByLabels[$label] ) ) {
 			return $assocArrayByLabels[$label];
 		}
 
 		return false;
diff -rNU5 mantisbt-1.2.5/core/columns_api.php mantis_ard/core/columns_api.php
--- mantisbt-1.2.5/core/columns_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/columns_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -181,11 +181,10 @@
 		}
 
 		$t_def = custom_field_get_definition( $t_id );
 		$t_columns[] = 'custom_' . $t_def['name'];
 	}
-
 	return $t_columns;
 }
 
 /**
  * Checks if the specified column is an extended column.  Extended columns are native columns that are
diff -rNU5 mantisbt-1.2.5/core/conf_instance_file_api.php mantis_ard/core/conf_instance_file_api.php
--- mantisbt-1.2.5/core/conf_instance_file_api.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/core/conf_instance_file_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,100 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+ /**
+ * Return the instance file containt
+ * @return array
+ */
+function get_instance_file() {
+	//TODO make it work !
+	$t_project_id = helper_get_current_project();
+	return file("conf-instance/config_status_$t_project_id.php");
+}
+
+ /**
+ * Return the line of the indice in parameter from the specified file delimited if indicated
+ * @param array $p_file
+ * @param string $p_indice
+ * @return int $line, false if line is not found
+ */
+function get_line_in_file(&$p_file, $p_indice) {	
+	$t_line = false;
+	
+	for($i=0; $i<count($p_file); $i++) {
+		# get the line where $p_indice match
+		if( 1 == preg_match("/$p_indice/i", $p_file[$i]) ) $t_line = $i;
+	}
+	
+	return $t_line;
+}
+
+/**
+ * Insert a new element in an array at the specified indice
+ * @param array $p_array
+ * @param string $p_element
+ * @param string $p_indice
+ * @return array $array_tmp
+ */
+function insert_in_file(&$p_array, &$p_element, &$p_indice) {
+	$array_tmp = array() ;
+    $indice_tmp = 0 ;
+ 
+    while($indice_tmp != $p_indice)
+    {
+        array_push($array_tmp,$p_array[$indice_tmp]);
+        $indice_tmp++ ;
+    }
+ 
+    array_push($array_tmp,$p_element);
+ 
+    while($indice_tmp != (count($p_array)))
+    {
+        array_push($array_tmp,$p_array[$indice_tmp]);
+        $indice_tmp++ ;
+    }
+ 
+    return $array_tmp ;
+}
+
+/**
+ * Remove a case in an array at the specified indice
+ * @param array $p_array
+ * @param string $p_indice
+ * @return array $p_array
+ */
+function remove_in_file(&$p_array, &$p_indice) {	
+	unset($p_array[$p_indice]);
+	return array_values($p_array);	
+}
+
+/**
+ * Write in the file specified the array specified
+ * @param string $p_file
+ * @param array $p_indice
+ */
+function write_file($p_file, &$p_array) {
+	$file = fopen($p_file, 'w'); 
+	for ($i=0; $i<count($p_array); $i++) {
+		fputs ($file, $p_array[$i]);
+	}
+	fclose($file); 
+}
+?>
diff -rNU5 mantisbt-1.2.5/core/constant_inc.php mantis_ard/core/constant_inc.php
--- mantisbt-1.2.5/core/constant_inc.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/constant_inc.php	2013-03-27 11:11:16.000000000 +0100
@@ -132,10 +132,11 @@
 define( 'CRYPT_FULL_SALT', 2 );
 define( 'MD5', 3 );
 define( 'LDAP', 4 );
 define( 'BASIC_AUTH', 5 );
 define( 'HTTP_AUTH', 6 );
+define( 'CAS_AUTH', 7);
 
 # file upload methods
 define( 'DISK', 1 );
 define( 'DATABASE', 2 );
 define( 'FTP', 3 );
@@ -380,10 +381,29 @@
 define( 'ERROR_SESSION_NOT_VALID', 2702 );
 
 # ERROR_FORM_*
 define( 'ERROR_FORM_TOKEN_INVALID', 2800 );
 
+# ERROR_STATUS_*
+define( 'ERROR_STATUS_DUPLICATE_LABEL', 2900 );
+define( 'ERROR_STATUS_INVALID_COLOR', 2901 );
+define( 'ERROR_STATUS_INVALID_LABEL', 2902 );
+define( 'ERROR_STATUS_OTHER_LANGUAGE_EMAIL', 2903 );
+define( 'ERROR_STATUS_CLASSIFICATION_NUMBER', 2904 );
+define( 'ERROR_STATUS_CLASSIFICATION_NUMBER_BORNS', 2905 );
+define( 'ERROR_STATUS_DELETE_WHEN_USE', 2906 );
+define( 'ERROR_STATUS_LANGUAGE', 2907 );
+define( 'ERROR_STATUS_DUPLICATE_NAME_FRENCH', 2908 );
+define( 'ERROR_STATUS_DUPLICATE_NAME_ENGLISH', 2909 );
+
+
+# ERROR_RISK_CRITERIA*
+define( 'ERROR_RISK_CRITERIA_DUPLICATE_LABEL', 3000 );
+define( 'ERROR_RISK_CRITERIA_WEIGHT_INVALID', 3001 );
+define( 'ERROR_RISK_CRITERIA_SUM_WEIGHT_INVALID', 3002 );
+define( 'ERROR_RISK_CRITERIA_LABEL', 3003 );
+
 # Generic position constants
 define( 'POSITION_NONE', 0 );
 define( 'POSITION_TOP', 1 );
 define( 'POSITION_BOTTOM', 2 );
 define( 'POSITION_BOTH', 3 );
@@ -412,10 +432,11 @@
 define( 'CUSTOM_FIELD_TYPE_CHECKBOX', 5 );
 define( 'CUSTOM_FIELD_TYPE_LIST', 6 );
 define( 'CUSTOM_FIELD_TYPE_MULTILIST', 7 );
 define( 'CUSTOM_FIELD_TYPE_DATE', 8 );
 define( 'CUSTOM_FIELD_TYPE_RADIO', 9 );
+define( 'CUSTOM_FIELD_TYPE_TEXTAREA', 10 );
 
 # Meta filter values
 define( 'META_FILTER_MYSELF', -1 );
 define( 'META_FILTER_NONE', - 2 );
 define( 'META_FILTER_CURRENT', - 3 );
@@ -524,5 +545,15 @@
 define( 'USERLEN', 32);
 define( 'REALLEN', 64);
 define( 'PASSLEN', 32);
 
 define( 'SECONDS_PER_DAY', 86400 );
+
+# ARDE management 
+//ard is a boolean which is true if the mantis is in ard mode
+define('ARD', true);
+define( 'MANAGEMENT', 'management' );
+define( 'RISK', 'risk' );
+define( 'ACTION', 'action' );
+define( 'DECISION', 'decision' );
+define( 'EVOLUTION', 'evolution' );
+
diff -rNU5 mantisbt-1.2.5/core/current_user_api.php mantis_ard/core/current_user_api.php
--- mantisbt-1.2.5/core/current_user_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/current_user_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -192,12 +192,12 @@
  */
 function current_user_get_bug_filter( $p_project_id = null ) {
 	$f_filter_string = gpc_get_string( 'filter', '' );
 	$t_view_all_cookie = '';
 	$t_cookie_detail = '';
-	$t_filter = '';
 
+	$t_filter = '';
 	if( !is_blank( $f_filter_string ) ) {
 		if( is_numeric( $f_filter_string ) ) {
 			$t_token = token_get_value( TOKEN_FILTER );
 			if( null != $t_token ) {
 				$t_filter = unserialize( $t_token );
diff -rNU5 mantisbt-1.2.5/core/custom_function_api.php mantis_ard/core/custom_function_api.php
--- mantisbt-1.2.5/core/custom_function_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/custom_function_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -220,11 +220,11 @@
 	if( $p_columns_target == COLUMNS_TARGET_CSV_PAGE ) {
 		$t_columns = config_get( 'csv_columns', '', $p_user_id, $t_project_id );
 	} else if( $p_columns_target == COLUMNS_TARGET_EXCEL_PAGE ) {
 		$t_columns = config_get( 'excel_columns', '', $p_user_id, $t_project_id );
 	} else if( $p_columns_target == COLUMNS_TARGET_VIEW_PAGE ) {
-		$t_columns = config_get( 'view_issues_page_columns', '', $p_user_id, $t_project_id );
+		$t_columns = config_get( 'view_issues_page_columns_'.project_get_type_management(), '', $p_user_id, $t_project_id );
 	} else {
 		$t_columns = config_get( 'print_issues_page_columns', '', $p_user_id, $t_project_id );
 	}
 
 	$t_columns = columns_remove_invalid( $t_columns, columns_get_all( $t_project_id ) );
diff -rNU5 mantisbt-1.2.5/core/forge_api.php mantis_ard/core/forge_api.php
--- mantisbt-1.2.5/core/forge_api.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/core/forge_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,81 @@
+<?php
+/**
+  NovaForge(tm)
+  Copyright (c) 2010-2011 Bull S.A.S.
+  
+  This program is free software: you can redistribute it and/or modify
+  it under the terms of the GNU Lesser General Public License as published by 
+  the Free Software Foundation, either version 3 of the License, or
+  (at your option) any later version.
+  
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU Lesser General Public License for more details.
+  
+  You should have received a copy of the GNU Lesser General Public License
+  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+require_once( 'nusoap/nusoap.php' );
+
+/**
+ * Return url to redirect user to its project
+ * @param string $p_instance uuid send by forge
+ * @access public
+ */
+function get_project_return_url( $p_instance ) {
+
+        ini_set("soap.wsdl_cache_enabled", "0");
+
+        $clientSOAP = new nusoap_client(config_get( 'instance_wsdl' ),true);
+        $clientSOAP->setUseCurl(false);
+        $result = $clientSOAP->call(config_get( 'instance_method' ), array('arg0' => $p_instance));         
+	// Check for a fault
+	if ($clientSOAP->fault) {
+		error_log( "fault :'" . $result['faultstring'] ."'");
+		return false;
+	} else {
+		// Check for errors
+		$err = $clientSOAP->getError();
+		if ($err) {
+		        // Display the error
+			error_log( "err :'" . $err ."'");
+			return false;
+		} 
+	}
+	
+        return string_url( "set_project.php?project_id=" . $result['return'] );
+}
+
+/**
+ * Return project id for mantis instance
+ * @param string $p_instance uuid send by forge
+ * @access public
+ */
+function get_mantis_instance_project_id( $p_instance ) {
+
+        ini_set("soap.wsdl_cache_enabled", "0");
+
+        $clientSOAP = new nusoap_client(config_get( 'instance_wsdl' ),true);
+        $clientSOAP->setUseCurl(false);
+        $result = $clientSOAP->call(config_get( 'instance_method' ), array('arg0' => $p_instance));         
+	// Check for a fault
+	if ($clientSOAP->fault) {
+		error_log( "fault :'" . $result['faultstring'] ."'");
+		return false;
+	} else {
+		// Check for errors
+		$err = $clientSOAP->getError();
+		if ($err) {
+		        // Display the error
+			error_log( "err :'" . $err ."'");
+			return false;
+		} 
+	}
+	
+        return $result['return'];
+}
+
+
+?>
diff -rNU5 mantisbt-1.2.5/core/helper_api.php mantis_ard/core/helper_api.php
--- mantisbt-1.2.5/core/helper_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/helper_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -81,21 +81,46 @@
 		$t_color = $t_status_colors[$t_status_label];
 	}
 
 	return $t_color;
 }
+/**
+ * Given a enum string and string, return the appropriate id
+ * @param string $p_enum_name
+ * @param string $p_val
+ * @return int, the id otherwise null
+ * 
+ */
+function get_enum_id( $p_enum_name, $p_val, $p_by_french_or_english = false ) {
+	$config_var = MantisEnum::getAssocArrayIndexedByValues( config_get( $p_enum_name.'_enum_string' ) );
+	$key = null;
+	if ( in_array($p_val, $config_var) ) {
+		$key = array_search($p_val, $config_var);
+	}
+	return $key;
+}
 
 /**
  * Given a enum string and num, return the appropriate string
  * @param string $p_enum_name
  * @param int $p_val
  * @return string
  */
-function get_enum_element( $p_enum_name, $p_val ) {
+function get_enum_element( $p_enum_name, $p_val, $p_by_french_or_english = false ) {
 	$config_var = config_get( $p_enum_name . '_enum_string' );
-	$string_var = lang_get( $p_enum_name . '_enum_string' );
-
+	if ( $p_by_french_or_english ) {
+		if ( 'french' == user_pref_get( auth_get_current_user_id() )->language ) {
+			$t_user_language = 'french';
+		}
+		else {
+			$t_user_language = 'english';			
+		}
+		$string_var = lang_get( $p_enum_name . '_enum_string_' . $t_user_language );
+	}
+	else {
+		$string_var = lang_get( $p_enum_name . '_enum_string' );		
+	}
 	return MantisEnum::getLocalizedLabel( $config_var, $string_var, $p_val );
 }
 
 /**
  * If $p_var is not an array and is equal to $p_val then we PRINT SELECTED.
@@ -192,11 +217,10 @@
 		return $g_project_override;
 	}
 
 	if( $g_cache_current_project === null ) {
 		$t_cookie_name = config_get( 'project_cookie' );
-
 		$t_project_id = gpc_get_cookie( $t_cookie_name, null );
 
 		if( null === $t_project_id ) {
 			$t_pref = user_pref_get( auth_get_current_user_id(), ALL_PROJECTS, false );
 			$t_project_id = $t_pref->default_project;
@@ -222,11 +246,11 @@
  */
 function helper_get_current_project_trace() {
 	$t_cookie_name = config_get( 'project_cookie' );
 
 	$t_project_id = gpc_get_cookie( $t_cookie_name, null );
-
+	
 	if( null === $t_project_id ) {
 		$t_bottom = current_user_get_pref( 'default_project' );
 		$t_project_id = Array(
 			$t_bottom,
 		);
@@ -249,11 +273,10 @@
  * @param int $p_project_id
  * @return bool always true
  */
 function helper_set_current_project( $p_project_id ) {
 	$t_project_cookie_name = config_get( 'project_cookie' );
-
 	gpc_set_cookie( $t_project_cookie_name, $p_project_id, true );
 
 	return true;
 }
 
diff -rNU5 mantisbt-1.2.5/core/html_api.php mantis_ard/core/html_api.php
--- mantisbt-1.2.5/core/html_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/html_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -203,11 +203,10 @@
  * Print the part of the page that comes after meta tags, but before the actual page content
  * @return null
  */
 function html_page_top2() {
 	html_page_top2a();
-
 	if( !db_is_connected() ) {
 		return;
 	}
 
 	if( auth_is_user_authenticated() ) {
@@ -715,13 +714,15 @@
 		echo '<table class="width100" cellspacing="0">';
 		echo '<tr>';
 		echo '<td class="menu">';
 		$t_menu_options = array();
 
-		# Main Page
-		$t_menu_options[] = '<a href="' . helper_mantis_url( 'main_page.php' ) . '">' . lang_get( 'main_link' ) . '</a>';
-
+		/*
+		 * Home commented because of losing context project
+			# Main Page
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'main_page.php' ) . '">' . lang_get( 'main_link' ) . '</a>';
+		 */
 		# Plugin / Event added options
 		$t_event_menu_options = event_signal( 'EVENT_MENU_MAIN_FRONT' );
 		foreach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {
 			foreach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {
 				if( is_array( $t_callback_menu_options ) ) {
@@ -732,33 +733,61 @@
 					}
 				}
 			}
 		}
 
-		# My View
-		$t_menu_options[] = '<a href="' . helper_mantis_url( 'my_view_page.php">' ) . lang_get( 'my_view_link' ) . '</a>';
-
-		# View Bugs
-		$t_menu_options[] = '<a href="' . helper_mantis_url( 'view_all_bug_page.php">' ) . lang_get( 'view_bugs_link' ) . '</a>';
-
-		# Report Bugs
-		if( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {
-			$t_menu_options[] = string_get_bug_report_link();
+		if ( 1 == preg_match('/management/i', project_get_type_management() ) ) {
+		/*	
+		 * Menu to access to each ARDE project but commented because of losing context project
+		 	# View Actions
+			$project_id = project_get_other_type_project_id('action');
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'view_all_bug_page.php?project_id='.$project_id.'">' ) . lang_get( 'view_actions_link' ) . '</a>';
+			# View Risks
+			$project_id = project_get_other_type_project_id('risk');
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'view_all_bug_page.php?project_id='.$project_id.'">' ) . lang_get( 'view_risks_link' ) . '</a>';
+			# View Decisions
+			$project_id = project_get_other_type_project_id('decision');
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'view_all_bug_page.php?project_id='.$project_id.'">' ) . lang_get( 'view_decisions_link' ) . '</a>';
+			# View Evolutions
+			$project_id = project_get_other_type_project_id('evolution');
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'view_all_bug_page.php?project_id='.$project_id.'">' ) . lang_get( 'view_evolutions_link' ) . '</a>';
+		*/
+		} 
+		elseif ( 0 == helper_get_current_project() ) {
+			#nothing
+		}
+		else {
+			# My View
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'my_view_page.php">' ) . lang_get( 'my_view_link' ) . '</a>';	
+			
+			# View Bugs
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'view_all_bug_page.php">' ) . lang_get( 'view_bugs_link' ) . '</a>';
+	
+			# Report Bugs
+			if( access_has_project_level( config_get( 'report_bug_threshold' ) ) ) {
+				$t_menu_options[] = string_get_bug_report_link();
+			}	
+		}
+		if ( 0 != helper_get_current_project() ) {
+			# PRISM
+			$t_menu_options[] = '<a href="' . helper_mantis_url( 'risk_criteria_page.php">' ) . lang_get( 'prism_link' ) . '</a>';
 		}
 
 		# Changelog Page
-		if( access_has_project_level( config_get( 'view_changelog_threshold' ) ) ) {
+		if( access_has_project_level( config_get( 'view_changelog_threshold' ) ) &&
+		( ON == config_get( 'changelog_enable' ) ) ) {
 			$t_menu_options[] = '<a href="' . helper_mantis_url( 'changelog_page.php">' ) . lang_get( 'changelog_link' ) . '</a>';
 		}
 
 		# Roadmap Page
-		if( access_has_project_level( config_get( 'roadmap_view_threshold' ) ) ) {
+		if( access_has_project_level( config_get( 'roadmap_view_threshold' )) &&
+		( ON == config_get( 'roadmap_enable' ) ) ) {
 			$t_menu_options[] = '<a href="' . helper_mantis_url( 'roadmap_page.php">' ) . lang_get( 'roadmap_link' ) . '</a>';
 		}
 
 		# Summary Page
-		if( access_has_project_level( config_get( 'view_summary_threshold' ) ) ) {
+		if(  ON == config_get( 'enable_project_documentation' ) ) {
 			$t_menu_options[] = '<a href="' . helper_mantis_url( 'summary_page.php">' ) . lang_get( 'summary_link' ) . '</a>';
 		}
 
 		# Project Documentation Page
 		if( ON == config_get( 'enable_project_documentation' ) ) {
@@ -827,13 +856,15 @@
 		if( config_get( 'time_tracking_enabled' ) && config_get( 'time_tracking_with_billing' ) && access_has_global_level( config_get( 'time_tracking_reporting_threshold' ) ) ) {
 			$t_menu_options[] = '<a href="' . helper_mantis_url( 'billing_page.php">' ) . lang_get( 'time_tracking_billing_link' ) . '</a>';
 		}
 
 		# Logout (no if anonymously logged in)
-		if( !current_user_is_anonymous() ) {
-			$t_menu_options[] = '<a href="' . helper_mantis_url( 'logout_page.php">' ) . lang_get( 'logout_link' ) . '</a>';
-		}
+		# Commented because logout can not be accessible in the forge
+//		if( !current_user_is_anonymous() ) {
+//			$t_menu_options[] = '<a href="' . helper_mantis_url( 'logout_page.php">' ) . lang_get( 'logout_link' ) . '</a>';
+//		}
+		
 		echo implode( $t_menu_options, ' | ' );
 		echo '</td>';
 		echo '<td class="menu right nowrap">';
 		echo '<form method="post" action="' . helper_mantis_url( 'jump_to_bug.php">' );
 		# CSRF protection not required here - form does not result in modifications
@@ -857,11 +888,11 @@
  * Print the menu bar with a list of projects to which the user has access
  * @return null
  */
 function print_project_menu_bar() {
 	$t_project_ids = current_user_get_accessible_projects();
-
+	
 	echo '<table class="width100" cellspacing="0">';
 	echo '<tr>';
 	echo '<td class="menu">';
 	echo '<a href="' . helper_mantis_url( 'set_project.php?project_id=' . ALL_PROJECTS ) . '">' . lang_get( 'all_projects' ) . '</a>';
 
@@ -1016,10 +1047,11 @@
 	$t_permissions_summary_report = 'adm_permissions_report.php';
 	$t_manage_work_threshold = 'manage_config_work_threshold_page.php';
 	$t_manage_email = 'manage_config_email_page.php';
 	$t_manage_workflow = 'manage_config_workflow_page.php';
 	$t_manage_columns = 'manage_config_columns_page.php';
+	$t_manage_status 		= 'manage_config_status_page.php';
 
 	switch( $p_page ) {
 		case $t_configuration_report:
 			$t_configuration_report = '';
 			break;
@@ -1036,22 +1068,31 @@
 			$t_manage_workflow = '';
 			break;
 		case $t_manage_columns:
 			$t_manage_columns = '';
 			break;
+		case $t_manage_status:
+			$t_manage_status = '';
+			break;
 	}
 
 	echo '<br /><div align="center">';
 	if( access_has_project_level( config_get( 'view_configuration_threshold' ) ) ) {
 		print_bracket_link( helper_mantis_url( $t_configuration_report ), lang_get_defaulted( 'configuration_report' ) );
 		print_bracket_link( helper_mantis_url( $t_permissions_summary_report ), lang_get( 'permissions_summary_report' ) );
 		print_bracket_link( helper_mantis_url( $t_manage_work_threshold ), lang_get( 'manage_threshold_config' ) );
 		print_bracket_link( helper_mantis_url( $t_manage_workflow ), lang_get( 'manage_workflow_config' ) );
+		$mantis_project_id = helper_get_current_project();			
+		if (file_exists( BASE_PATH.DIRECTORY_SEPARATOR.'conf-instance'.DIRECTORY_SEPARATOR.'config_status_'.$mantis_project_id.'.php' ))
+		{
+			print_bracket_link( helper_mantis_url( $t_manage_status ), lang_get( 'manage_status_config' ) );
+		}
 		print_bracket_link( helper_mantis_url( $t_manage_email ), lang_get( 'manage_email_config' ) );
 		print_bracket_link( $t_manage_columns, lang_get( 'manage_columns_config' ) );
 	}
 
+
 	# Plugin / Event added options
 	$t_event_menu_options = event_signal( 'EVENT_MENU_MANAGE_CONFIG' );
 	$t_menu_options = array();
 	foreach( $t_event_menu_options as $t_plugin => $t_plugin_menu_options ) {
 		foreach( $t_plugin_menu_options as $t_callback => $t_callback_menu_options ) {
@@ -1201,10 +1242,53 @@
 		echo '&#160;]</span> ';
 	}
 	echo '</div>';
 }
 
+function print_prism_menu ( $p_page = '' ) {
+	$t_reporting_prism = 'reporting_prism_page.php';
+	$t_risk_criteria_configuration = 'risk_criteria_page.php';
+	$t_risk_appreciation = 'risk_appreciation_page.php';
+	
+	switch( $p_page ) {
+		case $t_reporting_prism:
+			//always display
+			break;
+		case $t_risk_criteria_configuration:
+			$t_risk_criteria_configuration = '';
+			break;
+		case $t_risk_appreciation:
+			$t_risk_appreciation = '';
+			break;
+	}
+	
+	echo '<br /><div align="center">';
+	print_bracket_link( helper_mantis_url( $t_reporting_prism ), lang_get_defaulted( 'reporting_prism_link' ) );
+	print_bracket_link( helper_mantis_url( $t_risk_criteria_configuration ), lang_get( 'risk_criteria_configuration_link' ) );
+	print_bracket_link( helper_mantis_url( $t_risk_appreciation ), lang_get( 'risk_appreciation_link' ) );
+	echo '</div>';
+}
+
+function print_risk_criteria_menu ( $p_page = '' ) {
+	$t_view_all_risk_criteria = 'risk_criteria_page.php';
+	$t_add_risk_criteria = 'risk_criteria_view.php';
+
+	switch( $p_page ) {
+		case $t_view_all_risk_criteria:
+			$t_view_all_risk_criteria = '';
+			break;
+		case $t_add_risk_criteria:
+			$t_add_risk_criteria = '';
+			break;
+	}
+
+	echo '<br /><div align="center">';
+	print_bracket_link( helper_mantis_url( $t_view_all_risk_criteria ), lang_get_defaulted( 'view_all_risk_criteria_link' ) );
+	print_bracket_link( helper_mantis_url( $t_add_risk_criteria ), lang_get( 'add_risk_criteria_link' ) );
+
+	echo '</div>';
+}
 /**
  * Print the color legend for the status colors
  * @param string
  * @return null
  */
@@ -1604,16 +1688,109 @@
 		}
 	}
 }
 
 /**
+ * Print a button to create a new $p_project_name report
+ * @param int $p_bug_id
+ * @param String $p_project_name
+ */
+function html_button_relationship_create( $p_bug_id, $p_direction_project_type) {
+	$t_project_id = project_get_other_type_project_id($p_direction_project_type);
+	if ( 0 != $t_project_id) {
+		html_button( 'bug_report_page.php', lang_get('create_'.$p_direction_project_type), array( 'project_id' => $t_project_id, 'relationship_id' => $p_bug_id), 'get' );
+	}
+}
+
+/**
+ * Print a button to associate a list of $p_project_name report
+ * @param int $p_bug_id
+ * @param String $p_project_name
+ */
+function html_button_relationship_associates( $p_bug_id, $p_direction_project_type ) {
+	$t_project_id = project_get_other_type_project_id($p_direction_project_type);
+	if ( 0 != $t_project_id) {
+		html_button( 'view_all_bug_page.php', lang_get('associate_'.$p_direction_project_type.'s'), array( 'project_id' => $t_project_id, 'relationship_id' => $p_bug_id), 'get' );	
+	}
+}
+
+/**
+ * Print a button to associate one of $p_project_name report thanks to a listbox
+ * @param int $p_bug_id
+ * @param String $p_project_name
+ */
+function html_button_relationship_associate( $p_bug_id, $p_project_name ) {
+	$f_page_number = 1;
+	$t_per_page = null;
+	$t_page_count = null;
+	$t_bug_count=  null;
+	$t_show_project = false;
+	$t_current_project_id = helper_get_current_project();
+	
+	//TODO have to use workflow of the $p_project_name
+	$t_new = get_enum_id('status', 'new');	
+	$t_progress = get_enum_id('status', 'progress');
+	$t_closed = get_enum_id('status', 'closed');
+	
+	$t_project_id = project_get_other_type_project_id($p_project_name);
+	$t_relationship_all = relationship_get_all( $p_bug_id, $t_show_project );	
+	$t_bugs = filter_get_bug_rows( $f_page_number, $t_per_page, $t_page_count, $t_bug_count, null, $t_project_id, null, true );
+	
+   	$t_relationships_id = array();
+	foreach ( $t_relationship_all as $t_relationship ) {
+		if ( $t_relationship->dest_bug_id != $p_bug_id ) {
+			array_push($t_relationships_id, $t_relationship->dest_bug_id);
+		}
+//   		TODO dest or src?
+	}
+	
+	#remove from bugs array : 
+	# - already existing relationships 
+	# - new bugs
+	# - closed bugs
+	foreach ( $t_bugs as $key => $bug ) {
+//       	if ( $t_new >= $bug->status || $t_closed <= $bug->status || in_array($bug->id, $t_relationships_id) ) {
+       	if ( $t_progress != $bug->status || in_array($bug->id, $t_relationships_id) ) {
+			unset($t_bugs[$key]);
+		}
+	}
+
+	#display select
+	if( count( $t_bugs ) > 0 ) {
+
+		echo "<form method=\"post\" action=\"bug_associate.php\">";
+		# CSRF protection not required here - form does not result in modifications
+
+		$t_button_text = lang_get( 'associate_'.$p_project_name );
+		echo "<input type=\"submit\" class=\"button\" value=\"$t_button_text\" />";
+
+		echo " <select name=\"associate_bug_id\">";
+
+		# space at beginning of line is important
+		foreach( $t_bugs as $bug ) {
+			echo "<option value=\"$bug->id\" ";
+			echo ">[$bug->id] $bug->summary</option>";
+		}
+		echo '</select>';
+
+		$t_bug_id = string_attribute( $p_bug_id );
+		echo "<input type=\"hidden\" name=\"bug_id\" value=\"$t_bug_id\" />\n";
+
+		echo "</form>\n";
+	}
+}
+
+
+/**
  * Print all buttons for view bug pages
  * @param int $p_bug_id
- * @return null
  */
 function html_buttons_view_bug_page( $p_bug_id ) {
 	$t_resolved = config_get( 'bug_resolved_status_threshold' );
+	$t_new = get_enum_id('status', 'new');	
+	$t_progress = get_enum_id('status', 'progress');
+	$t_closed = get_enum_id('status', 'closed');
 	$t_status = bug_get_field( $p_bug_id, 'status' );
 	$t_readonly = bug_is_readonly( $p_bug_id );
 	$t_sticky = config_get( 'set_bug_sticky_threshold' );
 
 	echo '<table><tr class="vcenter">';
@@ -1633,10 +1810,40 @@
 	if ( !$t_readonly || config_get( 'allow_reporter_close' ) ) {
 		echo '<td class="center">';
 		html_button_bug_change_status( $p_bug_id );
 		echo '</td>';
 	}
+	
+	# Action creation and association button (when risk project)
+	if ( 1 == preg_match('/risk/i', project_get_type_management() ) ) {
+		if ( $t_progress <= $t_status && $t_closed > $t_status) {
+			echo '<td class="center">';
+			html_button_relationship_create( $p_bug_id, 'action' );
+			html_button_relationship_associates( $p_bug_id, 'action' );
+			echo '</td>';
+		}
+	}
+	
+	# Decision creation and association button, and risk association (when action project)
+	if ( 1 == preg_match('/action/i', project_get_type_management() ) ) {
+		if ( $t_progress <= $t_status && $t_closed > $t_status) {
+			echo '<td class="center">';
+			html_button_relationship_associate( $p_bug_id, 'risk');
+			html_button_relationship_create( $p_bug_id, 'decision' );
+			html_button_relationship_associates( $p_bug_id, 'decision' );
+			echo '</td>';
+		}
+	}
+	
+	# Action association (when decision project)
+	if ( 1 == preg_match('/decision/i', project_get_type_management() ) ) {
+		if ( $t_progress <= $t_status && $t_closed > $t_status) {
+			echo '<td class="center">';
+			html_button_relationship_associate( $p_bug_id, 'action');
+			echo '</td>';
+		}
+	}
 
 	# MONITOR/UNMONITOR button
 	if( !current_user_is_anonymous() ) {
 		echo '<td class=center">';
 		if( user_is_monitoring_bug( auth_get_current_user_id(), $p_bug_id ) ) {
@@ -1678,13 +1885,19 @@
 	echo '<td class="center">';
 	html_button_bug_move( $p_bug_id );
 	echo '</td>';
 
 	# DELETE button
-	echo '<td class="center">';
-	html_button_bug_delete( $p_bug_id );
-	echo '</td>';
+	if( ('risk' == project_get_type_management() ||
+		'action' == project_get_type_management()||
+		'decision' == project_get_type_management()||
+		'evolution' == project_get_type_management()) 
+		&& $t_new >= $t_status ) {	
+		echo '<td class="center">';
+		html_button_bug_delete( $p_bug_id );
+		echo '</td>';
+	}
 
 	helper_call_custom_function( 'print_bug_view_page_custom_buttons', array( $p_bug_id ) );
 
 	echo '</tr></table>';
 }
diff -rNU5 mantisbt-1.2.5/core/http_api.php mantis_ard/core/http_api.php
--- mantisbt-1.2.5/core/http_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/http_api.php	2013-04-02 09:20:12.000000000 +0200
@@ -16,15 +16,28 @@
 
 /**
  * API for managing HTTP response headers and transactions.
  * @package CoreAPI
  * @subpackage HTTPAPI
- * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net
+ * @copyright Copyright (C) 2002 - 2012  MantisBT Team - mantisbt-dev@lists.sourceforge.net
  * @link http://www.mantisbt.org
  */
 
 /**
+ * Checks to see if script was queried through the HTTPS protocol
+ * @return boolean True if protocol is HTTPS
+ */
+function http_is_protocol_https() {
+	if ( !empty( $_SERVER['HTTP_X_FORWARDED_PROTO'] ) ) {
+		$t_protocol= $_SERVER['HTTP_X_FORWARDED_PROTO'];
+	} else if ( !empty( $_SERVER['HTTPS'] ) ) {
+		$t_protocol = $_SERVER['HTTPS'];
+	}
+	return isset( $t_protocol ) && !empty( $t_protocol ) && ( utf8_strtolower( $t_protocol ) != 'off' );
+}
+
+/**
  * Check to see if the client is using Microsoft Internet Explorer so we can
  * enable quirks and hacky non-standards-compliant workarounds.
  * @return boolean True if Internet Explorer is detected as the user agent
  */
 function is_browser_internet_explorer() {
@@ -123,20 +136,22 @@
 /**
  * Set security headers (frame busting, clickjacking/XSS/CSRF protection).
  */
 function http_security_headers() {
 	if ( !headers_sent() ) {
-		header( 'X-Frame-Options: DENY' );
+		// Needed by mantis is shown inside an iFrame
+		#header( 'X-Frame-Options: DENY' );
 		$t_avatar_img_allow = '';
 		if ( config_get_global( 'show_avatar' ) ) {
-			if ( isset( $_SERVER['HTTPS'] ) && ( utf8_strtolower( $_SERVER['HTTPS'] ) != 'off' ) ) {
+			if ( http_is_protocol_https() ) {
 				$t_avatar_img_allow = "; img-src 'self' https://secure.gravatar.com:443";
 			} else {
 				$t_avatar_img_allow = "; img-src 'self' http://www.gravatar.com:80";
 			}
 		}
-		header( "X-Content-Security-Policy: allow 'self'; options inline-script eval-script$t_avatar_img_allow; frame-ancestors 'none'" );
+		// Needed by mantis is shown inside an iFrame
+		#header( "X-Content-Security-Policy: allow 'self'; options inline-script eval-script$t_avatar_img_allow; frame-ancestors 'none'" );
 	}
 }
 
 /**
  * Load and set any custom headers defined by the site configuration.
diff -rNU5 mantisbt-1.2.5/core/lang_api.php mantis_ard/core/lang_api.php
--- mantisbt-1.2.5/core/lang_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/lang_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -38,11 +38,11 @@
  * @param string $p_lang
  * @param string $p_dir
  * @return null
  */
 function lang_load( $p_lang, $p_dir = null ) {
-	global $g_lang_strings, $g_active_language;
+	global $g_lang_strings, $g_active_language, $t_instance_inc_found;
 
 	$g_active_language = $p_lang;
 	if( isset( $g_lang_strings[$p_lang] ) && is_null( $p_dir ) ) {
 		return;
 	}
@@ -60,21 +60,26 @@
 		if( is_file( $t_lang_dir . 'strings_' . $p_lang . '.txt' ) ) {
 			include_once( $t_lang_dir . 'strings_' . $p_lang . '.txt' );
 		}
 	}
 
+	if ($t_instance_inc_found)
+	{
+		$instance=session_get('project_id');
+		require( BASE_PATH.DIRECTORY_SEPARATOR.'conf-instance'.DIRECTORY_SEPARATOR.'config_status_'.$instance.'.php' );	
+		
+	}
 	# Allow overriding strings declared in the language file.
 	# custom_strings_inc.php can use $g_active_language
 	$t_custom_strings = dirname( dirname( __FILE__ ) ) . DIRECTORY_SEPARATOR . 'custom_strings_inc.php';
 	if( file_exists( $t_custom_strings ) ) {
 		require( $t_custom_strings );
 
 		# this may be loaded multiple times, once per language
 	}
 
 	$t_vars = get_defined_vars();
-
 	foreach( array_keys( $t_vars ) as $t_var ) {
 		$t_lang_var = preg_replace( '/^s_/', '', $t_var );
 		if( $t_lang_var != $t_var ) {
 			$g_lang_strings[$p_lang][$t_lang_var] = $$t_var;
 		}
@@ -276,32 +281,67 @@
 	#  because we don't have a concept of falling back on a language.  The
 	#  language files actually *contain* English strings if none has been
 	#  defined in the correct language
 	# @todo thraxisp - not sure if this is still true. Strings from last language loaded
 	#      may still be in memeory if a new language is loaded.
-
-	if( lang_exists( $p_string, $t_lang ) ) {
-		return $g_lang_strings[$t_lang][$p_string];
+	if( lang_exists( $p_string."_".$t_lang, $t_lang ) ) 
+	{			
+		return replace_issue_word($g_lang_strings[$t_lang][$p_string."_".$t_lang]);		
+	}
+	else if( lang_exists( $p_string, $t_lang ) ) 
+	{
+		return replace_issue_word($g_lang_strings[$t_lang][$p_string]);
+		
 	} else {
 		$t_plugin_current = plugin_get_current();
 		if( !is_null( $t_plugin_current ) ) {
-			lang_load( $t_lang, config_get( 'plugin_path' ) . $t_plugin_current . DIRECTORY_SEPARATOR . 'lang' . DIRECTORY_SEPARATOR );
+			lang_load( $t_lang, config_get( 'plugin_path' ) . $t_plugin_current . DIRECTORY_SEPARATOR . 'lang' . DIRECTORY_SEPARATOR );				
+			
 			if( lang_exists( $p_string, $t_lang ) ) {
-				return $g_lang_strings[$t_lang][$p_string];
+				return replace_issue_word($g_lang_strings[$t_lang][$p_string]);
 			}
 		}
 
 		if( $t_lang == 'english' ) {
 			error_parameters( $p_string );
 			trigger_error( ERROR_LANG_STRING_NOT_FOUND, WARNING );
 			return '';
 		} else {
 
-			# if string is not found in a language other than english, then retry using the english language.
+			# if string is not found in a language other than english, then retry using the english language.			
 			return lang_get( $p_string, 'english' );
+			
+			
+		}
+	}
+}
+
+function replace_issue_word($p_string) {
+	$ret = $p_string;
+	if ( auth_is_user_authenticated() ) {
+		$project_type = project_get_type_management();		
+		if ( false != $project_type ) {
+			$patterns = array('Saisir les détails du rapport', 'de bogue', 'le bogue soumis', 'le bogue', 'ce bogue', 'un bogue', 'bogue', 'Bogue', 'issue', 'Issue');
+			if ( 'risk' == $project_type ) {
+				$replacements = array('Saisir les détails du risque', 'de risque', 'le risque soumis', 'le risque', 'ce risque', 'un risque', 'risque', 'Risque', 'risk', 'Risk');
+				$ret =  str_replace($patterns, $replacements, $p_string);
+			}
+			elseif ( 'action' == $project_type ) {
+				$replacements = array('Saisir les détails de l\'action', 'd\'action', 'l\'action soumise', 'l\'action', 'cette action', 'une action', 'action', 'Action', 'action', 'Action');
+				$ret = str_replace($patterns, $replacements, $p_string);
+			}
+			elseif ( 'decision' == $project_type ) {
+				$replacements = array('Saisir les détails de la décision', 'de décision', 'la décision soumise', 'la décision', 'cette décision', 'une décision', 'décision', 'Décision', 'decision', 'Decision');
+				$ret = str_replace($patterns, $replacements, $p_string);
+			}
+			elseif ( 'evolution' == $project_type ) {
+				$replacements = array('Saisir les détails de l\'évolution', 'd\'évolution', 'l\'évolution soumise', 'l\'évolution', 'cette évolution', 'une évolution', 'évolution', 'Evolution', 'evolution', 'Evolution');
+				$ret = str_replace($patterns, $replacements, $p_string);
+			}
 		}
 	}
+	return $ret;
 }
 
 /**
  * Check the language entry, if found return true, otherwise return false.
  * @param string $p_string
diff -rNU5 mantisbt-1.2.5/core/print_api.php mantis_ard/core/print_api.php
--- mantisbt-1.2.5/core/print_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/print_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -218,13 +218,12 @@
 	if( null === $p_project_id ) {
 		$p_project_id = helper_get_current_project();
 	}
 
 	$t_users = project_get_all_user_rows( $p_project_id, $p_access );
-
+	
 	# handles ALL_PROJECTS case
-
 	$t_display = array();
 	$t_sort = array();
 	$t_show_realname = ( ON == config_get( 'show_realname' ) );
 	$t_sort_by_last_name = ( ON == config_get( 'sort_by_last_name' ) );
 	foreach( $t_users as $t_user ) {
@@ -446,11 +445,10 @@
 function print_assign_to_option_list( $p_user_id = '', $p_project_id = null, $p_threshold = null ) {
 
 	if( null === $p_threshold ) {
 		$p_threshold = config_get( 'handle_bug_threshold' );
 	}
-
 	print_user_option_list( $p_user_id, $p_project_id, $p_threshold );
 }
 
 /**
  * List projects that the current user has access to.
@@ -462,11 +460,13 @@
  * @return void
  */
 function print_project_option_list( $p_project_id = null, $p_include_all_projects = true, $p_filter_project_id = null, $p_trace = false ) {
 	$t_project_ids = current_user_get_accessible_projects();
 	project_cache_array_rows( $t_project_ids );
-
+	
+	$p_include_all_projects = false;
+	
 	if( $p_include_all_projects ) {
 		echo '<option value="' . ALL_PROJECTS . '"';
 		check_selected( $p_project_id, ALL_PROJECTS );
 		echo '>' . lang_get( 'all_projects' ) . '</option>' . "\n";
 	}
@@ -651,11 +651,11 @@
 
 # --------------------
 # Since categories can be orphaned we need to grab all unique instances of category
 # We check in the project category table and in the bug table
 # We put them all in one array and make sure the entries are unique
-function print_category_option_list( $p_category_id = 0, $p_project_id = null ) {
+function print_category_option_list( $p_category_id = 0, $p_project_id = null, $p_inherit = null, $p_other = true ) {
 	$t_category_table = db_get_table( 'mantis_category_table' );
 	$t_project_table = db_get_table( 'mantis_project_table' );
 
 	if( null === $p_project_id ) {
 		$t_project_id = helper_get_current_project();
@@ -671,12 +671,20 @@
 			echo "<option value=\"0\"", check_selected( $p_category_id, 0 ), '>';
 			echo string_attribute( lang_get( 'select_option' ) ), '</option>';
 		}
 	}
 
-	$cat_arr = category_get_all_rows( $t_project_id, /* inherit */ null, /* sortByProject */ true );
+	$cat_arr = category_get_all_rows( $t_project_id, /* inherit */ $p_inherit, /* sortByProject */ true );
 
+	if ( !$p_other ) {
+		foreach ( $cat_arr as $key => $t_category_row ) {
+       		if ( 'others' == $t_category_row['name'] ) {
+				unset($cat_arr[$key]);
+			}
+		}
+	}
+	
 	foreach( $cat_arr as $t_category_row ) {
 		$t_category_id = $t_category_row['id'];
 		echo "<option value=\"$t_category_id\"";
 		check_selected( $p_category_id, $t_category_id );
 		echo '>' . string_attribute( category_full_name( $t_category_id, $t_category_row['project_id'] != $t_project_id ) ) . '</option>';
@@ -826,33 +834,33 @@
 }
 
 # select the proper enum values based on the input parameter
 # $p_enum_name - name of enumeration (eg: status)
 # $p_val: current value
-function print_enum_string_option_list( $p_enum_name, $p_val = 0 ) {
+function print_enum_string_option_list( $p_enum_name, $p_val = 0, $p_by_french_or_english = false ) {
 	$t_config_var_name = $p_enum_name . '_enum_string';
 	$t_config_var_value = config_get( $t_config_var_name );
-
+	
 	$t_enum_values = MantisEnum::getValues( $t_config_var_value );
-
+	
 	foreach ( $t_enum_values as $t_key ) {
-		$t_elem2 = get_enum_element( $p_enum_name, $t_key );
+		$t_elem2 = get_enum_element( $p_enum_name, $t_key, $p_by_french_or_english );
 
 		echo '<option value="' . $t_key . '"';
 		check_selected( $p_val, $t_key );
-		echo '>' . $t_elem2 . '</option>';
+		echo '>' . $t_elem2 .'</option>';
 	}
 }
 
 # Select the proper enum values for status based on workflow
 # or the input parameter if workflows are not used
 # $p_enum_name : name of enumeration (eg: status)
 # $p_current_value : current value
 function get_status_option_list( $p_user_auth = 0, $p_current_value = 0, $p_show_current = true, $p_add_close = false, $p_project_id = ALL_PROJECTS ) {
 	$t_config_var_value = config_get( 'status_enum_string', null, null, $p_project_id );
 	$t_enum_workflow = config_get( 'status_enum_workflow', null, null, $p_project_id );
-
+	
 	if( count( $t_enum_workflow ) < 1 ) {
 		# workflow not defined, use default enum
 		$t_enum_values = MantisEnum::getValues( $t_config_var_value );
 	} else {
 		# workflow defined - find allowed states
@@ -932,40 +940,67 @@
 		check_selected( $p_val, $t_enum_value );
 		echo '>' . $t_access_level . '</option>';
 	}
 }
 
-function print_language_option_list( $p_language ) {
-	$t_arr = config_get( 'language_choices_arr' );
+function print_language_option_list( $p_language, $p_hidden_languages = null) {
+	if ( $p_hidden_languages != null ) {
+		$t_arr_custom = array_diff(config_get( 'language_choices_arr' ), $p_hidden_languages);
+		$i=0;
+		foreach ( $t_arr_custom as $key => $value ) {
+       		$t_arr[$i] = $value;
+       		$i++;
+		}
+	}
+	else {
+		
+		$t_arr = config_get( 'language_choices_arr' );
+	}
 	$enum_count = count( $t_arr );
 	for( $i = 0;$i < $enum_count;$i++ ) {
 		$t_language = string_attribute( $t_arr[$i] );
 		echo '<option value="' . $t_language . '"';
 		check_selected( $t_language, $p_language );
 		echo '>' . $t_language . '</option>';
 	}
 }
 
 # @@@ preliminary support for multiple bug actions.
-function print_all_bug_action_option_list() {
-	$commands = array(
-		'MOVE' => lang_get( 'actiongroup_menu_move' ),
-		'COPY' => lang_get( 'actiongroup_menu_copy' ),
-		'ASSIGN' => lang_get( 'actiongroup_menu_assign' ),
-		'CLOSE' => lang_get( 'actiongroup_menu_close' ),
-		'DELETE' => lang_get( 'actiongroup_menu_delete' ),
-		'RESOLVE' => lang_get( 'actiongroup_menu_resolve' ),
-		'SET_STICKY' => lang_get( 'actiongroup_menu_set_sticky' ),
-		'UP_PRIOR' => lang_get( 'actiongroup_menu_update_priority' ),
-		'EXT_UPDATE_SEVERITY' => lang_get( 'actiongroup_menu_update_severity' ),
-		'UP_STATUS' => lang_get( 'actiongroup_menu_update_status' ),
-		'UP_CATEGORY' => lang_get( 'actiongroup_menu_update_category' ),
-		'VIEW_STATUS' => lang_get( 'actiongroup_menu_update_view_status' ),
-		'EXT_UPDATE_PRODUCT_BUILD' => lang_get( 'actiongroup_menu_update_product_build' ),
-		'EXT_ADD_NOTE' => lang_get( 'actiongroup_menu_add_note' ),
-		'EXT_ATTACH_TAGS' => lang_get( 'actiongroup_menu_attach_tags' ),
-	);
+function print_all_bug_action_option_list($management_way = false) {
+	if ( !$management_way ) {
+		$commands = array(
+			'MOVE' => lang_get( 'actiongroup_menu_move' ),
+			'COPY' => lang_get( 'actiongroup_menu_copy' ),
+			'ASSIGN' => lang_get( 'actiongroup_menu_assign' ),
+			'CLOSE' => lang_get( 'actiongroup_menu_close' ),
+			'DELETE' => lang_get( 'actiongroup_menu_delete' ),
+			'RESOLVE' => lang_get( 'actiongroup_menu_resolve' ),
+			'SET_STICKY' => lang_get( 'actiongroup_menu_set_sticky' ),
+			'UP_PRIOR' => lang_get( 'actiongroup_menu_update_priority' ),
+			'EXT_UPDATE_SEVERITY' => lang_get( 'actiongroup_menu_update_severity' ),
+			'UP_STATUS' => lang_get( 'actiongroup_menu_update_status' ),
+			'UP_CATEGORY' => lang_get( 'actiongroup_menu_update_category' ),
+			'VIEW_STATUS' => lang_get( 'actiongroup_menu_update_view_status' ),
+			'EXT_UPDATE_PRODUCT_BUILD' => lang_get( 'actiongroup_menu_update_product_build' ),
+			'EXT_ADD_NOTE' => lang_get( 'actiongroup_menu_add_note' ),
+			'EXT_ATTACH_TAGS' => lang_get( 'actiongroup_menu_attach_tags' ),
+		);
+	}
+	else {
+		$commands = array(
+			'ASSIGN' => lang_get( 'actiongroup_menu_assign' ),
+			'SET_STICKY' => lang_get( 'actiongroup_menu_set_sticky' ),
+			'UP_PRIOR' => lang_get( 'actiongroup_menu_update_priority' ),
+			'EXT_UPDATE_SEVERITY' => lang_get( 'actiongroup_menu_update_severity' ),
+			'UP_STATUS' => lang_get( 'actiongroup_menu_update_status' ),
+			'UP_CATEGORY' => lang_get( 'actiongroup_menu_update_category' ),
+			'VIEW_STATUS' => lang_get( 'actiongroup_menu_update_view_status' ),
+			'EXT_UPDATE_PRODUCT_BUILD' => lang_get( 'actiongroup_menu_update_product_build' ),
+			'EXT_ADD_NOTE' => lang_get( 'actiongroup_menu_add_note' ),
+			'EXT_ATTACH_TAGS' => lang_get( 'actiongroup_menu_attach_tags' ),
+		);
+	}
 
 	$t_project_id = helper_get_current_project();
 
 	if( ALL_PROJECTS != $t_project_id ) {
 		$t_user_id = auth_get_current_user_id();
@@ -1591,10 +1626,14 @@
 	echo '<a href="', htmlspecialchars( $p_feed_url ), '" title="', $p_title, '"><img src="', $t_path, '/images/', 'rss.png" width="16" height="16" border="0" alt="', $p_title, '" /></a>';
 }
 
 # Prints the recently visited issues.
 function print_recently_visited() {
+	if ( ARD ) {
+		return;
+	}
+	
 	if( !last_visited_enabled() ) {
 		return;
 	}
 
 	$t_ids = last_visited_get_array();
@@ -1611,11 +1650,12 @@
 			echo ', ';
 		} else {
 			$t_first = false;
 		}
 
-		echo string_get_bug_view_link( $t_id );
+		echo string_get_bug_view_link( $t_id, null, true, false, true );
+	
 	}
 	echo '</small></div>';
 }
 
 # print a dropdown box from input array
@@ -1656,11 +1696,11 @@
 	$t_attachments = file_get_visible_attachments( $p_bug_id );
 	$t_attachments_count = count( $t_attachments );
 
 	$i = 0;
 	$image_previewed = false;
-
+	
 	foreach ( $t_attachments as $t_attachment ) {
 		$t_file_display_name = string_display_line( $t_attachment['display_name'] );
 		$t_filesize = number_format( $t_attachment['size'] );
 		$t_date_added = date( config_get( 'normal_date_format' ), $t_attachment['date_added'] );
 
diff -rNU5 mantisbt-1.2.5/core/project_api.php mantis_ard/core/project_api.php
--- mantisbt-1.2.5/core/project_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/project_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -1,6 +1,7 @@
 <?php
+
 # MantisBT - a php based bugtracking system
 
 # MantisBT is free software: you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation, either version 2 of the License, or
@@ -23,115 +24,117 @@
  */
 
 /**
  * requires category_api
  */
-require_once( 'category_api.php' );
+require_once('category_api.php');
 /**
  * requires version_api
  */
-require_once( 'version_api.php' );
+require_once ('version_api.php');
 /**
  * requires bug_api
  */
-require_once( 'bug_api.php' );
+require_once ('bug_api.php');
 /**
  * requires file_api
  */
-require_once( 'file_api.php' );
+require_once ('file_api.php');
 /**
  * requires news_api
  */
-require_once( 'news_api.php' );
+require_once ('news_api.php');
 
 # ## Project API ###
 # ===================================
 # Caching
 # ===================================
 # ########################################
 # SECURITY NOTE: cache globals are initialized here to prevent them
 #   being spoofed if register_globals is turned on
 
-$g_cache_project = array();
-$g_cache_project_missing = array();
+$g_cache_project = array ();
+$g_cache_project_missing = array ();
 $g_cache_project_all = false;
 
 # --------------------
 # Cache a project row if necessary and return the cached copy
 #  If the second parameter is true (default), trigger an error
 #  if the project can't be found.  If the second parameter is
 #  false, return false if the project can't be found.
-function project_cache_row( $p_project_id, $p_trigger_errors = true ) {
+function project_cache_row($p_project_id, $p_trigger_errors = true) {
 	global $g_cache_project, $g_cache_project_missing;
 
-	if( $p_project_id == ALL_PROJECTS ) {
+	if ($p_project_id == ALL_PROJECTS) {
 		return false;
 	}
 
-	if( isset( $g_cache_project[(int) $p_project_id] ) ) {
+	if (isset ($g_cache_project[(int) $p_project_id])) {
 		return $g_cache_project[(int) $p_project_id];
 	}
-	else if( isset( $g_cache_project_missing[(int) $p_project_id] ) ) {
+	else if (isset ($g_cache_project_missing[(int) $p_project_id])) {
 		return false;
 	}
 
-	$c_project_id = db_prepare_int( $p_project_id );
-	$t_project_table = db_get_table( 'mantis_project_table' );
+	$c_project_id = db_prepare_int($p_project_id);
+	$t_project_table = db_get_table('mantis_project_table');
 
 	$query = "SELECT *
-				  FROM $t_project_table
-				  WHERE id=" . db_param();
-	$result = db_query_bound( $query, Array( $c_project_id ) );
+					  FROM $t_project_table
+					  WHERE id=" . db_param();
+	$result = db_query_bound($query, Array (
+		$c_project_id
+	));
 
-	if( 0 == db_num_rows( $result ) ) {
+	if (0 == db_num_rows($result)) {
 		$g_cache_project_missing[(int) $p_project_id] = true;
 
-		if( $p_trigger_errors ) {
-			error_parameters( $p_project_id );
-			trigger_error( ERROR_PROJECT_NOT_FOUND, ERROR );
+		if ($p_trigger_errors) {
+			error_parameters($p_project_id);
+			trigger_error(ERROR_PROJECT_NOT_FOUND, ERROR);
 		} else {
 			return false;
 		}
 	}
 
-	$row = db_fetch_array( $result );
+	$row = db_fetch_array($result);
 
 	$g_cache_project[(int) $p_project_id] = $row;
 
 	return $row;
 }
 
-function project_cache_array_rows( $p_project_id_array ) {
+function project_cache_array_rows($p_project_id_array) {
 	global $g_cache_project, $g_cache_project_missing;
 
-	$c_project_id_array = array();
+	$c_project_id_array = array ();
 
-	foreach( $p_project_id_array as $t_project_id ) {
-		if( !isset( $g_cache_project[(int) $t_project_id] ) && !isset( $g_cache_project_missing[(int) $t_project_id] ) ) {
+	foreach ($p_project_id_array as $t_project_id) {
+		if (!isset ($g_cache_project[(int) $t_project_id]) && !isset ($g_cache_project_missing[(int) $t_project_id])) {
 			$c_project_id_array[] = (int) $t_project_id;
 		}
 	}
 
-	if( empty( $c_project_id_array ) ) {
+	if (empty ($c_project_id_array)) {
 		return;
 	}
 
-	$t_project_table = db_get_table( 'mantis_project_table' );
+	$t_project_table = db_get_table('mantis_project_table');
 
 	$query = "SELECT *
-				  FROM $t_project_table
-				  WHERE id IN (" . implode( ',', $c_project_id_array ) . ')';
-	$result = db_query_bound( $query );
+					  FROM $t_project_table
+					  WHERE id IN (" . implode(',', $c_project_id_array) . ')';
+	$result = db_query_bound($query);
 
-	$t_projects_found = array();
-	while( $row = db_fetch_array( $result ) ) {
+	$t_projects_found = array ();
+	while ($row = db_fetch_array($result)) {
 		$g_cache_project[(int) $row['id']] = $row;
 		$t_projects_found[(int) $row['id']] = true;
 	}
 
-	foreach ( $c_project_id_array as $c_project_id ) {
-		if ( !isset( $t_projects_found[$c_project_id] ) ) {
+	foreach ($c_project_id_array as $c_project_id) {
+		if (!isset ($t_projects_found[$c_project_id])) {
 			$g_cache_project_missing[(int) $c_project_id] = true;
 		}
 	}
 
 	return;
@@ -140,19 +143,19 @@
 # --------------------
 # Cache all project rows and return an array of them
 function project_cache_all() {
 	global $g_cache_project, $g_cache_project_all;
 
-	if( !$g_cache_project_all ) {
-		$t_project_table = db_get_table( 'mantis_project_table' );
+	if (!$g_cache_project_all) {
+		$t_project_table = db_get_table('mantis_project_table');
 
 		$query = "SELECT *
-					  FROM $t_project_table";
-		$result = db_query_bound( $query );
-		$count = db_num_rows( $result );
-		for( $i = 0;$i < $count;$i++ ) {
-			$row = db_fetch_array( $result );
+							  FROM $t_project_table";
+		$result = db_query_bound($query);
+		$count = db_num_rows($result);
+		for ($i = 0; $i < $count; $i++) {
+			$row = db_fetch_array($result);
 
 			$g_cache_project[(int) $row['id']] = $row;
 		}
 
 		$g_cache_project_all = true;
@@ -160,20 +163,20 @@
 
 	return $g_cache_project;
 }
 
 # Clear the project cache (or just the given id if specified)
-function project_clear_cache( $p_project_id = null ) {
+function project_clear_cache($p_project_id = null) {
 	global $g_cache_project, $g_cache_project_missing, $g_cache_project_all;
 
-	if( null === $p_project_id ) {
-		$g_cache_project = array();
-		$g_cache_project_missing = array();
+	if (null === $p_project_id) {
+		$g_cache_project = array ();
+		$g_cache_project_missing = array ();
 		$g_cache_project_all = false;
 	} else {
-		unset( $g_cache_project[(int) $p_project_id] );
-		unset( $g_cache_project_missing[(int) $p_project_id] );
+		unset ($g_cache_project[(int) $p_project_id]);
+		unset ($g_cache_project_missing[(int) $p_project_id]);
 		$g_cache_project_all = false;
 	}
 
 	return true;
 }
@@ -181,55 +184,57 @@
 # ===================================
 # Boolean queries and ensures
 # ===================================
 # check to see if project exists by id
 # return true if it does, false otherwise
-function project_exists( $p_project_id ) {
+function project_exists($p_project_id) {
 
 	# we're making use of the caching function here.  If we
 	#  succeed in caching the project then it exists and is
 	#  now cached for use by later function calls.  If we can't
 	#  cache it we return false.
-	if( false == project_cache_row( $p_project_id, false ) ) {
+	if (false == project_cache_row($p_project_id, false)) {
 		return false;
 	} else {
 		return true;
 	}
 }
 
 # check to see if project exists by id
 # if it doesn't exist then error
 #  otherwise let execution continue undisturbed
-function project_ensure_exists( $p_project_id ) {
-	if( !project_exists( $p_project_id ) ) {
-		error_parameters( $p_project_id );
-		trigger_error( ERROR_PROJECT_NOT_FOUND, ERROR );
+function project_ensure_exists($p_project_id) {
+	if (!project_exists($p_project_id)) {
+		error_parameters($p_project_id);
+		trigger_error(ERROR_PROJECT_NOT_FOUND, ERROR);
 	}
 }
 
 # check to see if project exists by name
-function project_is_name_unique( $p_name ) {
-	$t_project_table = db_get_table( 'mantis_project_table' );
+function project_is_name_unique($p_name) {
+	$t_project_table = db_get_table('mantis_project_table');
 
 	$query = "SELECT COUNT(*)
-				 FROM $t_project_table
-				 WHERE name=" . db_param();
-	$result = db_query_bound( $query, Array( $p_name ) );
+					 FROM $t_project_table
+					 WHERE name=" . db_param();
+	$result = db_query_bound($query, Array (
+		$p_name
+	));
 
-	if( 0 == db_result( $result ) ) {
+	if (0 == db_result($result)) {
 		return true;
 	} else {
 		return false;
 	}
 }
 
 # check to see if project exists by id
 # if it doesn't exist then error
 #  otherwise let execution continue undisturbed
-function project_ensure_name_unique( $p_name ) {
-	if( !project_is_name_unique( $p_name ) ) {
-		trigger_error( ERROR_PROJECT_NAME_NOT_UNIQUE, ERROR );
+function project_ensure_name_unique($p_name) {
+	if (!project_is_name_unique($p_name)) {
+		trigger_error(ERROR_PROJECT_NAME_NOT_UNIQUE, ERROR);
 	}
 }
 
 # check to see if the user/project combo already exists
 # returns true is duplicate is found, otherwise false
@@ -250,10 +255,11 @@
 	} else {
 		return true;
 	}
 }
 
+
 # =======================================
 # Creation / Deletion / Updating / Copy
 # =======================================
 
 # Create a new project
@@ -285,10 +291,11 @@
 
 	# return the id of the new project
 	return db_insert_id( $t_project_table );
 }
 
+
 # --------------------
 # Delete a project
 function project_delete( $p_project_id ) {
 	$t_email_notifications = config_get( 'enable_email_notification' );
 
@@ -333,21 +340,22 @@
 	$query = "DELETE FROM $t_project_table
 				  WHERE id=" . db_param();
 
 	db_query_bound( $query, Array( $c_project_id ) );
 
+
 	config_set_cache( 'enable_email_notification', $t_email_notifications, CONFIG_TYPE_INT );
 
 	project_clear_cache( $p_project_id );
 
 	# db_query errors on failure so:
 	return true;
 }
 
 # --------------------
 # Update a project
-function project_update( $p_project_id, $p_name, $p_description, $p_status, $p_view_state, $p_file_path, $p_enabled, $p_inherit_global ) {
+function project_update($p_project_id, $p_name, $p_description, $p_status, $p_view_state, $p_file_path, $p_enabled, $p_inherit_global) {
 
 	$p_project_id = (int) $p_project_id;
 	$c_enabled = db_prepare_bool( $p_enabled );
 	$c_inherit_global = db_prepare_bool( $p_inherit_global );
 
@@ -378,118 +386,127 @@
 					description=" . db_param() . ",
 					inherit_global=" . db_param() . "
 				  WHERE id=" . db_param();
 	db_query_bound( $query, Array( $p_name, (int) $p_status, $c_enabled, (int) $p_view_state, $p_file_path, $p_description, $c_inherit_global, $p_project_id ) );
 
+
 	project_clear_cache( $p_project_id );
 
 	# db_query errors on failure so:
 	return true;
 }
 
 # Copy custom fields
-function project_copy_custom_fields( $p_destination_id, $p_source_id ) {
-	$t_custom_field_ids = custom_field_get_linked_ids( $p_source_id );
-	foreach( $t_custom_field_ids as $t_custom_field_id ) {
-		if( !custom_field_is_linked( $t_custom_field_id, $p_destination_id ) ) {
-			custom_field_link( $t_custom_field_id, $p_destination_id );
-			$t_sequence = custom_field_get_sequence( $t_custom_field_id, $p_source_id );
-			custom_field_set_sequence( $t_custom_field_id, $p_destination_id, $t_sequence );
+function project_copy_custom_fields($p_destination_id, $p_source_id) {
+	$t_custom_field_ids = custom_field_get_linked_ids($p_source_id);
+	foreach ($t_custom_field_ids as $t_custom_field_id) {
+		if (!custom_field_is_linked($t_custom_field_id, $p_destination_id)) {
+			custom_field_link($t_custom_field_id, $p_destination_id);
+			$t_sequence = custom_field_get_sequence($t_custom_field_id, $p_source_id);
+			custom_field_set_sequence($t_custom_field_id, $p_destination_id, $t_sequence);
 		}
 	}
 }
 
 # ===================================
 # Data Access
 # ===================================
 # Get the id of the project with the specified name
-function project_get_id_by_name( $p_project_name ) {
-	$t_project_table = db_get_table( 'mantis_project_table' );
+function project_get_id_by_name($p_project_name) {
+	$t_project_table = db_get_table('mantis_project_table');
 
 	$query = "SELECT id FROM $t_project_table WHERE name = " . db_param();
-	$t_result = db_query_bound( $query, Array( $p_project_name ), 1 );
+	$t_result = db_query_bound($query, Array (
+		$p_project_name
+	), 1);
 
-	if( db_num_rows( $t_result ) == 0 ) {
+	if (db_num_rows($t_result) == 0) {
 		return 0;
 	} else {
-		return db_result( $t_result );
+		return db_result($t_result);
 	}
 }
 
 # Return the row describing the given project
-function project_get_row( $p_project_id, $p_trigger_errors = true ) {
-	return project_cache_row( $p_project_id, $p_trigger_errors );
+function project_get_row($p_project_id, $p_trigger_errors = true) {
+	return project_cache_row($p_project_id, $p_trigger_errors);
 }
 
 # Return all rows describing all projects
 function project_get_all_rows() {
 	return project_cache_all();
 }
 
 # Return the specified field of the specified project
-function project_get_field( $p_project_id, $p_field_name, $p_trigger_errors = true ) {
-	$row = project_get_row( $p_project_id, $p_trigger_errors );
+function project_get_field($p_project_id, $p_field_name, $p_trigger_errors = true) {
+	$row = project_get_row($p_project_id, $p_trigger_errors);
 
-	if( isset( $row[$p_field_name] ) ) {
+	if (isset ($row[$p_field_name])) {
 		return $row[$p_field_name];
-	} else if ( $p_trigger_errors ) {
-		error_parameters( $p_field_name );
-		trigger_error( ERROR_DB_FIELD_NOT_FOUND, WARNING );
-	}
+	} else
+		if ($p_trigger_errors) {
+			error_parameters($p_field_name);
+			trigger_error(ERROR_DB_FIELD_NOT_FOUND, WARNING);
+		}
 
 	return '';
 }
 
 # Return the name of the project
 # Handles ALL_PROJECTS by returning the internationalized string for All Projects
-function project_get_name( $p_project_id, $p_trigger_errors = true ) {
-	if( ALL_PROJECTS == $p_project_id ) {
-		return lang_get( 'all_projects' );
+function project_get_name($p_project_id, $p_trigger_errors = true) {
+	if (ALL_PROJECTS == $p_project_id) {
+		return lang_get('all_projects');
 	} else {
-		return project_get_field( $p_project_id, 'name', $p_trigger_errors );
+		return project_get_field($p_project_id, 'name', $p_trigger_errors);
 	}
 }
 
 # Return the user's local (overridden) access level on the project or false
 #  if the user is not listed on the project
-function project_get_local_user_access_level( $p_project_id, $p_user_id ) {
+function project_get_local_user_access_level($p_project_id, $p_user_id) {
 	$p_project_id = (int) $p_project_id;
 
-	if( ALL_PROJECTS == $p_project_id ) {
+	if (ALL_PROJECTS == $p_project_id) {
 		return false;
 	}
 
-	$t_project_user_list_table = db_get_table( 'mantis_project_user_list_table' );
+	$t_project_user_list_table = db_get_table('mantis_project_user_list_table');
 
 	$query = "SELECT access_level
-				  FROM $t_project_user_list_table
-				  WHERE user_id=" . db_param() . " AND project_id=" . db_param();
-	$result = db_query_bound( $query, Array( (int) $p_user_id, $p_project_id ) );
+					  FROM $t_project_user_list_table
+					  WHERE user_id=" . db_param() . " AND project_id=" . db_param();
+	$result = db_query_bound($query, Array (
+		(int) $p_user_id,
+		$p_project_id
+	));
 
-	if( db_num_rows( $result ) > 0 ) {
-		return db_result( $result );
+	if (db_num_rows($result) > 0) {
+		return db_result($result);
 	} else {
 		return false;
 	}
 }
 
 # return the descriptor holding all the info from the project user list
 # for the specified project
-function project_get_local_user_rows( $p_project_id ) {
-	$t_project_user_list_table = db_get_table( 'mantis_project_user_list_table' );
+function project_get_local_user_rows($p_project_id) {
+	$t_project_user_list_table = db_get_table('mantis_project_user_list_table');
 
 	$query = "SELECT *
-				FROM $t_project_user_list_table
-				WHERE project_id=" . db_param();
+					FROM $t_project_user_list_table
+					WHERE project_id=" . db_param();
 
-	$result = db_query_bound( $query, Array( (int) $p_project_id ) );
+	$result = db_query_bound($query, Array (
+		(int) $p_project_id
+	));
 
-	$t_user_rows = array();
-	$t_row_count = db_num_rows( $result );
+	$t_user_rows = array ();
+	$t_row_count = db_num_rows($result);
 
-	for( $i = 0;$i < $t_row_count;$i++ ) {
-		array_push( $t_user_rows, db_fetch_array( $result ) );
+	for ($i = 0; $i < $t_row_count; $i++) {
+		array_push($t_user_rows, db_fetch_array($result));
 	}
 
 	return $t_user_rows;
 }
 
@@ -497,198 +514,215 @@
 # For each user we have 'id', 'username', and 'access_level' (overall access level)
 # If the second parameter is given, return only users with an access level
 #  higher than the given value.
 # if the first parameter is given as 'ALL_PROJECTS', return the global access level (without
 # any reference to the specific project
-function project_get_all_user_rows( $p_project_id = ALL_PROJECTS, $p_access_level = ANYBODY, $p_include_global_users = true ) {
-	$c_project_id = db_prepare_int( $p_project_id );
+function project_get_all_user_rows($p_project_id = ALL_PROJECTS, $p_access_level = ANYBODY, $p_include_global_users = true) {
+	$c_project_id = db_prepare_int($p_project_id);
 
 	# Optimization when access_level is NOBODY
-	if( NOBODY == $p_access_level ) {
-		return array();
+	if (NOBODY == $p_access_level) {
+		return array ();
 	}
 
-	$t_user_table = db_get_table( 'mantis_user_table' );
-	$t_project_user_list_table = db_get_table( 'mantis_project_user_list_table' );
-	$t_project_table = db_get_table( 'mantis_project_table' );
+	$t_user_table = db_get_table('mantis_user_table');
+	$t_project_user_list_table = db_get_table('mantis_project_user_list_table');
+	$t_project_table = db_get_table('mantis_project_table');
 
 	$t_on = ON;
-	$t_users = array();
+	$t_users = array ();
 
 	$t_global_access_level = $p_access_level;
-	if( $c_project_id != ALL_PROJECTS && $p_include_global_users ) {
+	if ($c_project_id != ALL_PROJECTS && $p_include_global_users) {
 
 		# looking for specific project
-		if( VS_PRIVATE == project_get_field( $p_project_id, 'view_state' ) ) {
+		if (VS_PRIVATE == project_get_field($p_project_id, 'view_state')) {
 			/** @todo (thraxisp) this is probably more complex than it needs to be
 			 * When a new project is created, those who meet 'private_project_threshold' are added
 			 *  automatically, but don't have an entry in project_user_list_table.
 			 *  if they did, you would not have to add global levels.
 			 */
-			$t_private_project_threshold = config_get( 'private_project_threshold' );
-			if( is_array( $t_private_project_threshold ) ) {
-				if( is_array( $p_access_level ) ) {
+			$t_private_project_threshold = config_get('private_project_threshold');
+			if (is_array($t_private_project_threshold)) {
+				if (is_array($p_access_level)) {
 					# both private threshold and request are arrays, use intersection
-					$t_global_access_level = array_intersect( $p_access_level, $t_private_project_threshold );
+					$t_global_access_level = array_intersect($p_access_level, $t_private_project_threshold);
 				} else {
 					# private threshold is an array, but request is a number, use values in threshold higher than request
-					$t_global_access_level = array();
-					foreach( $t_private_project_threshold as $t_threshold ) {
-						if( $p_access_level <= $t_threshold ) {
+					$t_global_access_level = array ();
+					foreach ($t_private_project_threshold as $t_threshold) {
+						if ($p_access_level <= $t_threshold) {
 							$t_global_access_level[] = $t_threshold;
 						}
 					}
 				}
 			} else {
-				if( is_array( $p_access_level ) ) {
+				if (is_array($p_access_level)) {
 					// private threshold is a number, but request is an array, use values in request higher than threshold
-					$t_global_access_level = array();
-					foreach( $p_access_level as $t_threshold ) {
-						if( $t_threshold >= $t_private_project_threshold ) {
+					$t_global_access_level = array ();
+					foreach ($p_access_level as $t_threshold) {
+						if ($t_threshold >= $t_private_project_threshold) {
 							$t_global_access_level[] = $t_threshold;
 						}
 					}
 				} else {
 					// both private threshold and request are numbers, use maximum
-					$t_global_access_level = max( $p_access_level, $t_private_project_threshold );
+					$t_global_access_level = max($p_access_level, $t_private_project_threshold);
 				}
 			}
 		}
 	}
 
-	if( is_array( $t_global_access_level ) ) {
-		if( 0 == count( $t_global_access_level ) ) {
+	if (is_array($t_global_access_level)) {
+		if (0 == count($t_global_access_level)) {
 			$t_global_access_clause = '>= ' . NOBODY . ' ';
-		} else if( 1 == count( $t_global_access_level ) ) {
-			$t_global_access_clause = '= ' . array_shift( $t_global_access_level ) . ' ';
-		} else {
-			$t_global_access_clause = 'IN (' . implode( ',', $t_global_access_level ) . ')';
-		}
+		} else
+			if (1 == count($t_global_access_level)) {
+				$t_global_access_clause = '= ' . array_shift($t_global_access_level) . ' ';
+			} else {
+				$t_global_access_clause = 'IN (' . implode(',', $t_global_access_level) . ')';
+			}
 	} else {
 		$t_global_access_clause = ">= $t_global_access_level ";
 	}
 
-	if( $p_include_global_users ) {
+	if ($p_include_global_users) {
 		$query = "SELECT id, username, realname, access_level
-				FROM $t_user_table
-				WHERE enabled = " . db_param() . "
-					AND access_level $t_global_access_clause";
-
-		$result = db_query_bound( $query, Array( $t_on ) );
-		$t_row_count = db_num_rows( $result );
-		for( $i = 0;$i < $t_row_count;$i++ ) {
-			$row = db_fetch_array( $result );
+						FROM $t_user_table
+						WHERE enabled = " . db_param() . "
+							AND access_level $t_global_access_clause";
+
+		$result = db_query_bound($query, Array (
+			$t_on
+		));
+		$t_row_count = db_num_rows($result);
+		for ($i = 0; $i < $t_row_count; $i++) {
+			$row = db_fetch_array($result);
 			$t_users[$row['id']] = $row;
 		}
 	}
 
-	if( $c_project_id != ALL_PROJECTS ) {
+	if ($c_project_id != ALL_PROJECTS) {
 
 		// Get the project overrides
 		$query = "SELECT u.id, u.username, u.realname, l.access_level
-				FROM $t_project_user_list_table l, $t_user_table u
-				WHERE l.user_id = u.id
-				AND u.enabled = " . db_param() . "
-				AND l.project_id = " . db_param();
-
-		$result = db_query_bound( $query, Array( $t_on, $c_project_id ) );
-		$t_row_count = db_num_rows( $result );
-		for( $i = 0;$i < $t_row_count;$i++ ) {
-			$row = db_fetch_array( $result );
-			if( is_array( $p_access_level ) ) {
-				$t_keep = in_array( $row['access_level'], $p_access_level );
+						FROM $t_project_user_list_table l, $t_user_table u
+						WHERE l.user_id = u.id
+						AND u.enabled = " . db_param() . "
+						AND l.project_id = " . db_param();
+
+		$result = db_query_bound($query, Array (
+			$t_on,
+			$c_project_id
+		));
+		$t_row_count = db_num_rows($result);
+		for ($i = 0; $i < $t_row_count; $i++) {
+			$row = db_fetch_array($result);
+			if (is_array($p_access_level)) {
+				$t_keep = in_array($row['access_level'], $p_access_level);
 			} else {
 				$t_keep = $row['access_level'] >= $p_access_level;
 			}
 
-			if( $t_keep ) {
+			if ($t_keep) {
 				$t_users[$row['id']] = $row;
 			} else {
 				# If user's overridden level is lower than required, so remove
 				#  them from the list if they were previously there
-				unset( $t_users[$row['id']] );
+				unset ($t_users[$row['id']]);
 			}
 		}
 	}
 
-	user_cache_array_rows( array_keys( $t_users ) );
+	user_cache_array_rows(array_keys($t_users));
 
-	return array_values( $t_users );
+	return array_values($t_users);
 }
 
 # ===================================
 # Data Modification
 # ===================================
 # add user with the specified access level to a project
-function project_add_user( $p_project_id, $p_user_id, $p_access_level ) {
-	$t_project_user_list_table = db_get_table( 'mantis_project_user_list_table' );
+function project_add_user($p_project_id, $p_user_id, $p_access_level) {
+	$t_project_user_list_table = db_get_table('mantis_project_user_list_table');
 
-	$c_project_id = db_prepare_int( $p_project_id );
-	$c_user_id = db_prepare_int( $p_user_id );
-	$c_access_level = db_prepare_int( $p_access_level );
+	$c_project_id = db_prepare_int($p_project_id);
+	$c_user_id = db_prepare_int($p_user_id);
+	$c_access_level = db_prepare_int($p_access_level);
 
-	if( DEFAULT_ACCESS_LEVEL == $p_access_level ) {
+	if (DEFAULT_ACCESS_LEVEL == $p_access_level) {
 
 		# Default access level for this user
-		$c_access_level = db_prepare_int( user_get_access_level( $p_user_id ) );
+		$c_access_level = db_prepare_int(user_get_access_level($p_user_id));
 	}
 
 	$query = "INSERT
-				  INTO $t_project_user_list_table
-				    ( project_id, user_id, access_level )
-				  VALUES
-				    ( " . db_param() . ', ' . db_param() . ', ' . db_param() . ')';
-
-	db_query_bound( $query, Array( $c_project_id, $c_user_id, $c_access_level ) );
+					  INTO $t_project_user_list_table
+					    ( project_id, user_id, access_level )
+					  VALUES
+					    ( " . db_param() . ', ' . db_param() . ', ' . db_param() . ')';
+
+	db_query_bound($query, Array (
+		$c_project_id,
+		$c_user_id,
+		$c_access_level
+	));
 
 	# db_query errors on failure so:
 	return true;
 }
 
 # update entry
 # must make sure entry exists beforehand
-function project_update_user_access( $p_project_id, $p_user_id, $p_access_level ) {
-	$t_project_user_list_table = db_get_table( 'mantis_project_user_list_table' );
+function project_update_user_access($p_project_id, $p_user_id, $p_access_level) {
+	$t_project_user_list_table = db_get_table('mantis_project_user_list_table');
 
-	$c_project_id = db_prepare_int( $p_project_id );
-	$c_user_id = db_prepare_int( $p_user_id );
-	$c_access_level = db_prepare_int( $p_access_level );
+	$c_project_id = db_prepare_int($p_project_id);
+	$c_user_id = db_prepare_int($p_user_id);
+	$c_access_level = db_prepare_int($p_access_level);
 
 	$query = "UPDATE $t_project_user_list_table
-				  SET access_level=" . db_param() . "
-				  WHERE	project_id=" . db_param() . " AND
-						user_id=" . db_param();
-
-	db_query_bound( $query, Array( $c_access_level, $c_project_id, $c_user_id ) );
+					  SET access_level=" . db_param() . "
+					  WHERE	project_id=" . db_param() . " AND
+							user_id=" . db_param();
+
+	db_query_bound($query, Array (
+		$c_access_level,
+		$c_project_id,
+		$c_user_id
+	));
 
 	# db_query errors on failure so:
 	return true;
 }
 
 # update or add the entry as appropriate
 #  This function involves one more db query than project_update_user_acces()
 #  or project_add_user()
-function project_set_user_access( $p_project_id, $p_user_id, $p_access_level ) {
-	if( project_includes_user( $p_project_id, $p_user_id ) ) {
-		return project_update_user_access( $p_project_id, $p_user_id, $p_access_level );
+function project_set_user_access($p_project_id, $p_user_id, $p_access_level) {
+	if (project_includes_user($p_project_id, $p_user_id)) {
+		return project_update_user_access($p_project_id, $p_user_id, $p_access_level);
 	} else {
-		return project_add_user( $p_project_id, $p_user_id, $p_access_level );
+		return project_add_user($p_project_id, $p_user_id, $p_access_level);
 	}
 }
 
 # remove user from project
-function project_remove_user( $p_project_id, $p_user_id ) {
-	$t_project_user_list_table = db_get_table( 'mantis_project_user_list_table' );
+function project_remove_user($p_project_id, $p_user_id) {
+	$t_project_user_list_table = db_get_table('mantis_project_user_list_table');
 
-	$c_project_id = db_prepare_int( $p_project_id );
-	$c_user_id = db_prepare_int( $p_user_id );
+	$c_project_id = db_prepare_int($p_project_id);
+	$c_user_id = db_prepare_int($p_user_id);
 
 	$query = "DELETE FROM $t_project_user_list_table
-				  WHERE project_id=" . db_param() . " AND
-						user_id=" . db_param();
+					  WHERE project_id=" . db_param() . " AND
+							user_id=" . db_param();
 
-	db_query_bound( $query, Array( $c_project_id, $c_user_id ) );
+	db_query_bound($query, Array (
+		$c_project_id,
+		$c_user_id
+	));
 
 	# db_query errors on failure so:
 	return true;
 }
 
@@ -699,24 +733,29 @@
  * level is below or equal to the limit.
  * @param int Project ID
  * @param int Access level limit (null = no limit)
  * @return true
  */
-function project_remove_all_users( $p_project_id, $p_access_level_limit = null ) {
-	$t_project_user_list_table = db_get_table( 'mantis_project_user_list_table' );
+function project_remove_all_users($p_project_id, $p_access_level_limit = null) {
+	$t_project_user_list_table = db_get_table('mantis_project_user_list_table');
 
-	$c_project_id = db_prepare_int( $p_project_id );
+	$c_project_id = db_prepare_int($p_project_id);
 
 	$query = "DELETE FROM $t_project_user_list_table
-			WHERE project_id=" . db_param();
+				WHERE project_id=" . db_param();
 
-	if ( $p_access_level_limit !== null ) {
-		$c_access_level_limit = db_prepare_int( $p_access_level_limit );
+	if ($p_access_level_limit !== null) {
+		$c_access_level_limit = db_prepare_int($p_access_level_limit);
 		$query .= " AND access_level <= " . db_param();
-		db_query_bound( $query, Array( $c_project_id, $c_access_level_limit ) );
-	} else {
-		db_query_bound( $query, Array( $c_project_id ) );
+		db_query_bound($query, Array (
+			$c_project_id,
+			$c_access_level_limit
+		));
+	} else {
+		db_query_bound($query, Array (
+			$c_project_id
+		));
 	}
 
 	# db_query errors on failure so:
 	return true;
 }
@@ -730,62 +769,174 @@
  * @param int Destination project ID
  * @param int Source project ID
  * @param int Access level limit (null = no limit)
  * @return null
  */
-function project_copy_users( $p_destination_id, $p_source_id, $p_access_level_limit = null ) {
+function project_copy_users($p_destination_id, $p_source_id, $p_access_level_limit = null) {
 	# Copy all users from current project over to another project
-	$t_rows = project_get_local_user_rows( $p_source_id );
+	$t_rows = project_get_local_user_rows($p_source_id);
 
-	$t_count = count( $t_rows );
-	for ( $i = 0; $i < $t_count; $i++ ) {
+	$t_count = count($t_rows);
+	for ($i = 0; $i < $t_count; $i++) {
 		$t_row = $t_rows[$i];
 
-		if ( $p_access_level_limit !== null &&
-			$t_row['access_level'] > $p_access_level_limit ) {
+		if ($p_access_level_limit !== null && $t_row['access_level'] > $p_access_level_limit) {
 			$t_destination_access_level = $p_access_level_limit;
 		} else {
 			$t_destination_access_level = $t_row['access_level'];
 		}
 
 		# if there is no duplicate then add a new entry
 		# otherwise just update the access level for the existing entry
-		if ( project_includes_user( $p_destination_id, $t_row['user_id'] ) ) {
-			project_update_user_access( $p_destination_id, $t_row['user_id'], $t_destination_access_level );
+		if (project_includes_user($p_destination_id, $t_row['user_id'])) {
+			project_update_user_access($p_destination_id, $t_row['user_id'], $t_destination_access_level);
 		} else {
-			project_add_user( $p_destination_id, $t_row['user_id'], $t_destination_access_level );
+			project_add_user($p_destination_id, $t_row['user_id'], $t_destination_access_level);
 		}
 	}
 }
 
 # Delete all files associated with a project
-function project_delete_all_files( $p_project_id ) {
-	file_delete_project_files( $p_project_id );
+function project_delete_all_files($p_project_id) {
+	file_delete_project_files($p_project_id);
 }
 
 # ===================================
 # Other
 # ===================================
 
 # Pads the project id with the appropriate number of zeros.
-function project_format_id( $p_project_id ) {
-	$t_padding = config_get( 'display_project_padding' );
-	return( utf8_str_pad( $p_project_id, $t_padding, '0', STR_PAD_LEFT ) );
+function project_format_id($p_project_id) {
+	$t_padding = config_get('display_project_padding');
+	return (utf8_str_pad($p_project_id, $t_padding, '0', STR_PAD_LEFT));
 }
 
-
 # Return true if the file name identifier is unique, false otherwise
-function project_file_is_name_unique( $p_name ) {
-	$t_file_table = db_get_table( 'mantis_project_file_table' );
+function project_file_is_name_unique($p_name) {
+	$t_file_table = db_get_table('mantis_project_file_table');
 
 	$query = "SELECT COUNT(*)
-				  FROM $t_file_table
-				  WHERE filename=" . db_param();
-	$result = db_query_bound( $query, Array( $p_name ) );
-	$t_count = db_result( $result );
+					  FROM $t_file_table
+					  WHERE filename=" . db_param();
+	$result = db_query_bound($query, Array (
+		$p_name
+	));
+	$t_count = db_result($result);
 
-	if( $t_count > 0 ) {
+	if ($t_count > 0) {
 		return false;
 	} else {
 		return true;
 	}
 }
+/**
+ * Returns the type (action - risk - decision - evolution) of the current project
+ */
+function project_get_type_management($p_project_id = null) {
+	if (null == $p_project_id) {
+		$t_current_project_id = helper_get_current_project();
+	} 
+	else {
+		$t_current_project_id = $p_project_id;
+	}
+	$ret = false;
+	if (0 != $t_current_project_id) {
+		$t_current_project_name = project_get_name($t_current_project_id);
+		if ( !strpos($t_current_project_name, '_action') 
+		&& !strpos($t_current_project_name, '_decision') 
+		&& !strpos($t_current_project_name, '_risk') 
+		&& !strpos($t_current_project_name, '_evolution') ) {
+			$ret = "management";
+		}
+		else {
+			$token = explode('_', $t_current_project_name);
+			$ret = $token[count($token) - 1];			
+		}
+	}
+	return $ret;
+}
+
+/**
+ * Return the project id of the direction_type project when current project if not "all projects"
+ * if so, return "all projects"
+ */
+function project_get_other_type_project_id($p_direction_project_type, $p_project_id = null) {
+	//	get the project name
+	if (null == $p_project_id) {
+		$t_current_project_name = project_get_name(helper_get_current_project());
+	} else {
+		$t_current_project_name = project_get_name($p_project_id);
+	}
+	//	if management, create an array, otherwise, explode the project name
+	if ( project_get_type_management($p_project_id) != "management" ) {
+		$explode = explode('_', $t_current_project_name);
+	}
+	else {
+		$explode[0] = $t_current_project_name;
+		$explode[1] = "";
+	}
+	//	create generic name
+	$generic_project_name = '';
+	for ($i = 0; $i < count($explode) - 1; $i++) {
+		$generic_project_name .= $explode[$i];
+	}
+	//	if wanted project not management, add the sufix
+	if ( $p_direction_project_type != "management" ) {
+		$generic_project_name .=  '_'.$p_direction_project_type;
+	}
+	
+	return (int) project_get_id_by_name($generic_project_name);
+}
+
+/**
+ * Create a configuration file for the given project
+ * @param int $p_projectid
+ */
+function instance_configuration_create($p_projectid) {
+	$file_path = BASE_PATH . DIRECTORY_SEPARATOR . 'conf-instance';
+	$file_name = $file_path . DIRECTORY_SEPARATOR . 'config_status_' . $p_projectid . '.php';
+	if (!file_exists($file_path)) {
+		mkdir($file_path, 0777, TRUE);
+	}
+
+	if (!file_exists($file_name)) {
+		$handle = fopen($file_name, "x+");
+		$somecontent = "<?php\n" .
+		"/**\n" .
+		"* Custom Configuration Variables for project : " . project_get_name($p_projectid) . "\n" .
+		"*/\n\n";
+		$somecontent .= "/**\n" .
+		"* Project ID\n" .
+		"*/\n" .
+		'$g_project_id = ' . $p_projectid . ";\n";
+		$somecontent .= "/**\n" .
+		"* Particular fields\n" .
+		"*/\n" .
+		"#fields\n" .
+		"#priority\n" .
+		"#severity\n" .
+		"#reproducibility\n" .
+		"#summary\n" .
+		"#steps_to_reproduce\n" .
+		"#additional_information\n" .
+		"#control\n" .
+		"\n";
+		$somecontent .= "/**\n" .
+		"* Status management\n" .
+		"*/\n" .
+		"#status\n" .
+		"#name\n" .
+		"#title\n" .
+		"#button\n" .
+		"#notification_email\n" .
+		"#email\n" .
+		"#workflow\n" .
+		"\n";
+
+		fwrite($handle, $somecontent);
+
+		fclose($handle);
+
+		chmod($file_path, 0777);
+	}
+	return true;
+}
\ No newline at end of file
diff -rNU5 mantisbt-1.2.5/core/risk_criteria_api.php mantis_ard/core/risk_criteria_api.php
--- mantisbt-1.2.5/core/risk_criteria_api.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/core/risk_criteria_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,506 @@
+<?php
+
+
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+/**
+* @package MantisBT
+* @subpackage classes
+*/
+class risk_criteria {
+	protected $id;
+	protected $label = '';
+	protected $weight = 0;
+	/* the project id has to be the parent of the current project, the management one */
+	protected $project_id = 0;
+	protected $category_id = 0;
+	protected $evaluation = null;
+	protected $evaluation1 = '';
+	protected $evaluation2 = '';
+	protected $evaluation3 = '';
+	protected $evaluation4 = '';
+	protected $evaluation5 = '';
+	protected $evaluation6 = '';
+
+	public function __set($name, $value) {
+		$this-> $name = $value;
+	}
+
+	public function __get($name) {
+		return $this-> {
+			$name };
+	}
+
+	private function validate($p_update = false) {
+		# Category cannot be blank
+		if (0 == $this->category_id) {
+			error_parameters(lang_get('category'));
+			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+		}
+		if (0 == $this->project_id) {
+			error_parameters(lang_get('project'));
+			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+		}
+		# Label cannot be blank
+		if (is_blank($this->label)) {
+			error_parameters(lang_get('label'));
+			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+		}
+		if (!$p_update) {
+			# Label has to be unique
+			if (!risk_criteria_is_label_unique($this->label)) {
+				error_parameters(lang_get('label'));
+				trigger_error(ERROR_RISK_CRITERIA_DUPLICATE_LABEL, ERROR);
+			}
+		} else {
+			# Label has to be unique
+			if ($t_risk_criteria_name = risk_criteria_get($this->id)->label != $this->label) {
+				if (!risk_criteria_is_label_unique($this->label)) {
+					error_parameters(lang_get('label'));
+					trigger_error(ERROR_RISK_CRITERIA_DUPLICATE_LABEL, ERROR);
+				}
+			}
+			# Id has  to be gave
+			if (0 == $this->id) {
+				error_parameters(lang_get('id'));
+				trigger_error(ERROR_GENERIC, ERROR);
+			}
+		}
+		# Evaluation label 1 cannot be blank
+		if (is_blank($this->evaluation1)) {
+			error_parameters(lang_get('evaluation1'));
+			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+		}
+		# Evaluation label 2 cannot be blank
+		if (is_blank($this->evaluation2)) {
+			error_parameters(lang_get('evaluation2'));
+			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+		}
+		# Evaluation label 3 cannot be blank
+		if (is_blank($this->evaluation3)) {
+			error_parameters(lang_get('evaluation3'));
+			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+		}
+		# Evaluation label 4 cannot be blank
+		if (is_blank($this->evaluation4)) {
+			error_parameters(lang_get('evaluation4'));
+			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+		}
+		# Evaluation label 5 cannot be blank if 6 is not
+		if (!is_blank($this->evaluation6) && is_blank($this->evaluation5)) {
+			error_parameters(lang_get('evaluation5'));
+			trigger_error(ERROR_RISK_CRITERIA_LABEL, ERROR);
+		}
+	}
+
+	/**
+	 * Insert a new risk criteria into the db
+	 * @return int which is the risk criteria id that was created
+	 * @access public
+	 * @uses database_api.php
+	 * @uses lang_api.php
+	 */
+	function create() {
+		self :: validate();
+		$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+		$query = "INSERT INTO $t_risk_criteria_table
+									( label, weight, project_id, category_id, evaluation1, 
+									evaluation2, evaluation3, evaluation4, evaluation5, evaluation6
+									)
+									VALUES
+									    ( " . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ",
+									    " . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ')';
+
+		db_query_bound($query, Array (
+			$this->label,
+			$this->weight,
+			$this->project_id,
+			$this->category_id,
+			$this->evaluation1,
+			$this->evaluation2,
+			$this->evaluation3,
+			$this->evaluation4,
+			$this->evaluation5,
+			$this->evaluation6
+		));
+
+		$this->id = db_insert_id($t_risk_criteria_table);
+
+		return $this->id;
+
+	}
+
+	function update() {
+		self :: validate(true);
+		$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+		$query = "UPDATE $t_risk_criteria_table
+									SET label = " . db_param() . ",
+									category_id = " . db_param() . ",
+									evaluation1 = " . db_param() . ",
+									evaluation2 = " . db_param() . ",
+									evaluation3 = " . db_param() . ",
+									evaluation4 = " . db_param() . ",
+									evaluation5 = " . db_param() . ",
+									evaluation6 = " . db_param() . "
+									WHERE id=" . db_param();
+
+		db_query_bound($query, Array (
+			$this->label,
+			$this->category_id,
+			$this->evaluation1,
+			$this->evaluation2,
+			$this->evaluation3,
+			$this->evaluation4,
+			$this->evaluation5,
+			$this->evaluation6,
+			$this->id
+		));
+
+		return true;
+	}
+
+	function delete() {
+		$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+		$query = "DELETE FROM $t_risk_criteria_table
+									WHERE id=" . db_param();
+
+		db_query_bound($query, Array (
+			$this->id
+		));
+
+		return true;
+	}
+
+}
+
+///**
+// * This class represent a label of a risk criteria
+// */
+//class risk_criteria_label {
+//	protected $id;
+//	protected $label = '';
+//	
+//	public function __set($name, $value) {
+//		$this-> $name = $value;
+//	}
+//
+//	public function __get($name) {
+//		return $this-> {
+//			$name };
+//	}
+//	
+//	private function validate() {
+//		# Label cannot be blank
+//		if (is_blank($this->label)) {
+//			error_parameters(lang_get('label'));
+//			trigger_error(ERROR_EMPTY_FIELD, ERROR);
+//		}
+//	}
+//	
+//	
+//	/**
+//	 * Create a new label for a risk criteria
+//	 */
+//	function create() {
+//		self :: validate();
+//		$t_risk_criteria_label_table = db_get_table('mantis_risk_criteria_label_table');
+//
+//		$query = "INSERT INTO $t_risk_criteria_label_table
+//									( label )
+//									VALUES
+//									    ( " . db_param() . ')';
+//
+//		db_query_bound($query, Array (
+//			$this->label
+//		));
+//
+//		$this->id = db_insert_id($t_risk_criteria_label_table);
+//
+//		return $this->id;
+//	}
+//	
+//	function update() {
+//		self :: validate(true);
+//		$t_risk_criteria_label_table = db_get_table('mantis_risk_criteria_label_table');
+//
+//		$query = "UPDATE $t_risk_criteria_label_table
+//									SET label = " . db_param() . ",
+//									WHERE id=" . db_param();
+//
+//		db_query_bound($query, Array (
+//			$this->label,
+//			$this->id
+//		));
+//
+//		return true;
+//	}
+//	
+//	function delete() {
+//		$t_risk_criteria_label_table = db_get_table('mantis_risk_criteria_label_table');
+//
+//		$query = "DELETE FROM $t_risk_criteria_label_table
+//									WHERE id=" . db_param();
+//
+//		db_query_bound($query, Array (
+//			$this->id
+//		));
+//
+//		return true;
+//	}
+//}
+
+
+# check to see if risk criteria exists by label
+function risk_criteria_is_label_unique($p_label) {
+	$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+	$query = "SELECT COUNT(*)
+						 FROM $t_risk_criteria_table
+						 WHERE label=" . db_param();
+	$result = db_query_bound($query, Array (
+		$p_label
+	));
+
+	if (0 == db_result($result)) {
+		return true;
+	} else {
+		return false;
+	}
+}
+
+function risk_criteria_get_id_by_name($p_risk_criteria_name) {
+	$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+	$query = "SELECT id FROM $t_risk_criteria_table WHERE label = " . db_param();
+	$t_result = db_query_bound($query, Array (
+		$p_risk_criteria_name
+	), 1);
+
+	if (db_num_rows($t_result) == 0) {
+		return 0;
+	} else {
+		return db_result($t_result);
+	}
+}
+
+function risk_criteria_get($p_risk_criteria_id) {
+	$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+	$query = "SELECT * 
+			 			FROM $t_risk_criteria_table
+			 			WHERE id= " . db_param();
+	$result = db_query_bound($query, Array (
+		$p_risk_criteria_id
+	));
+
+	$row = db_fetch_array($result);
+
+	return to_risk_criteria_object($row);
+
+}
+function risk_criteria_get_all() {
+	$t_project_id = project_get_other_type_project_id('management');
+	$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+	$query = "SELECT * 
+			 			FROM $t_risk_criteria_table
+			 			WHERE project_id= " . db_param();
+	
+	$result = db_query_bound($query, Array (
+		$t_project_id
+	));
+
+	$row_count = db_num_rows($result);
+	
+	$t_risk_criterias = array ();
+
+	for ($i = 0; $i < $row_count; $i++) {
+		$row = db_fetch_array($result);
+		$t_risk_criterias[] = to_risk_criteria_object($row);
+	}
+	
+	return $t_risk_criterias;
+
+}
+
+function to_risk_criteria_object($p_row) {
+	$t_risk_criteria = new risk_criteria;
+	$t_risk_criteria->id = $p_row['id'];
+	$t_risk_criteria->category_id = $p_row['category_id'];
+	$t_risk_criteria->label = $p_row['label'];
+	$t_risk_criteria->weight = $p_row['weight'];
+	$t_risk_criteria->evaluation = $p_row['evaluation'];
+	$t_risk_criteria->evaluation1 = $p_row['evaluation1'];
+	$t_risk_criteria->evaluation2 = $p_row['evaluation2'];
+	$t_risk_criteria->evaluation3 = $p_row['evaluation3'];
+	$t_risk_criteria->evaluation4 = $p_row['evaluation4'];
+	$t_risk_criteria->evaluation5 = $p_row['evaluation5'];
+	$t_risk_criteria->evaluation6 = $p_row['evaluation6'];
+	return $t_risk_criteria;
+}
+function bug_to_risk_criteria_object($p_bug) {
+	$t_risk_criteria = new risk_criteria;
+	$t_risk_criteria->id = null;
+	$t_risk_criteria->project_id = project_get_other_type_project_id('management');
+	$t_risk_criteria->category_id = category_get_id_by_name('others', -1);
+	$t_risk_criteria->label = $p_bug->summary;
+	$t_risk_criteria->weight = 0;
+	$t_risk_criteria->evaluation = null;
+	$t_risk_criteria->evaluation1 = "1";
+	$t_risk_criteria->evaluation2 = "2";
+	$t_risk_criteria->evaluation3 = "3";
+	$t_risk_criteria->evaluation4 = "4";
+	$t_risk_criteria->evaluation5 = "5";
+	$t_risk_criteria->evaluation6 = "6";
+	return $t_risk_criteria;
+}
+
+function risk_criteria_update_attribute($p_risk_criteria_id, $p_attribute, $p_weight) {
+	$t_risk_criteria_table = db_get_table('mantis_risk_criteria_table');
+
+	$query = "UPDATE $t_risk_criteria_table
+			 		SET $p_attribute = " . db_param() .
+					" WHERE id = " . db_param();
+
+	$params[] = (int) $p_weight;
+	$params[] = (int) $p_risk_criteria_id;
+	$result = db_query_bound($query, $params);
+}
+
+/**
+ * Create a risk_criteria evaluation. 
+ * If an evaluation already exists for a given day, it is update, otherwise, a new one is create.
+ * Return true if update is ok, return the last inserted id if create is ok
+ */
+function risk_evaluation_create_history($p_category_id, $p_evaluation) {
+	$t_risk_evaluation_history_table = db_get_table('mantis_risk_evaluation_history_table');
+	$last_risk_evaluation = risk_evaluation_get_last($p_category_id);
+	$t_date = date('Y-m-d');
+	$t_project_id = project_get_other_type_project_id('management');
+	//update
+	if ($last_risk_evaluation['date_modified'] == $t_date) {
+		$query = "UPDATE $t_risk_evaluation_history_table " .
+					" SET evaluation = " . db_param() .
+					" WHERE project_id = " . db_param() .
+					" AND category_id = " . db_param() .
+					" AND date_modified = " . db_param();
+		db_query_bound($query, Array (
+			$p_evaluation,
+			$t_project_id,
+			$p_category_id,
+			$t_date
+		));
+		return true;
+	} 
+	//	create
+	else {
+		$query = "INSERT INTO $t_risk_evaluation_history_table
+					( project_id, category_id, evaluation, date_modified
+					)
+					VALUES
+					( " . db_param() . ',' . db_param() . ',' . db_param() . ',' . db_param() . ')';
+		db_query_bound($query, Array (
+			$t_project_id,
+			$p_category_id,
+			$p_evaluation,
+			$t_date
+		));
+		
+		return db_insert_id($t_risk_evaluation_history_table);
+
+	}
+}
+
+/**
+ * Return the previous evaluation (previous date)
+ */
+function risk_evaluation_get_previous($p_category_id) {
+	$t_risk_evaluation_history_table = db_get_table('mantis_risk_evaluation_history_table');
+	$t_project_id = project_get_other_type_project_id('management');
+	
+	$query = "SELECT * FROM $t_risk_evaluation_history_table
+					WHERE project_id = " . db_param() . "
+					AND category_id = " . db_param() . "
+					ORDER BY date_modified DESC";
+	
+	$result = db_query_bound($query, Array (
+		$t_project_id,
+		$p_category_id
+	));
+	
+	$row_count = db_num_rows($result);
+	
+	for ($i = 0; $i < $row_count; $i++) {
+		$previous_risk_evaluation = db_fetch_array($result);
+		if ( $previous_risk_evaluation['date_modified'] != date('Y-m-d') ) {
+			$previous_risk_evaluations[] = $previous_risk_evaluation;
+		}
+	}
+	if ( $previous_risk_evaluations != null ) {
+		uasort($previous_risk_evaluations, 'date_cmp');
+		return $previous_risk_evaluations[0];
+	}
+	else {
+		return null;
+	}
+}
+
+/**
+ * Compares two risk_evaluation object's date attribute
+ */
+function date_cmp($a, $b) {
+	$date_a = DateTime::createFromFormat('Y-m-d', $a['date_modified'])->format('ymd');
+	$date_b = DateTime::createFromFormat('Y-m-d', $b['date_modified'])->format('ymd');
+	if ($date_a == $date_b) {
+        return 0;
+    }
+    return ($date_a < $date_b) ? -1 : 1;
+}
+/**
+ * Return the last evaluation saved (whatever the date)
+ */
+function risk_evaluation_get_last($p_category_id) {
+	$t_risk_evaluation_history_table = db_get_table('mantis_risk_evaluation_history_table');
+	$t_project_id = project_get_other_type_project_id('management');
+	
+	$query = "SELECT * FROM $t_risk_evaluation_history_table
+					WHERE project_id = " . db_param() . "
+					AND category_id = " . db_param() . "
+					ORDER BY date_modified DESC";
+	
+	$result = db_query_bound($query, Array (
+		$t_project_id,
+		$p_category_id
+	));
+
+	$row_count = db_num_rows($result);
+
+	for ($i = 0; $i < $row_count; $i++) {
+		$last_risk_evaluation = db_fetch_array($result);
+		break;
+	}
+
+	return $last_risk_evaluation;
+}
+?>
diff -rNU5 mantisbt-1.2.5/core/status_api.php mantis_ard/core/status_api.php
--- mantisbt-1.2.5/core/status_api.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/core/status_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,540 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+ 
+require_once( dirname( __FILE__ ) . DIRECTORY_SEPARATOR . 'error_api.php' );
+define ("NAME" , "name");
+define ("TITLE" , "title");
+define ("BUTTON" , "button");
+define ("EMAIL" , "email");
+define ("NOTIFICATION_EMAIL" , "notification_email");
+if ( auth_is_user_authenticated() ) define ("DEFAULT_LANGUAGE" , user_pref_get( auth_get_current_user_id() )->language);	
+else define ("DEFAULT_LANGUAGE" , lang_get_default());
+
+define ("CREATE" , "create");
+define ("UPDATE" , "update");
+define ("DELETE" , "delete");
+
+### Status API ###
+#//TODO remplace get_line_in_file par array_search() avec des patterns
+
+
+#############################
+#         CD LABEL          #
+#############################
+
+
+/**
+ * Create a label status, return the id of this status
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ * @param string $p_indice
+ * @return int $new_id
+ */
+function create_label_status(&$p_instance_file, &$p_label_status) {	
+	global $g_fixed_status;
+	#get the new id
+	$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	$ids = array_keys($t_enum_status);
+	$new_id = $ids[count($ids)-1]+10;
+
+	#create the new status_enum
+	$line = get_line_in_file($p_instance_file, "g_status_enum_string");
+	$status_enum = substr(trim($p_instance_file[$line]),0,-2);
+	if ( $new_id != 10) {
+		$status_enum .= ",";
+	}
+	$new_status_enum = "\t".$status_enum.$new_id.":".$p_label_status."';\n";
+	
+	if ( 1 == $g_fixed_status ) $new_status_enum = config_status_with_fixed($new_status_enum);
+	
+	#update the line in the array file
+	$p_instance_file[$line] = $new_status_enum;
+	
+	return $new_id;
+}
+
+/**
+ * Delete a label status, return the id of this status
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ * @return int $id_to_delete
+ */
+function delete_label_status(&$p_instance_file, &$p_label_status) {
+	
+	$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	$id_to_delete = null;
+	
+	#create the new variable
+	$new_status_enum = "\t".'$g_status_enum_string = \'';
+	foreach ( $t_enum_status as $t_status_id => $t_status_label ) {
+		if ( $t_status_label !=  $p_label_status) {
+			$new_status_enum .= $t_status_id.":$t_status_label,";
+		}
+		else {
+			$id_to_delete = $t_status_id;
+		}
+	}
+	if ( count($t_enum_status) != 1 ) {
+		$new_status_enum = substr(trim($new_status_enum),0,-1);
+	}
+	$new_status_enum .= "';\n";
+		
+	#update the line in file
+	$line = get_line_in_file($p_instance_file, "g_status_enum_string");
+	$p_instance_file[$line] = $new_status_enum;
+	
+	return $id_to_delete;
+}
+
+#############################
+#         CUD COLOR         #
+#############################
+/**
+ * Create a color specified by the label' status
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ * @param string $p_color_status
+ */
+function create_color_status(&$p_instance_file, &$p_label_status, &$p_color_status) {
+	$line = get_line_in_file($p_instance_file, "g_status_colors")+1;
+	$status_colors = "\t'".$p_label_status."'\t=> '#".$p_color_status."',\n";
+	$p_instance_file = insert_in_file($p_instance_file, $status_colors, $line);
+}
+
+/**
+ * Update a color specified by the label' status
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ * @param string $p_color_status
+ */
+function update_color_status(&$p_instance_file, &$p_label_status, &$p_color_status) {
+	delete_color_status($p_instance_file, $p_label_status);
+	create_color_status($p_instance_file, $p_label_status, $p_color_status);
+}
+
+/**
+ * Delete a color specified by the label' status
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ */
+function delete_color_status(&$p_instance_file, &$p_label_status) {
+	$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	$line = get_line_in_file($p_instance_file, "g_status_colors")+1;
+	for($i=$line; $i<($line+count($t_enum_status)); $i++) {
+		if ( ereg($p_label_status, $p_instance_file[$i]) ) {
+			$p_instance_file = remove_in_file($p_instance_file, $i );
+		}
+	}
+}
+
+#############################
+#           CUD NAME        #
+#############################
+
+/**
+ * Add new name for a specified status for all languages
+ * @param array $p_instance_file
+ * @param multi-array $p_status_multi_language
+ * @param int $p_new_id
+ */
+function create_name_status(&$p_instance_file, &$p_status_multi_language, &$p_new_id) {
+	global $g_fixed_status;
+	
+	foreach ( $p_status_multi_language as $language => $status_language ) {
+		# get the line to put the $new_status_enum_string and update the line in the array file
+		$line = get_line_in_file($p_instance_file, "status_enum_string_".$language);
+		$status_enum = substr(trim($p_instance_file[$line]),0,-2);
+		if ( $p_new_id != 10) {
+			$status_enum .= ",";
+		}
+		$new_status_name = "\t".$status_enum.$p_new_id.":".addslashes($status_language[NAME])."';\n";
+		
+		if ( 1 == $g_fixed_status ) $new_status_name = config_status_with_fixed($new_status_name);
+		#update the line in the array file
+		$p_instance_file[$line] = $new_status_name;
+	}
+}
+
+/**
+ * Update name for a specified status for all languages
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ * @param multi-array $p_status_multi_language
+ * @param array $p_languages_to_add
+ */
+function update_name_status(&$p_instance_file, &$p_label_status, &$p_status_multi_language) {
+	global $g_language_status;
+	$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	foreach ( $g_language_status as $language) {
+		$t_new_name_status = addslashes($p_status_multi_language[$language][NAME]);
+		
+		$t_name_status_array = MantisEnum::getAssocArrayIndexedByValues( lang_get( 'status_enum_string_'.$language ) );
+		$line = get_line_in_file($p_instance_file, "status_enum_string_".$language);
+		$t_actual_id_status = array_search($p_label_status, $t_enum_status);
+		$t_new_names_status = "\t".'$s_status_enum_string_'.$language." = '";
+		foreach ( $t_name_status_array as $t_id_status => $t_name_status ) {
+			if ( $t_actual_id_status == $t_id_status ) {
+				$t_new_names_status .= $t_id_status.':'.$t_new_name_status.',';	
+			}
+			else {
+				$t_new_names_status .= $t_id_status.':'.$t_name_status.',';
+			}
+		}
+		$t_new_names_status = substr($t_new_names_status, 0, -1);
+		$t_new_names_status .= "';\n";
+		$p_instance_file[$line] = $t_new_names_status;
+	}
+	
+}
+
+/**
+ * Delete name for a specified status for all languages
+ * @param array $p_instance_file
+ * @param int $p_id_to_delete
+ */
+function delete_name_status(&$p_instance_file, &$p_id_to_delete) {
+	global $g_language_status;
+	$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	foreach ( $g_language_status as $language) {
+		$t_status_name = MantisEnum::getAssocArrayIndexedByValues( lang_get( 'status_enum_string_'.$language ) );
+		
+		#create the new variable
+		$new_status_name = "\t".'$s_status_enum_string_'.$language." = '";
+		foreach ( $t_enum_status as $t_status_id => $t_status_name ) {
+			if ( $p_id_to_delete !=  $t_status_id) {
+				$new_status_name .= $t_status_id.":".addslashes($t_status_name).",";
+			}
+		}
+		if ( count($t_enum_status) != 1 ) {
+			$new_status_name = substr(trim($new_status_name),0,-1);
+		}
+		$new_status_name .= "';\n";
+		
+		#update the line in file
+		$line = get_line_in_file($p_instance_file, 'status_enum_string_'.$language);
+		if ( $line != -1 ) {
+			$p_instance_file[$line] = $new_status_name;
+		}
+	}	
+}
+
+#############################
+#         CD FIELD          #
+#############################
+
+/**
+ * Create specified field for a specified status
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ * @param string $p_field, the type of field to create
+ * @param string $p_value
+ * @param string $p_language - null by default
+ */
+function create_field_status(&$p_instance_file, &$p_label_status, $p_field, $p_value, &$p_language = null) {
+	$p_value = addslashes($p_value);
+	switch ( $p_field ) {
+		case TITLE:
+			$t_sentence = "\t".'$s_'.$p_label_status."_bug_title_$p_language = '".$p_value."';\n";
+			break;
+		case BUTTON:
+			$t_sentence = "\t".'$s_'.$p_label_status."_bug_button_$p_language = '".$p_value."';\n";
+			break;
+		case EMAIL:
+			$t_sentence = "\t".'$s_email_notification_title_for_status_bug_'.$p_label_status."_$p_language = '".$p_value."';\n";
+			break;
+		case NOTIFICATION_EMAIL:
+			$t_sentence = "\t".'$g_default_email_on_'.$p_label_status." = $p_value;\n";
+			break;
+		default:
+			break;
+	}
+	
+	$line = get_line_in_file($p_instance_file, "#".$p_field);
+	if( $line != false ) {
+		$line += 1;
+		$p_instance_file = insert_in_file($p_instance_file, $t_sentence, $line);	
+	}
+}
+/**
+ * Delete specified field for a specified status
+ * @param array $p_instance_file
+ * @param string $p_label_status
+ * @param string $p_field, the type of field to delete
+ * @param string $p_language - null by default
+ */
+function delete_field_status(&$p_instance_file, &$p_label_status, $p_field, &$p_language = null) {
+	switch ( $p_field ) {
+		case TITLE:
+			$t_indice = "s_".$p_label_status."_bug_title_".$p_language;
+			break;
+		case BUTTON:
+			$t_indice = "s_".$p_label_status."_bug_button_".$p_language;
+			break;
+		case EMAIL:
+			$t_indice = "s_email_notification_title_for_status_bug_".$p_label_status."_".$p_language;
+			break;
+		case NOTIFICATION_EMAIL:
+			$t_indice = "g_default_email_on_".$p_label_status;
+			break;
+		default:
+			break;
+	}
+	while (get_line_in_file($p_instance_file, $t_indice) != false ) {
+		$p_instance_file = remove_in_file($p_instance_file, get_line_in_file($p_instance_file, $t_indice));	
+	}
+}
+#############################
+#         CUD STATUS        #
+#############################
+
+/**
+ * Create a new bug status
+ * @param string $p_label_status
+ * @param string $p_color_status
+ * @param multi-array $p_status_multi_language
+ */
+function status_create(&$p_label_status, &$p_color_status, &$p_status_multi_language) {
+	
+	# get the conf instance file
+	$t_project_id = helper_get_current_project();
+	$t_file = file("conf-instance/config_status_$t_project_id.php");
+	
+	# --Label--	
+	$new_id = create_label_status($t_file, $p_label_status);
+	
+	# --Color--
+	create_color_status($t_file, $p_label_status, $p_color_status);
+	
+	# --Name--
+	create_name_status($t_file, $p_status_multi_language, $new_id);
+	
+	# --Title Button & Email--
+	$cpt = 0;
+	foreach ( $p_status_multi_language as $language => $status_language ) {		
+		create_field_status($t_file, $p_label_status, TITLE, $status_language[TITLE], $language);
+		create_field_status($t_file, $p_label_status, BUTTON, $status_language[BUTTON], $language);
+		create_field_status($t_file, $p_label_status, EMAIL, $status_language[EMAIL], $language);
+			
+		# --Notification Email-- 
+		if ( is_blank($p_status_multi_language[$language][EMAIL]) ) {
+			$cpt++;
+		}
+	}
+	if ( $cpt > 0 ) $notification_email = "OFF";
+	else  $notification_email = "ON";
+	
+	create_field_status($t_file, $p_label_status, NOTIFICATION_EMAIL, $notification_email, $language);
+	
+	# --Update File--
+	write_file("conf-instance/config_status_$t_project_id.php", $t_file);
+	
+}
+
+/**
+ * Update a status
+ * @param string $p_label_status
+ * @param string $p_color_status
+ * @param multi-array $p_status_multi_language
+ */
+function status_update(&$p_label_status, &$p_color_status, &$p_status_multi_language) {
+
+	# get the conf instance file
+	$t_project_id = helper_get_current_project();
+	$t_file = file("conf-instance/config_status_$t_project_id.php");
+	
+	# --About the color--
+	update_color_status($t_file, $p_label_status, $p_color_status);
+	
+	# --Name--
+	update_name_status($t_file, $p_label_status, $p_status_multi_language);
+	
+	# --Manage Title Button & Email--
+	$cpt = 0;
+	foreach ( $p_status_multi_language as $language => $status_language ) {
+		# --About the title--
+		$title = $p_label_status.'_bug_title_'.$language;
+		if ( lang_get($title) != $status_language[TITLE] ) {
+			delete_field_status($t_file, $p_label_status, TITLE, $language);
+			create_field_status($t_file, $p_label_status, TITLE, $status_language[TITLE], $language);
+		}
+		# --About the button--
+		$button = $p_label_status.'_bug_button_'.$language;
+		if ( lang_get($button) != $status_language[BUTTON] ) {
+			delete_field_status($t_file, $p_label_status, BUTTON, $language);
+			create_field_status($t_file, $p_label_status, BUTTON, $status_language[BUTTON], $language);
+		}
+		
+		# --About the email--
+		$email = 'email_notification_title_for_status_bug_'.$p_label_status.'_'.$language;
+		if ( lang_get($email) != $status_language[EMAIL] ) {
+			delete_field_status($t_file, $p_label_status, EMAIL, $language);
+			create_field_status($t_file, $p_label_status, EMAIL, $status_language[EMAIL], $language);
+		}
+		
+		# --Notification Email-- 
+		if ( is_blank($p_status_multi_language[$language][EMAIL]) ) {
+			$cpt++;
+		}
+	}
+	if ( $cpt > 0 ) $notification_email = "OFF";
+	else  $notification_email = "ON";
+	
+	delete_field_status($t_file, $p_label_status, NOTIFICATION_EMAIL);
+	create_field_status($t_file, $p_label_status, NOTIFICATION_EMAIL, $notification_email);
+	
+	# --Update File--
+	write_file("conf-instance/config_status_$t_project_id.php", $t_file);
+}
+
+/**
+ * Delete a status
+ * @param string $p_label_status
+ */
+function status_delete( &$p_label_status) {
+	global $g_language_status;
+	# get the conf instance file
+	$t_project_id = helper_get_current_project();
+	$t_file = file("conf-instance/config_status_$t_project_id.php");
+	
+	# --Label
+	$t_id_to_delete = delete_label_status($t_file, $p_label_status);
+	
+	# --Color
+	delete_color_status($t_file, $p_label_status);
+	
+	# --Name
+	delete_name_status($t_file, $t_id_to_delete);
+	
+	# --For each languages--
+	#get all the existing languages
+	$status_enum_language = lang_get( $p_label_status.'_enum_language' );
+	$language_array = explode(",", $status_enum_language);
+	foreach ( $g_language_status as $language ) {	
+		delete_field_status($t_file, $p_label_status, TITLE, $language);
+		delete_field_status($t_file, $p_label_status, BUTTON, $language);	
+		delete_field_status($t_file, $p_label_status, EMAIL, $language);	
+	} 
+
+    # --Email notification 	
+	delete_field_status($t_file, $p_label_status, NOTIFICATION_EMAIL);
+	
+	# --Update File--
+	write_file("conf-instance/config_status_$t_project_id.php", $t_file);
+}
+
+/**
+ * Return an array with the differents actions (create - update - delete) possible with the given status
+ * @param string $p_status
+ */
+function get_actions_with_status(&$p_status) {
+	$ret = array('update');
+	if ( !in_array($p_status, config_get('status_fixed') ) ) {
+		array_push($ret, 'delete');
+	}
+	return $ret;
+}
+
+/**
+ * Add new status before the last status (closed)
+ * @param string $p_new_status_enum
+ */
+function config_status_with_fixed(&$p_new_status_enum) {
+	global $g_fixed_status;
+	
+	$i = 10;
+	$status = explode("'", $p_new_status_enum);
+	$p_new_status_enum = $status[0]." '";
+	$status = explode(",", $status[1]);
+	$nbStatus = count($status);
+	foreach ( $status as $statu ) {
+		$idAndLabel = explode(':', $statu);
+		if ($nbStatus == $idAndLabel[0]/10) {
+			$p_new_status_enum .= ($idAndLabel[0]-10).":".$idAndLabel[1].",";
+		}
+		elseif ( ($nbStatus - 1) == $idAndLabel[0]/10) {
+			$p_new_status_enum_end = ($idAndLabel[0]+10).":".$idAndLabel[1];	
+		}
+    	else $p_new_status_enum .= $statu.",";
+	}
+	$p_new_status_enum .= $p_new_status_enum_end."';\n";
+	return $p_new_status_enum;
+}
+
+/**
+ * Update the classification of status enum string ($g_)
+ * @param array $p_classification_status
+ */
+function update_classification(&$p_classification_status) {
+	global $g_language_status;
+	# get the conf instance file
+	$t_project_id = helper_get_current_project();
+	$t_file = file("conf-instance/config_status_$t_project_id.php");
+	
+	# --Update status_enum_string--
+	# rewrite the $s_status_enum_string_line variable
+	$t_old_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	asort($p_classification_status);
+	$new_status_enum_string = "\t".'$g_status_enum_string = \'';
+	$i = 1;
+	foreach ( $p_classification_status as $t_label_status => $t_weight ) {
+		$new_status_enum_string .= ($i*10).":$t_label_status,";
+		$t_old_id_status = array_search($t_label_status, $t_old_enum_status);
+		$t_match_old_new_enum_status[$t_old_id_status] = $i*10;
+		$i++;
+	}
+	$new_status_enum_string = substr(trim($new_status_enum_string),0,-1);
+	$new_status_enum_string .= "';\n";
+	
+	# get the line to put the $new_status_enum_string
+	$status_enum_string_line = get_line_in_file($t_file, "g_status_enum_string");
+	$t_file[$status_enum_string_line] = $new_status_enum_string;
+	
+	# --Update status name--
+	foreach ( $g_language_status as $language ) {
+		#matching key
+		$t_status_name = MantisEnum::getAssocArrayIndexedByValues( lang_get('status_enum_string_'.$language) );
+		$t_new_name_status_array = array();
+		foreach ( $t_status_name as $t_old_id_status => $t_name_status ) {
+			$t_new_id = $t_match_old_new_enum_status[$t_old_id_status];
+	    	$t_new_name_status_array[$t_new_id] = $t_name_status;
+		}
+		ksort($t_new_name_status_array);
+		
+		#create the new status name
+		$t_new_status_name = "\t".'$s_status_enum_string_'.$language." = '";	
+		foreach ( $t_new_name_status_array as $t_id_status => $t_name_status ) {
+	   		$t_new_status_name .= $t_id_status.':'.addslashes($t_name_status).',';
+		}
+		$t_new_status_name = substr($t_new_status_name, 0, -1);
+		$t_new_status_name .= "';\n";
+		
+		#update the line in file
+		$t_status_name_line = get_line_in_file($t_file, 'status_enum_string_'.$language);
+		$t_file[$t_status_name_line] = $t_new_status_name;
+	}
+	
+	# --Update File--
+	write_file("conf-instance/config_status_$t_project_id.php", $t_file);
+}
+
+
+#EOF
+?>
diff -rNU5 mantisbt-1.2.5/core/string_api.php mantis_ard/core/string_api.php
--- mantisbt-1.2.5/core/string_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/string_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -134,10 +134,14 @@
  * @param string $p_string
  * @return string
  */
 function string_display_line( $p_string ) {
 	$t_data = event_signal( 'EVENT_DISPLAY_TEXT', $p_string, false );
+	if ( lang_exists($p_string, lang_get_current() ) ||
+		lang_exists($p_string, 'english' )) {
+		$t_data = lang_get($p_string);
+	} 
 	return $t_data;
 }
 
 /**
  * Prepare a string for display to HTML and add href anchors for URLs, emails,
@@ -574,11 +578,11 @@
  * @param int $p_user_id
  * @param bool $p_detail_info
  * @param bool $p_fqdn
  * @return string
  */
-function string_get_bug_view_link( $p_bug_id, $p_user_id = null, $p_detail_info = true, $p_fqdn = false ) {
+function string_get_bug_view_link( $p_bug_id, $p_user_id = null, $p_detail_info = true, $p_fqdn = false, $p_recently_visited = false ) {
 	if( bug_exists( $p_bug_id ) ) {
 		$t_link = '<a href="';
 		if( $p_fqdn ) {
 			$t_link .= config_get_global( 'path' );
 		} else {
@@ -588,12 +592,24 @@
 		if( $p_detail_info ) {
 			$t_summary = string_attribute( bug_get_field( $p_bug_id, 'summary' ) );
 			$t_status = string_attribute( get_enum_element( 'status', bug_get_field( $p_bug_id, 'status' ) ) );
 			$t_link .= ' title="[' . $t_status . '] ' . $t_summary . '"';
 
-			$t_resolved = bug_get_field( $p_bug_id, 'status' ) >= config_get( 'bug_resolved_status_threshold' );
-			if( $t_resolved ) {
+			if ( !ARD ) {
+				$t_resolved = bug_get_field( $p_bug_id, 'status' ) >= config_get( 'bug_resolved_status_threshold' );
+			}
+			else {
+				if ( $p_recently_visited ) {
+					# with status management, to rule out bugs'links, we need to get status_enum_string of the bug's project
+					$t_resolved = false;
+				}
+				else {
+				 	$t_resolved = bug_get_field( $p_bug_id, 'status' ) >= MantisEnum::getValue(config_get( 'status_enum_string' ), 'closed');					
+				}
+			}
+	
+		if( $t_resolved ) {
 				$t_link .= ' class="resolved"';
 			}
 		}
 		$t_link .= '>' . bug_format_id( $p_bug_id ) . '</a>';
 	} else {
diff -rNU5 mantisbt-1.2.5/core/user_api.php mantis_ard/core/user_api.php
--- mantisbt-1.2.5/core/user_api.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core/user_api.php	2013-03-27 11:11:16.000000000 +0100
@@ -882,11 +882,10 @@
 							)
 			  ORDER BY p.name";
 		$result = db_query_bound( $query, ( $p_show_disabled ? Array( $p_user_id, $t_public, $t_private, $p_user_id ) : Array( $p_user_id, true, $t_public, $t_private, $p_user_id ) ) );
 
 		$row_count = db_num_rows( $result );
-
 		$t_projects = array();
 
 		for( $i = 0;$i < $row_count;$i++ ) {
 			$row = db_fetch_array( $result );
 
diff -rNU5 mantisbt-1.2.5/core.php mantis_ard/core.php
--- mantisbt-1.2.5/core.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/core.php	2013-03-27 11:11:16.000000000 +0100
@@ -18,11 +18,10 @@
  * @package MantisBT
  * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org
  * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net
  * @link http://www.mantisbt.org
  */
-
 /**
  * Before doing anything... check if MantisBT is down for maintenance
  *
  *   To make MantisBT 'offline' simply create a file called
  *   'mantis_offline.php' in the MantisBT root directory.
@@ -58,11 +57,10 @@
 
 /**
  * Include default configuration settings
  */
 require_once( dirname( __FILE__ ).DIRECTORY_SEPARATOR.'config_defaults_inc.php' );
-
 # config_inc may not be present if this is a new install
 if ( file_exists( dirname( __FILE__ ).DIRECTORY_SEPARATOR.'config_inc.php' ) ) {
 	require_once( dirname( __FILE__ ).DIRECTORY_SEPARATOR.'config_inc.php' );
 	$t_config_inc_found = true;
 }
@@ -163,28 +161,56 @@
 
 		exit; # additional output can cause problems so let's just stop output here
 	}
 }
 
-# Load rest of core in separate directory.
+# Authentication and user setup
+require_once( 'authentication_api.php' );
+require_once( 'project_api.php' );
+require_once( 'project_hierarchy_api.php' );
+require_once( 'user_api.php' );
+require_once( 'access_api.php' );
+require_once( 'string_api.php' );
 
+# Load rest of core in separate directory.
 require_once( 'config_api.php' );
 require_once( 'logging_api.php' );
-
-# Load internationalization functions (needed before database_api, in case database connection fails)
-require_once( 'lang_api.php' );
-
 # error functions should be loaded to allow database to print errors
+require_once( 'lang_api.php' );
 require_once( 'error_api.php' );
 require_once( 'helper_api.php' );
 
 # DATABASE WILL BE OPENED HERE!!  THE DATABASE SHOULDN'T BE EXPLICITLY
 # OPENED ANYWHERE ELSE.
 require_once( 'database_api.php' );
 
 # PHP Sessions
 require_once( 'session_api.php' );
+require_once( 'forge_api.php' );
+
+
+$t_instance_inc_found = false;
+
+if ( auth_is_user_authenticated() )
+{	
+	$mantis_project_id = helper_get_current_project();
+	session_set( 'project_id', $mantis_project_id );	
+	
+	if ($mantis_project_id != null && $mantis_project_id != 0)
+	{
+		# config_inc may not be present if this is a new install
+		if ( file_exists( BASE_PATH.DIRECTORY_SEPARATOR.'conf-instance'.DIRECTORY_SEPARATOR.'config_status_'.$mantis_project_id.'.php' ) ) {
+			require_once( BASE_PATH.DIRECTORY_SEPARATOR.'conf-instance'.DIRECTORY_SEPARATOR.'config_status_'.$mantis_project_id.'.php' );	
+			$t_instance_inc_found = true;				
+	}
+}
+}	
+
+
+# Load internationalization functions (needed before database_api, in case database connection fails)
+require_once( 'conf_instance_file_api.php' );
+require_once( 'status_api.php' );
 
 # Initialize Event System
 require_once( 'event_api.php' );
 require_once( 'events_inc.php' );
 
@@ -192,16 +218,10 @@
 require_once( 'plugin_api.php' );
 if ( !defined( 'PLUGINS_DISABLED' ) ) {
 	plugin_init_installed();
 }
 
-# Authentication and user setup
-require_once( 'authentication_api.php' );
-require_once( 'project_api.php' );
-require_once( 'project_hierarchy_api.php' );
-require_once( 'user_api.php' );
-require_once( 'access_api.php' );
 
 # Wiki Integration
 if( config_get_global( 'wiki_enable' ) == ON ) {
 	require_once( 'wiki_api.php' );
 	wiki_init();
@@ -256,5 +276,7 @@
 }
 
 # signal plugins that the core system is loaded
 event_signal( 'EVENT_CORE_READY' );
 
+
+
diff -rNU5 mantisbt-1.2.5/.gitignore mantis_ard/.gitignore
--- mantisbt-1.2.5/.gitignore	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/.gitignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,40 +0,0 @@
-# Config files
-config_inc.php
-custom_constants_inc.php
-custom_functions_inc.php
-custom_relationships_inc.php
-custom_strings_inc.php
-mantis_offline.php
-
-# Files to be deprecated in v1.3
-custom_constant_inc.php
-
-# Docbook builds
-docbook/*/*/builddate
-docbook/*/*/build
-docbook/*/*/install
-
-# Build output
-build/
-
-# Untracked plugins
-plugins/*
-!plugins/MantisCoreFormatting
-!plugins/MantisGraph
-!plugins/XmlImportExport
-
-# IDE/Editor temporary files
-*~
-*.swp
-*.bak
-.buildpath
-.cache
-.project
-.settings
-
-# IIS7 
-web.config
-
-#libraries
-library/jpgraph
-library/FirePHPCore
diff -rNU5 mantisbt-1.2.5/lang/strings_english.txt mantis_ard/lang/strings_english.txt
--- mantisbt-1.2.5/lang/strings_english.txt	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/lang/strings_english.txt	2013-03-27 11:11:16.000000000 +0100
@@ -296,10 +296,26 @@
 $MANTIS_ERROR[ERROR_FORM_TOKEN_INVALID] = 'Invalid form security token. Did you submit the form twice by accident?';
 $MANTIS_ERROR[ERROR_INVALID_REQUEST_METHOD] = 'This page cannot be accessed using this method.';
 $MANTIS_ERROR[ERROR_INVALID_SORT_FIELD] = 'Invalid sort field.';
 $MANTIS_ERROR[ERROR_INVALID_DATE_FORMAT] = 'Invalid date format.';
 $MANTIS_ERROR[ERROR_UPDATING_TIMEZONE] = 'Unable to update timezone.';
+$MANTIS_ERROR[ERROR_STATUS_DUPLICATE_LABEL] = 'A status already exists with that label.';
+$MANTIS_ERROR[ERROR_STATUS_DUPLICATE_NAME_FRENCH] = 'A status already exists with that french name.';
+$MANTIS_ERROR[ERROR_STATUS_DUPLICATE_NAME_ENGLISH] = 'A status already exists with that english name.';
+$MANTIS_ERROR[ERROR_STATUS_INVALID_COLOR] = 'This color has a wrong format.';
+$MANTIS_ERROR[ERROR_STATUS_INVALID_LABEL] = 'This label has a wrong format.';
+$MANTIS_ERROR[ERROR_STATUS_OTHER_LANGUAGE_EMAIL] = 'Missing english email field to add an email in other language.';
+$MANTIS_ERROR[ERROR_STATUS_CLASSIFICATION_NUMBER] = 'Two status have the same number.';
+$MANTIS_ERROR[ERROR_STATUS_CLASSIFICATION_NUMBER_BORNS] = 'The weight of status has to be between those of bounds.';
+$MANTIS_ERROR[ERROR_STATUS_DELETE_WHEN_USE] = 'Impossible to delete this status : it is used.';
+$MANTIS_ERROR[ERROR_STATUS_LANGUAGE] = 'Sorry : impossible to manage status with this default language.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_DUPLICATE_LABEL] = 'A risk criteria already exists with that label.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_WEIGHT_INVALID] = 'This weighting as wrong format.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_SUM_WEIGHT_INVALID] = 'The sum of all weighting in a category has to be 100.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_LABEL] = 'The 6th evaluation label cannot be fill if the 5th is not.';
+
+
 
 $s_login_error = 'Your account may be disabled or blocked or the username/password you entered is incorrect.';
 $s_login_cookies_disabled = 'Your browser either does not know how to handle cookies, or refuses to handle them.';
 
 # General Strings
@@ -516,10 +532,11 @@
 
 # bug_assign.php
 $s_bug_assign_msg = 'Issue has been successfully assigned...';
 
 # bug_change_status_page.php
+$s_name_status = 'Name';
 $s_new_bug_title = 'New Issue';
 $s_feedback_bug_title = 'Request Feedback on Issue';
 $s_acknowledged_bug_title = 'Acknowledge Issue';
 $s_confirmed_bug_title = 'Confirm Issue';
 $s_assigned_bug_title = 'Assign Issue';
@@ -750,10 +767,11 @@
 $s_manage_global_profiles_link = 'Manage Global Profiles';
 $s_manage_plugin_link = 'Manage Plugins';
 $s_permissions_summary_report = 'Permissions Report';
 $s_manage_config_link = 'Manage Configuration';
 $s_manage_threshold_config = 'Workflow Thresholds';
+$s_manage_status_config = 'Bugs Status';
 $s_manage_email_config = 'E-mail Notifications';
 $s_manage_workflow_config = 'Workflow Transitions';
 $s_manage_tags_link = 'Manage Tags';
 $s_create_new_account_link = 'Create New Account';
 $s_projects_link = 'Projects';
@@ -831,10 +849,34 @@
 # manage_config_revert_page
 $s_config_delete_sure = 'Are you sure you want to delete the settings for:';
 $s_in_project = 'in project';
 $s_delete_config_button = 'Delete Settings';
 
+# manage_config_status_page.php
+$s_list_status = 'Status list';
+$s_manage_status = 'Manage bugs status';
+$s_language_status = 'Language(s)';
+$s_label_status = 'Label';
+$s_label_condition = '(only alphanumeric characters)';
+$s_name_status = 'Name';
+$s_classification_status = 'Classification';
+$s_update_classification = 'Update classification';
+$s_warning_classification_status = 'Be carefull about update classification : it could affect workflow thresholds and workflow transitions !';
+$s_title_status = 'Title';
+$s_button_status = 'Status button';
+$s_color_status = 'Color';
+$s_color_condition = '(six hexadecimal characters)';
+$s_email_status = 'Email notification';
+$s_default_email_status = 'The following bug has been...';
+$s_add_language = 'Add a language';
+$s_delete_language = 'Delete a language';
+$s_create_status = 'Create a new status';
+$s_update_status = 'Update status';
+$s_delete = 'Suppression';
+$s_delete_status = 'Delete status';
+$s_delete_status_conf_msg = 'Are you sure you wish to delete this status?';
+
 # adm_config_report.php
 $s_configuration_report = 'Configuration Report';
 $s_database_configuration = 'Database Configuration';
 $s_configuration_option = 'Configuration Option';
 $s_configuration_option_type = 'Type';
@@ -1298,11 +1340,11 @@
 $s_link_custom_field_to_project_title = 'Link custom field to project';
 $s_link_custom_field_to_project_button = 'Link Custom Field';
 $s_linked_projects = 'Linked Projects';
 
 $s_custom_field_sequence = 'Sequence';
-$s_custom_field_type_enum_string = '0:String,1:Numeric,2:Float,3:Enumeration,4:E-mail,5:Checkbox,6:List,7:Multiselection list,8:Date,9:Radio';
+$s_custom_field_type_enum_string = '0:String,1:Numeric,2:Float,3:Enumeration,4:E-mail,5:Checkbox,6:List,7:Multiselection list,8:Date,9:Radio,10:String area';
 
 $s_confirm_used_custom_field_deletion = 'This field is currently linked to at least one project. If you continue all values for this field will be permanently deleted. This action cannot be undone. If you do not want to delete this field, hit the Back button in your browser. To proceed, click the button below';
 $s_confirm_custom_field_deletion = 'Are you sure you want to delete this custom field and all associated values?';
 $s_field_delete_button = 'Delete Field';
 
@@ -1565,5 +1607,99 @@
 $s_month_august = 'August';
 $s_month_september = 'September';
 $s_month_october = 'October';
 $s_month_november = 'November';
 $s_month_december = 'December';
+
+
+# ARD
+$s_ard_select_project = 'Welcome on Mantis ARD ! Please select a project.';
+//Prism
+$s_prism_link = 'PRISM';
+$s_reporting_prism_link = 'View PRISM synthesis';
+$s_risk_criteria_configuration_link = 'Configure risk criterias';
+$s_risk_appreciation_link = 'Evaluate risks';
+//Risk criteria
+$s_list_risk_criteria = 'List of risk criterias';
+$s_create_risk_criteria = 'Create a risk criteria';
+$s_view_all_risk_criteria_link = 'Display risk criterias';
+$s_no_risk_criteria = 'No risk criteria';
+$s_label = 'Label';
+$s_weight = 'Weighting (by %)';
+$s_weight_info = '(weighting is updatable on risk criteria\'s list)';
+$s_evaluation = 'Evaluation';
+$s_evaluation1 = 'Evaluation label 1';
+$s_evaluation2 = 'Evaluation label 2';
+$s_evaluation3 = 'Evaluation label 3';
+$s_evaluation4 = 'Evaluation label 4';
+$s_evaluation5 = 'Evaluation label 5';
+$s_evaluation6 = 'Evaluation label 6';
+$s_no_indicator = 'none';
+$s_last_indicator = 'Previous indicator';
+$s_indicator = 'Indicator';
+$s_submit_risk_criteria_button = 'Submit risk criteria';
+$s_update_risk_criteria_button = 'Update risk criteria';
+$s_delete_risk_criteria_button = 'Delete risk criteria';
+$s_add_risk_criteria_link = 'Create risk criteria';
+$s_update_weight = 'Update weighting';
+$s_update_appreciation = 'Update evaluation';
+$s_delete_risk_criteria_conf_msg = 'Do you really want to delete with risk criteria?';
+//RiskActionDecision
+$s_view_actions_link = 'Actions';
+$s_view_risks_link = 'Risks';
+$s_view_decisions_link = 'Decisions';
+$s_view_evolutions_link = 'Evolutions';
+$s_context = 'Context';
+//$s_responsable_action = 'Responsable';
+//$s_responsable_risk = 'Responsable';
+//$s_responsable_decision = 'Responsable';
+$s_responsable = 'Responsable';
+$s_reference = 'Transmitter reference';
+$s_control = 'Control';
+$s_impact = 'Impact description';
+$s_state = 'State';
+$s_gravity = 'Gravity';
+$s_estimate_end = 'Estimate end date';
+$s_real_end = 'Real end date';
+$s_reestimate_end = 'Reestimate end date';
+$s_charge = 'Charge';
+$s_delivery = 'Delivery date';
+$s_mep = 'MEP date';
+$s_uc = 'UP (category precision)';
+$s_it = 'IT';
+//categories
+$s_categories_formule = '(D+2I+2C1+C2+E) or (D+2I+2C1+C2+E+A)*7/8 if A exists';
+$s_duration = 'duration';
+$s_integrity = 'integrity'; 
+$s_management_commitment = 'management commitment'; 
+$s_team_commitment = 'team commitment'; 
+$s_effort = 'effort';
+$s_other = 'other';
+$s_commitment_backlog = 'commitment backlog';
+$s_climb_backlog = 'climb backlog';
+$s_management_backlog = 'management backlog';
+$s_functional = 'functional';
+$s_organizational = 'organizational';
+$s_technical = 'technical';
+$s_cig = 'CIG';
+$s_ergonomy = 'ergonomy';
+$s_general = 'general';
+$s_business = 'métier';
+$s_archi = 'architecture';
+$s_specific = 'spécifique';
+$s_urgency_none = 'not urgent';
+$s_urgency_month = 'in the month';
+$s_urgency_fifteen = 'in the fifteen';
+$s_urgency_week = 'in the week';
+$s_urgency_immediate = 'immediately';
+$s_create_action = 'Create an action';
+$s_create_decision = 'Create a decision';
+$s_associate_actions = 'Associate actions';
+$s_associate_decisions = 'Associate decisions';
+$s_associate_risk = 'Associate to a risk :';
+$s_associate_action = 'Associate to an action :';
+$s_associate = 'Associate';
+$s_control_vlow = 'very low 10%';
+$s_control_low = 'low 30%';
+$s_control_middle = 'middle 50%';
+$s_control_high = 'high 70%';
+$s_control_vhigh = 'very high 90%'; 
diff -rNU5 mantisbt-1.2.5/lang/strings_french.txt mantis_ard/lang/strings_french.txt
--- mantisbt-1.2.5/lang/strings_french.txt	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/lang/strings_french.txt	2013-03-27 11:11:16.000000000 +0100
@@ -294,10 +294,28 @@
 $MANTIS_ERROR[ERROR_FORM_TOKEN_INVALID] = 'Jeton de sécurité du formulaire invalide. Avez-vous soumis deux fois le formulaire par accident ?';
 $MANTIS_ERROR[ERROR_INVALID_REQUEST_METHOD] = 'Impossible d\'afficher cette page avec cette fonction.';
 $MANTIS_ERROR[ERROR_INVALID_SORT_FIELD] = 'Champ de tri invalide.';
 $MANTIS_ERROR[ERROR_INVALID_DATE_FORMAT] = 'Format de date invalide.';
 $MANTIS_ERROR[ERROR_UPDATING_TIMEZONE] = 'Impossible de mettre à jour la zone horaire.';
+
+$MANTIS_ERROR[ERROR_STATUS_DUPLICATE_LABEL] = 'Un statut existe déjà  avec ce label.';
+$MANTIS_ERROR[ERROR_STATUS_DUPLICATE_NAME_FRENCH] = 'Un statut existe déjà  avec ce nom français.';
+$MANTIS_ERROR[ERROR_STATUS_DUPLICATE_NAME_ENGLISH] = 'Un statut existe déjà  avec ce nom anglais.';
+$MANTIS_ERROR[ERROR_STATUS_INVALID_COLOR] = 'Mauvais format de couleur.';
+$MANTIS_ERROR[ERROR_STATUS_INVALID_LABEL] = 'Mauvais format de label.';
+$MANTIS_ERROR[ERROR_STATUS_OTHER_LANGUAGE_EMAIL] = 'Il manque l\'email en anglais pour l\'ajouter dans d\'autre langage.';
+$MANTIS_ERROR[ERROR_STATUS_CLASSIFICATION_NUMBER] = 'Deux statut ont le méme classement.';
+$MANTIS_ERROR[ERROR_STATUS_CLASSIFICATION_NUMBER_BORNS] = 'Le poids des statuts doit étre compris entre ceux des bornes.';
+$MANTIS_ERROR[ERROR_STATUS_DELETE_WHEN_USE] = 'Impossible de supprimer ce statut : il est actuellement utilisé.';
+$MANTIS_ERROR[ERROR_STATUS_LANGUAGE] = 'Désolé : impossible de gérer les statut avec ce language par défaut.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_DUPLICATE_LABEL] = 'Un critère de risque existe déjà  avec ce label.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_WEIGHT_INVALID] = 'Mauvais format de pondération.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_SUM_WEIGHT_INVALID] = 'Le total des pondérations dans une catégorie doit étre égale à  100.';
+$MANTIS_ERROR[ERROR_RISK_CRITERIA_LABEL] = 'Le libellé d\'évaluation 6 ne peut étre rempli sans le 5.';
+
+
+
 $s_login_error = 'Votre compte est peut être désactivé ou alors le code utilisateur et le mot de passe que vous avez saisi sont incorrects.';
 $s_login_cookies_disabled = 'Votre navigateur ne sait pas gérer les témoins ou refuse de les gérer.';
 $s_go_back = 'Retour';
 $s_proceed = 'Poursuivre';
 $s_switch = 'Afficher';
@@ -330,10 +348,17 @@
 $s_new_account_signup_msg = 'Le compte suivant a été créé :';
 $s_reset_request_msg = 'Quelqu\'un (probablement vous) a demandé un changement de mot de passe avec vérification par courriel. Si ce n\'était pas vous, ignorez ce message et rien ne sera fait.
 
 Si vous avez demandé cette vérification, visitez l\'URL suivante pour changer votre mot de passe :';
 $s_reset_request_in_progress_msg = 'Si vous avez fourni le nom d\'utilisateur et l\'adresse de courriel corrects pour votre compte, nous vous avons maintenant envoyé un message de confirmation à cette adresse de courriel. Une fois le message reçu, suivez les instructions fournies pour changer le mot de passe de votre compte.';
+
+
+$s_email_notification_title_for_status_bug_lo = 'mp';
+$s_email_notification_title_for_status_bug_2 = 'szzs';
+$s_email_notification_title_for_status_bug_3 = 'a';
+$s_email_notification_title_for_status_bug_2 = 'sotry it';
+
 $s_email_notification_title_for_status_bug_new = 'Le bogue suivant est maintenant à l\'état « nouveau » (encore)';
 $s_email_notification_title_for_status_bug_feedback = 'Le bogue suivant nécessite votre commentaire.';
 $s_email_notification_title_for_status_bug_acknowledged = 'Le bogue suivant a été accepté.';
 $s_email_notification_title_for_status_bug_confirmed = 'Le bogue suivant a été confirmé.';
 $s_email_notification_title_for_status_bug_assigned = 'Le bogue suivant a été assigné.';
@@ -455,10 +480,21 @@
 $s_sponsor_show = 'Tout afficher';
 $s_payment_updated = 'Information de paiement mise à jour.';
 $s_account_updated_msg = 'Votre compte a été mis à jour avec succès...';
 $s_email_updated = 'Adresse de courriel mise à jour avec succès';
 $s_realname_duplicated = 'Ce nom réel est utilisé par un autre utilisateur';
+
+$s_lo_bug_title = 'mp';
+$s_2_bug_title = 'fdf';
+$s_3_bug_title = 'a';
+$s_2_bug_title = 'titre';
+$s_lo_bug_button = 'mp';
+$s_2_bug_button = 'dfd';
+$s_3_bug_button = 'a';
+$s_2_bug_button = 'bouton';
+
+
 $s_realname_updated = 'Nom réel mis à jour avec succès';
 $s_password_updated = 'Mot de passe mis à jour avec succès';
 $s_multiple_projects = 'Les bogues sélectionnés proviennent de différents projets. Les paramètres ci-dessous s\'appliquent à tous les projets. Si cela ne convient pas, sélectionnez un plus petit nombre de bogues.';
 $s_bug_assign_msg = 'Le bogue a été assigné avec succès...';
 $s_new_bug_title = 'Nouveau bogue';
@@ -491,11 +527,11 @@
 $s_resolved_bug_button = 'Résoudre le bogue';
 $s_bug_resolved_msg = 'Le bogue a été résolu. Entrez une note ci-dessous...';
 $s_resolve_add_bugnote_title = 'Ajouter une note pour la résolution du bogue';
 $s_bugnote_add_resolve_button = 'Ajouter une note';
 $s_from = 'De';
-$s_to = 'A';
+$s_to = 'à‚';
 $s_sent_you_this_reminder_about = 'vous a envoyé un rappel à propos de';
 $s_bug_reminder = 'Envoyer un rappel';
 $s_reminder_sent_to = 'Rappel envoyé à :';
 $s_bug_send_button = 'Envoyer';
 $s_reminder = 'Rappel';
@@ -618,10 +654,11 @@
 $s_manage_global_profiles_link = 'Gérer les profils globaux';
 $s_manage_plugin_link = 'Gérer les plugiciels';
 $s_permissions_summary_report = 'Rapport des permissions';
 $s_manage_config_link = 'Gérer la configuration';
 $s_manage_threshold_config = 'Seuils du cheminement de travail';
+$s_manage_status_config = 'Etats des bogues';
 $s_manage_email_config = 'Notifications par courriel';
 $s_manage_workflow_config = 'Cheminement de travail';
 $s_manage_tags_link = 'Gérer les balises';
 $s_create_new_account_link = 'Créer un nouveau compte';
 $s_projects_link = 'Projets';
@@ -1020,11 +1057,11 @@
 $s_custom_field_require_closed = 'Nécessaire à la fermeture';
 $s_link_custom_field_to_project_title = 'Lier un champ personnalisé au projet';
 $s_link_custom_field_to_project_button = 'Lier champ personnalisé';
 $s_linked_projects = 'Projets liés';
 $s_custom_field_sequence = 'Suite';
-$s_custom_field_type_enum_string = '0:Chaîne de caractères,1:Nombre entier,2:Nombre réel,3:Énumération,4:Courriel,5:Case à cocher,6:Liste,7:Liste à sélection multiple,8:Date,9:Bouton radio';
+$s_custom_field_type_enum_string = '0:Chaîne de caractères,1:Nombre entier,2:Nombre réel,3:Énumération,4:Courriel,5:Case à cocher,6:Liste,7:Liste à sélection multiple,8:Date,9:Bouton radio,10:Zone de texte';
 $s_confirm_used_custom_field_deletion = 'Ce champ est actuellement lié à au moins un projet.  Si vous continuez, toutes les valeurs de ce champ seront supprimées.  Cette action ne peut être annulée.  Si vous ne voulez pas supprimer ce champ, cliquer sur le bouton Retour de votre navigateur.  Sinon pour supprimer ce champ, cliquer sur le bouton ci dessous';
 $s_confirm_custom_field_deletion = 'Êtes vous sûr de vouloir supprimer ce champ personnalisé et toutes les valeurs associées ?';
 $s_field_delete_button = 'Supprimer le champ';
 $s_confirm_custom_field_unlinking = 'Êtes-vous certain de vouloir dissocier ce champ personnalisé du projet ? Les valeurs ne seront pas supprimées tant que le champ personnalisé ne sera pas supprimé.';
 $s_field_remove_button = 'Retirer le champ';
@@ -1227,5 +1264,126 @@
 $s_month_august = 'août';
 $s_month_september = 'septembre';
 $s_month_october = 'octobre';
 $s_month_november = 'novembre';
 $s_month_december = 'décembre';
+
+
+# manage_config_status_page.php
+$s_list_status = 'Liste des status';
+$s_manage_status = 'Gestion des status';
+$s_language_status = 'Langage(s)';
+$s_label_status = 'Libellé';
+$s_label_condition = '(seulement des caractères alphanumériques)';
+$s_name_status = 'Nom';
+$s_classification_status = 'Classification';
+$s_update_classification = 'Mis à  jour de la classification';
+$s_warning_classification_status = 'Attention à  la modification de la classification : cela peut affecter le cheminement de travail ou les seuils du cheminement de travail !';
+$s_title_status = 'Titre';
+$s_button_status = 'Bouton du status';
+$s_color_status = 'Couleur';
+$s_color_condition = '(six caractères héxadécimaux)';
+$s_email_status = 'Notification par email';
+$s_default_email_status = 'Le bug suivant a été...';
+$s_add_language = 'Ajouter un langage';
+$s_delete_language = 'Supprimer un langage';
+$s_create_status = 'Créer un nouveau status';
+$s_update_status = 'Mis à  jour du status';
+$s_delete = 'Suppression';
+$s_delete_status = 'Suppression du status';
+$s_delete_status_conf_msg = 'Etes vous sûre de vouloir supprimer ce status?';
+
+# ARD
+$s_select_project_message = 'Veuillez sélectionner un projet.';
+$s_no_bug_message = 'Il n\'existe pas encore de bogue';
+$s_ard_select_project = 'Bienvenue sur Mantis ARD ! Veuillez selectionner un projet.';
+//Prism
+$s_prism_link = 'PRISM';
+$s_reporting_prism_link = 'Visualiser la synthèse de PRISM';
+$s_risk_criteria_configuration_link = 'Paramétrer les critères de risque';
+$s_risk_appreciation_link = 'Valoriser les risques';
+//Risk criteria
+$s_list_risk_criteria = 'Liste des criteres de risque';
+$s_note_list_risk_criteria = 'La somme des pondérations de chaque catégorie doit égaler 100';
+$s_create_risk_criteria = 'Créer un critère de risque';
+$s_view_all_risk_criteria_link = 'Afficher les critères de risque';
+$s_no_risk_criteria = 'Aucun critère de risque';
+$s_label = 'Label';
+$s_weight = 'Pondération (en %)';
+$s_weight_info = '(la pondération est modifiable sur la liste des crières de risque)';
+$s_evaluation = 'Evaluation';
+$s_evaluation1 = 'Libellé d\'évaluation 1';
+$s_evaluation2 = 'Libellé d\'évaluation 2';
+$s_evaluation3 = 'Libellé d\'évaluation 3';
+$s_evaluation4 = 'Libellé d\'évaluation 4';
+$s_evaluation5 = 'Libellé d\'évaluation 5';
+$s_evaluation6 = 'Libellé d\'évaluation 6';
+$s_no_indicator = 'aucun';
+$s_last_indicator = 'Indicateur précédent';
+$s_indicator = 'Indicateur actuel';
+$s_submit_risk_criteria_button = 'Soumettre le critère de risque';
+$s_update_risk_criteria_button = 'Mettre à  jour le critère de risque';
+$s_delete_risk_criteria_button = 'Supprimer le critère de risque';
+$s_add_risk_criteria_link = 'Rapporter un critère de risque';
+$s_update_weight = 'Mise à  jour de la pondération';
+$s_update_appreciation = 'Mise à  jour de l\'appréciation';
+$s_delete_risk_criteria_conf_msg = 'Etes vous sûr de vouloir supprimer ce critère de risque ?';
+//RiskActionDecision
+$s_view_actions_link = 'Actions';
+$s_view_risks_link = 'Risques';
+$s_view_decisions_link = 'Décisions';
+$s_view_evolutions_link = 'Evolutions';
+$s_context = 'Contexte';
+//$s_responsable_action = 'Responsable';
+//$s_responsable_risk = 'Responsable';
+//$s_responsable_decision = 'Responsable';
+$s_responsable = 'Responsable';
+$s_reference = 'Référence chez l\'émetteur';
+$s_control = 'Maitrise';
+$s_impact = 'Description de l\'impact';
+$s_state = 'Etat';
+$s_gravity = 'Gravité';
+$s_estimate_end = 'Date de fin prévisionnelle';
+$s_real_end = 'Date de fin réelle';
+$s_reestimate_end = 'Date de fin réestimée';
+$s_charge = 'Charge';
+$s_delivery = 'Date de livraison';
+$s_mep = 'Date de MEP';
+$s_uc = 'UP (précision de la catégorie)';
+$s_it = 'IT';
+//categories
+$s_categories_formule = '(D+2I+2C1+C2+E) ou (D+2I+2C1+C2+E+A)*7/8 si A existe';
+$s_duration = 'durée (D)';
+$s_integrity = 'intégrité (I)'; 
+$s_management_commitment = 'engagement management (C1)'; 
+$s_team_commitment = 'engagement équipe (C2)'; 
+$s_effort = 'effort (E)';
+$s_other = 'autre (A)';
+$s_commitment_backlog = 'backlog d\'engagement';
+$s_climb_backlog = 'backlog d\'escalade';
+$s_management_backlog = 'backlog de pilotage';
+$s_functional = 'fonctionnel';
+$s_organizational = 'organisationnel';
+$s_technical = 'technique';
+$s_cig = 'CIG';
+$s_ergonomy = 'ergonomie';
+$s_general = 'général';
+$s_business = 'métier';
+$s_archi = 'architecture';
+$s_specific = 'spécifique';
+$s_urgency_none = 'non urgent';
+$s_urgency_month = 'dans le mois';
+$s_urgency_fifteen = 'dans la quinzaine';
+$s_urgency_week = 'dans la semaine';
+$s_urgency_immediate = 'immédiatement';
+$s_create_action = 'Créer une action';
+$s_create_decision = 'Créer une décision';
+$s_associate_actions = 'Associer des actions';
+$s_associate_decisions = 'Associer des décisions';
+$s_associate_risk = 'Associer à  un risque :';
+$s_associate_action = 'Associer à  une action :';
+$s_associate = 'Associer';
+$s_control_vlow = 'très faible 10%';
+$s_control_low = 'faible 30%';
+$s_control_middle = 'moyenne 50%';
+$s_control_high = 'élevée 70%';
+$s_control_vhigh = 'très élevée 90%'; 
diff -rNU5 mantisbt-1.2.5/login_page.php mantis_ard/login_page.php
--- mantisbt-1.2.5/login_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/login_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -25,15 +25,13 @@
 	 */
 	 /**
 	  * MantisBT Core API's
 	  */
 	require_once( 'core.php' );
-
 	if ( auth_is_user_authenticated() && !current_user_is_anonymous() ) {
 		print_header_redirect( config_get( 'default_home_page' ) );
 	}
-
 	$f_error		= gpc_get_bool( 'error' );
 	$f_cookie_error	= gpc_get_bool( 'cookie_error' );
 	$f_return		= string_sanitize_url( gpc_get_string( 'return', '' ) );
 	$f_username     = gpc_get_string( 'username', '' );
 	$f_perm_login	= gpc_get_bool( 'perm_login', false );
diff -rNU5 mantisbt-1.2.5/login.php mantis_ard/login.php
--- mantisbt-1.2.5/login.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/login.php	2013-03-27 11:11:16.000000000 +0100
@@ -31,21 +31,31 @@
 	$f_perm_login	= gpc_get_bool( 'perm_login' );
 	$t_return		= string_url( string_sanitize_url( gpc_get_string( 'return', config_get( 'default_home_page' ) ) ) );
 	$f_from			= gpc_get_string( 'from', '' );
 	$f_secure_session = gpc_get_bool( 'secure_session', false );
 
+	if ( CAS_AUTH == config_get( 'login_method' ) ) {
+		# This will detour to the CAS login page if needed
+		$f_password = '';
+		$f_username = auth_cas_get_name();
+		# User is always authenticated by this point
+	}
+
 	$f_username = auth_prepare_username($f_username);
 	$f_password = auth_prepare_password($f_password);
 
 	gpc_set_cookie( config_get_global( 'cookie_prefix' ) . '_secure_session', $f_secure_session ? '1' : '0' );
 
+
 	if ( auth_attempt_login( $f_username, $f_password, $f_perm_login ) ) {
 		session_set( 'secure_session', $f_secure_session );
-
-		$t_redirect_url = 'login_cookie_test.php?return=' . $t_return;
-
-	} else {
+		if (isset($_REQUEST['instance_id']))  {
+			$t_redirect_url = 'login_cookie_test.php?return=' .  get_project_return_url( gpc_get_string( 'instance_id' ) ) ;
+		} else {
+			$t_redirect_url = 'login_cookie_test.php?return=' . $t_return;
+		}
+	}  else {
 		$t_redirect_url = 'login_page.php?return=' . $t_return .
 			'&error=1&username=' . urlencode( $f_username ) .
 			'&perm_login=' . ( $f_perm_login ? 1 : 0 ) .
 			'&secure_session=' . ( $f_secure_session ? 1 : 0 );
 
@@ -54,5 +64,7 @@
 			exit;
 		}
 	}
 
 	print_header_redirect( $t_redirect_url );
+
+?>
diff -rNU5 mantisbt-1.2.5/main_page_ard.php mantis_ard/main_page_ard.php
--- mantisbt-1.2.5/main_page_ard.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/main_page_ard.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,57 @@
+<?php
+# MantisBT - a php based bugtracking system
+
+# MantisBT is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 2 of the License, or
+# (at your option) any later version.
+#
+# MantisBT is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with MantisBT.  If not, see <http://www.gnu.org/licenses/>.
+
+	/**
+	 * This is the first page a user sees when they login to the bugtracker
+	 * News is displayed which can notify users of any important changes
+	 *
+	 * @package MantisBT
+	 * @copyright Copyright (C) 2000 - 2002  Kenzaburo Ito - kenito@300baud.org
+	 * @copyright Copyright (C) 2002 - 2011  MantisBT Team - mantisbt-dev@lists.sourceforge.net
+	 * @link http://www.mantisbt.org
+	 */
+	 /**
+	  * MantisBT Core API's
+	  */
+	require_once( 'core.php' );
+
+	require_once( 'current_user_api.php' );
+	require_once( 'news_api.php' );
+	require_once( 'date_api.php' );
+	require_once( 'print_api.php' );
+	require_once( 'rss_api.php' );
+	
+	auth_ensure_user_authenticated();
+	$t_current_user_id = auth_get_current_user_id();
+	
+	access_ensure_project_level( VIEWER );
+
+	$f_offset = gpc_get_int( 'offset', 0 );
+
+	$t_project_id = helper_get_current_project();
+
+	html_page_top( lang_get( 'main_link' ) );
+
+	echo '<br /><div align="center">';
+	echo lang_get('ard_select_project');
+	echo '<div>';
+	
+	echo '<br />';
+	echo '<br />';
+
+
+	html_page_bottom();
+
diff -rNU5 mantisbt-1.2.5/main_page.php mantis_ard/main_page.php
--- mantisbt-1.2.5/main_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/main_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -31,11 +31,11 @@
 	require_once( 'current_user_api.php' );
 	require_once( 'news_api.php' );
 	require_once( 'date_api.php' );
 	require_once( 'print_api.php' );
 	require_once( 'rss_api.php' );
-
+	
 	access_ensure_project_level( VIEWER );
 
 	$f_offset = gpc_get_int( 'offset', 0 );
 
 	$t_project_id = helper_get_current_project();
@@ -44,14 +44,24 @@
 
 	if ( OFF != $t_rss_enabled && news_is_enabled() ) {
 		$t_rss_link = rss_get_news_feed_url( $t_project_id );
 		html_set_rss_link( $t_rss_link );
 	}
-
 	html_page_top( lang_get( 'main_link' ) );
 
-	if ( !current_user_is_anonymous() ) {
+	#when main_page cliqued, always display parent project
+	#warning about context project
+//	$g_project_override is set to null to allow setting new project
+/*	$parent_project_id = project_get_other_type_project_id('management');
+	if ( helper_get_current_project() != $parent_project_id ) {
+		global $g_project_override;
+		$g_project_override = null;
+		helper_set_current_project(project_get_other_type_project_id('management'));
+		//print_header_redirect( 'main_page.php' );
+		print_header_redirect( 'login.php' );
+	}*/
+	if ( !current_user_is_anonymous()) {
 		$t_current_user_id = auth_get_current_user_id();
 		$t_hide_status = config_get( 'bug_resolved_status_threshold' );
 		echo '<div class="quick-summary-left">';
 		echo lang_get( 'open_and_assigned_to_me' ) . ': ';
 		print_link( "view_all_set.php?type=1&handler_id=$t_current_user_id&hide_status=$t_hide_status", current_user_get_assigned_open_bug_count(), false, 'subtle' );
@@ -64,11 +74,11 @@
 
 		echo '<div class="quick-summary-left">';
 		echo lang_get( 'last_visit' ) . ': ';
 		echo date( config_get( 'normal_date_format' ), current_user_get_field( 'last_visit' ) );
 		echo '</div>';
-	}
+	}	
 
 	echo '<br />';
 	echo '<br />';
 
 	if ( news_is_enabled() ) {
diff -rNU5 mantisbt-1.2.5/manage_config_status_create.php mantis_ard/manage_config_status_create.php
--- mantisbt-1.2.5/manage_config_status_create.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/manage_config_status_create.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,158 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+ 
+# This page create the defined status
+
+require_once( 'core.php' );
+ 
+ 
+# --Check if the input (specified by its name) is filled
+function check_if_filled(&$_POST) {
+	global $g_language_status;
+	$filled = array();
+	$filled['label_status'] = $_POST['label_status'];
+	$filled['color_status'] = $_POST['color_status'];
+	foreach ( $g_language_status as $language ) {
+		$filled['name_status_'.$language] = $_POST['name_status_'.$language];
+		$filled['title_status_'.$language] = $_POST['title_status_'.$language];
+		$filled['button_status_'.$language] = $_POST['button_status_'.$language];
+		$filled['email_status_'.$language] = $_POST['email_status_'.$language];
+	}
+	session_set( 'filled_status', $filled );
+}
+
+function create_status() {
+	global $g_language_status;
+		
+	# --Label--
+	$f_label_status = gpc_get_string( 'label_status' );
+	#make sure the label status is not empty
+	if ( is_blank( $f_label_status ) ) {
+		error_parameters( 'label_status' );
+		trigger_error( ERROR_EMPTY_FIELD, ERROR );
+	}
+	#make sure the label is only alphanumerical caracters
+	elseif( !preg_match('/^[a-zA-Z0-9]+$/i', $f_label_status) ) {
+			error_parameters( 'label_status' );
+			trigger_error( ERROR_STATUS_INVALID_LABEL, ERROR );
+	}	
+	$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	foreach ( $t_enum_status as $t_to_status_id => $t_to_status_label ) {
+		if ( $f_label_status == $t_to_status_label ) {
+			error_parameters( 'label_status' );
+			trigger_error( ERROR_STATUS_DUPLICATE_LABEL, ERROR );
+		}
+	}
+	
+	# --Name--
+	$f_label_status_french = gpc_get_string( 'name_status_french' );
+	#make sure the french name status is not already existing
+	$t_enum_status_french = MantisEnum::getAssocArrayIndexedByValues( lang_get( 'status_enum_string_french' ) );
+	foreach ( $t_enum_status_french as $t_to_status_id => $t_to_status_label ) {
+		if ( $f_label_status_french == $t_to_status_label ) {
+			error_parameters( 'name_french' );
+			trigger_error( ERROR_STATUS_DUPLICATE_NAME_FRENCH, ERROR );
+		}
+	}
+	
+	$f_label_status_english = gpc_get_string( 'name_status_english' );
+	#make sure the english name status is not already existing
+	$t_enum_status_english = MantisEnum::getAssocArrayIndexedByValues( lang_get( 'status_enum_string_english' ) );
+	foreach ( $t_enum_status_english as $t_to_status_id => $t_to_status_label ) {
+		if ( $f_label_status_english == $t_to_status_label ) {
+			error_parameters( 'name_english' );
+			trigger_error( ERROR_STATUS_DUPLICATE_NAME_ENGLISH, ERROR );
+		}
+	}
+	
+	# --Color--
+	$f_color_status = gpc_get_string( 'color_status' );
+	#make sure the color status is a three hexadecimal number
+	if ( !is_blank( $f_color_status) ) {
+		if ( !preg_match('/^([0-9a-f]{2}){3}$/i', $f_color_status) ) {
+			error_parameters( 'color status' );
+			trigger_error( ERROR_STATUS_INVALID_COLOR, ERROR );
+		}
+	}
+	#color by default
+	else {
+		$f_color_status = "C8C8C8";
+	}
+	
+	# --title, button & email for each language
+	foreach ( $g_language_status as $language ) {
+		# --Name--
+		$f_name_status = gpc_get_string( 'name_status_'.$language );
+		if( is_blank($f_name_status) ) {
+			error_parameters( $language.' name status' );
+			trigger_error( ERROR_EMPTY_FIELD, ERROR );
+		}
+		$t_status_multi_language[$language]['name'] = $f_name_status;
+		
+		# --Title--
+		$f_title_status = gpc_get_string( 'title_status_'.$language );
+		if( is_blank($f_title_status) ) {
+			error_parameters( $language.' title status' );
+			trigger_error( ERROR_EMPTY_FIELD, ERROR );
+		}
+		$t_status_multi_language[$language]['title'] = $f_title_status;
+			
+		# --Button--
+		$f_button_status = gpc_get_string( 'button_status_'.$language );
+		if( is_blank($f_button_status) ) {
+			error_parameters( $language.' button status' );
+			trigger_error( ERROR_EMPTY_FIELD, ERROR );
+		}
+		$t_status_multi_language[$language]['button'] = $f_button_status;
+		
+		# --Email--
+		$f_email_status = gpc_get_string( 'email_status_'.$language );
+		if( !is_blank(gpc_get_string( 'email_status_'.DEFAULT_LANGUAGE )) ) {
+			if ( is_blank($f_email_status) ) {
+				error_parameters( $language.' email status' );
+				trigger_error( ERROR_EMPTY_FIELD, ERROR );		
+			}
+		}
+		else {
+			if ( !is_blank($f_email_status) ) {
+				error_parameters( $language.' email status' );
+				trigger_error( ERROR_STATUS_OTHER_LANGUAGE_EMAIL, ERROR );		
+			}
+		}
+		$t_status_multi_language[$language]['email'] = $f_email_status;  	
+	}
+	status_create( $f_label_status, $f_color_status, $t_status_multi_language);
+}
+
+if ( $_POST ) {
+	#put in session filled data
+	check_if_filled($_POST);
+	
+	# --Create submit
+	if ( $_POST['status_create'] ) {
+		create_status();
+		$redirect = 'manage_config_status_page.php';
+	}	
+	print_successful_redirect( $redirect );
+}
+
+//EOF
+?>
diff -rNU5 mantisbt-1.2.5/manage_config_status_page.php mantis_ard/manage_config_status_page.php
--- mantisbt-1.2.5/manage_config_status_page.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/manage_config_status_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,143 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+require_once( 'core.php' );
+
+auth_reauthenticate();
+
+html_page_top( lang_get( 'manage_status_config' ) );
+
+print_manage_menu( 'adm_permissions_report.php' );
+print_manage_config_menu( 'manage_config_status_page.php' );
+
+$t_project = helper_get_current_project();
+$t_fixed_status = array('new', 'closed');
+
+if (isset( $_SESSION[config_get_global( 'session_key' )]['language_status'] ) and count(session_get('language_status')) != 0) {
+	session_delete('language_status');
+}
+if (isset( $_SESSION[config_get_global( 'session_key' )]['filled_status'] ) and count(session_get('filled_status')) != 0) {
+	session_delete('filled_status');
+}
+
+#update classification
+if ( isset($_POST['update_classification']) ) {
+	$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	$t_number_array = array();
+	$t_classification_status['new'] = 1;
+	$t_classification_status['closed'] = count($t_enum_status);
+	foreach ( $t_enum_status as $t_to_status_id => $t_to_status_label ) {
+		if ( 'new' != $t_to_status_label && 'closed' != $t_to_status_label ) {
+			$f_classification_status = gpc_get_int( 'weight_'.$t_to_status_label );
+			if( is_blank($f_classification_status) ) {
+				error_parameters( ' classification '.$t_to_status_label );
+				trigger_error( ERROR_EMPTY_FIELD, ERROR );
+			}	
+			if ( in_array($f_classification_status, $t_number_array) ) {
+				error_parameters( 'classification number '.$t_to_status_label );
+				trigger_error( ERROR_STATUS_CLASSIFICATION_NUMBER, ERROR );
+			}	
+			if ( $t_classification_status['new'] >= $f_classification_status || 
+				$t_classification_status['closed'] <= $f_classification_status ) {
+				error_parameters( 'classification number '.$t_to_status_label );
+				trigger_error( ERROR_STATUS_CLASSIFICATION_NUMBER_BORNS, ERROR );
+			}
+			array_push($t_number_array, $f_classification_status);
+			$t_classification_status[$t_to_status_label] = $f_classification_status;
+		}   		
+	}
+	update_classification($t_classification_status);	
+	print_successful_redirect( 'manage_config_status_page.php' );
+}
+
+function indications() {
+	global $t_project;
+	if ( ALL_PROJECTS == $t_project ) {
+	    $t_project_title = lang_get( 'config_all_projects' );
+	} else {
+	    $t_project_title = sprintf( lang_get( 'config_project' ) , string_display( project_get_name( $t_project ) ) );
+	}
+	echo '<p class="bold">' . $t_project_title . '</p>' . "\n";
+	
+	echo lang_get( 'warning_classification_status' );
+	echo '<br/><br/>';
+}
+
+function section_begin(&$p_enum_status) {
+	echo '<table class="width100">';
+	echo '<tr><td class="form-title" colspan="4">' . strtoupper( lang_get( 'list_status' ) );
+	echo '<form method="post" action="manage_config_status_view.php">';
+	echo '<input type="submit" name="create_status" class="button" value="'. lang_get( 'create_status' ) . '"/></form></td></tr>' . "\n";
+	if ( count($p_enum_status) != 0 ) {
+		echo '<tr><td class="form-title" width="30%">' . lang_get( 'status' ) . '</td>';
+		echo '<td class="form-title" >' . lang_get( 'classification_status' ) . '</td>';
+		echo '<td class="form-title" >' . lang_get( 'title_status' ) . '</td>';
+		echo '<td class="form-title" >' . lang_get( 'email_status' ) . '</td></tr>';
+		echo "\n";
+	}
+}
+
+function status_row(&$p_enum_status) {
+	global $t_fixed_status;
+	$t_language = user_pref_get( auth_get_current_user_id() )->language;
+	if( $t_language != user_pref_get( auth_get_current_user_id() )->language) $t_language = 'english';
+	$i = 1;
+	foreach ( $p_enum_status as $t_to_status_id => $t_to_status_label ) {
+		$t_name_status = MantisEnum::getLabel( lang_get('status_enum_string_'.$t_language), $t_to_status_id);
+    	echo '<form method="post" action="manage_config_status_page.php">';
+		echo '<tr '.helper_alternate_class().' valign="top">';
+    	echo '<td bgcolor="'.get_status_color( $t_to_status_id ).'"><a href="manage_config_status_view.php?action=update&label='.$t_to_status_label.'" title="'.$t_to_status_label.' status">'.$t_name_status.'</a></td>';
+    	if ( in_array($t_to_status_label, $t_fixed_status) ) {	
+    		echo '<td><input size="3" type"text" disabled="disabled" name="weight_'.$t_to_status_label.'" value="'.$i.'" /></td>';		
+		}
+		else {	
+			echo '<td><input size="3" type"text" name="weight_'.$t_to_status_label.'" value="'.$i.'" /></td>';			
+		}
+    	echo '<td>'.lang_get( $t_to_status_label.'_bug_title_'.$t_language ).'</td>';
+		echo '<td>'.lang_get( 'email_notification_title_for_status_bug_'.$t_to_status_label.'_'.$t_language ).'</td><tr>';
+		$i++;
+	}
+}
+
+function section_end(&$p_enum_status) {
+	if ( count($p_enum_status) != 0 ) {
+		echo '<tr><td>';
+		echo '<input type="submit" name="update_classification" class="button" value="'. lang_get( 'update_classification' ) . '"/>';
+		echo '</td></tr></form>';
+	}
+	echo '</table><br />' . "\n";
+}
+echo '<br /><br />';
+
+indications();
+
+# Bugs status list
+$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+section_begin($t_enum_status);
+if ( count($t_enum_status) != 0 ) {
+	status_row($t_enum_status);
+} 
+section_end($t_enum_status);
+
+html_page_bottom();
+
+//EOF
+?>
diff -rNU5 mantisbt-1.2.5/manage_config_status_update.php mantis_ard/manage_config_status_update.php
--- mantisbt-1.2.5/manage_config_status_update.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/manage_config_status_update.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,283 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+ 
+# This page update the listed status
+
+require_once( 'core.php' );
+
+# ------------------
+# Check if the input (specified by its name) is filled
+function check_if_filled(&$_POST) {
+	global $g_language_status;
+	$filled = array();
+	if ( isset($_POST['label_status']) and $_POST['label_status'] != "" ) {
+		$filled['label_status'] = $_POST['label_status'];
+	}
+	$filled['color_status'] = $_POST['color_status'];
+	foreach ( $g_language_status as $language ) {
+		$filled['name_status_'.$language] = $_POST['name_status_'.$language];
+		$filled['title_status_'.$language] = $_POST['title_status_'.$language];
+		$filled['button_status_'.$language] = $_POST['button_status_'.$language];
+		$filled['email_status_'.$language] = $_POST['email_status_'.$language];
+	}
+	session_set( 'filled_status', $filled );
+}
+
+# ------------------
+# Check if the form is ok, and if so, update the status
+function update_status(&$p_label_status) {
+	global $g_language_status;
+	check_if_filled($_POST);
+	
+	# --Color--
+	$f_color_status = gpc_get_string( 'color_status' );
+	#make sure the color status is a three hexadecimal number
+	if ( !is_blank( $f_color_status) ) {
+		if ( !preg_match('/^([0-9a-f]{2}){3}$/i', $f_color_status) ) {
+			error_parameters( 'color status' );
+			trigger_error( ERROR_STATUS_INVALID_COLOR, ERROR );
+		}
+	}
+	#color by default
+	else {
+		$f_color_status = "C8C8C8";
+	}
+	# --title, button & email for each language
+	foreach ( $g_language_status as $language ) {
+		# --Name--
+		$f_name_status = gpc_get_string( 'name_status_'.$language );
+		if( is_blank($f_name_status) ) {
+			error_parameters( $language.' name status' );
+			trigger_error( ERROR_EMPTY_FIELD, ERROR );
+		}
+		$t_status_multi_language[$language]['name'] = $f_name_status;
+		
+		# --Title--
+		$f_title_status = gpc_get_string( 'title_status_'.$language );
+		if( is_blank($f_title_status) ) {
+			error_parameters( $language.' title status' );
+			trigger_error( ERROR_EMPTY_FIELD, ERROR );
+		}
+		$t_status_multi_language[$language]['title'] = $f_title_status;
+			
+		# --Button--
+		$f_button_status = gpc_get_string( 'button_status_'.$language );
+		if( is_blank($f_button_status) ) {
+			error_parameters( $language.' button status' );
+			
+			trigger_error( ERROR_EMPTY_FIELD, ERROR );
+		}
+		$t_status_multi_language[$language]['button'] = $f_button_status;
+		
+		# --Email--
+		$f_email_status = gpc_get_string( 'email_status_'.$language );
+		if( !is_blank(gpc_get_string( 'email_status_'.DEFAULT_LANGUAGE )) ) {
+			if ( is_blank($f_email_status) ) {
+				error_parameters( $language.' email status' );
+				trigger_error( ERROR_EMPTY_FIELD, ERROR );		
+			}
+		}
+		else {
+			if ( !is_blank($f_email_status) ) {
+				error_parameters( $language.' email status' );
+				trigger_error( ERROR_STATUS_OTHER_LANGUAGE_EMAIL, ERROR );		
+			}
+		}
+		$t_status_multi_language[$language]['email'] = $f_email_status; 
+	} 
+	
+	status_update( $p_label_status, $f_color_status, $t_status_multi_language);		
+}
+
+
+# ------------------
+# Delete all reference about the specified status in the workflow
+function delete_workflow(&$p_label_status) {
+	$t_project_id = helper_get_current_project();
+	$t_global_workflow = parse_workflow( config_get( 'status_enum_workflow', null, null, $t_project_id) );
+	$t_id_status = MantisEnum::getValue( config_get('status_enum_string'), $p_label_status);
+	$t_workflow = array();
+	foreach ( $t_global_workflow as $key => $t_type ) {
+		if ( $key == "entry" ) {
+			foreach ( $t_type as $t_id => $value ) {
+				if ( $t_id != 0 and $t_id !=  $t_id_status) {
+					$t_workflow_enum = "";
+					foreach ( $value as $key => $value3 ) {
+						if ( $key != 0 and $key !=  $t_id_status) {
+							$t_label_status = MantisEnum::getLabel( config_get('status_enum_string'), $key);
+							$t_workflow_enum .= $key.":".$t_label_status.",";
+						}
+					} 
+					$t_workflow_enum = substr(trim($t_workflow_enum),0,-1);
+					$t_workflow[$t_id] = $t_workflow_enum;
+				}
+			} 
+		}
+	}
+	config_set( 'status_enum_workflow', $t_workflow, null, $t_project_id);
+}
+
+# ------------------
+# Check if the status is not in use, if so, delete the status
+function delete_status(&$p_label_status) {	
+	# -- Bug association
+	//TODO warning page number
+	$f_page_number		= gpc_get_int( 'page_number', 1 );
+	$t_per_page = null;
+	$t_bug_count = null;
+	$t_page_count = null;
+	$rows = filter_get_bug_rows( $f_page_number, $t_per_page, $t_page_count, $t_bug_count, null, null, null, true );
+
+	for( $i=0; $i < count( $rows ); $i++ ) {
+		$t_row = $rows[$i];
+		$t_status_label = MantisEnum::getLabel( config_get( 'status_enum_string' ), $t_row->status );
+		if ( $t_status_label == $p_label_status ) {
+			error_parameters( 'deleting status '.$p_label_status );
+			trigger_error( ERROR_STATUS_DELETE_WHEN_USE, ERROR );		
+		}
+	}
+	
+	# -- Threshold association
+	#All thresholds (manage_config_work_threshold_page.php)
+	$t_workflow_thresholds = array('bug_submit_status', 'bug_reopen_status', 'bug_reopen_resolution', 'bug_resolved_status_threshold', 'bug_readonly_status_threshold', 'bug_assigned_status' );
+	
+	$t_project_workflow = parse_workflow( config_get( 'status_enum_workflow' ) );
+	
+	#Get the id of the status to delete
+	$t_id_status = MantisEnum::getValue( config_get('status_enum_string'), $p_label_status);
+	
+	#Check all default workflow value
+	$t_status_enum_string = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+	foreach ( $t_status_enum_string as $t_status_id => $t_status_label ) {
+		if ( $t_id_status == $t_project_workflow['default'][$t_status_id] ) {
+			error_parameters( 'deleting status '.$p_label_status );
+			trigger_error( ERROR_STATUS_DELETE_WHEN_USE, ERROR );		
+		}	   
+	}
+	#Check all used thresholds
+	foreach ( $t_workflow_thresholds as $threshold ) {
+       $t_status_id = config_get( $threshold );
+		if ( $t_id_status == $t_status_id) {			
+			error_parameters( 'deleting status '.$p_label_status );
+			trigger_error( ERROR_STATUS_DELETE_WHEN_USE, ERROR );	
+		}
+	}
+	
+}
+
+function parse_workflow( $p_enum_workflow ) {
+    $t_status_arr  = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+    if ( 0 == count( $p_enum_workflow ) ) {
+        # workflow is not set, default it to all transitions
+        foreach ( $t_status_arr as $t_status => $t_label ) {
+	        $t_temp_workflow = array();
+		    foreach ( $t_status_arr as $t_next => $t_next_label ) {
+			    if ( $t_status <> $t_next ) {
+			       $t_temp_workflow[] = $t_next . ':' . $t_next_label;
+			    }
+		    }
+	        $p_enum_workflow[$t_status] = implode( ',', $t_temp_workflow );
+	    }
+    }
+
+	$t_entry = array();
+	$t_exit = array();
+
+	# prepopulate new bug state (bugs go from nothing to here)
+	$t_submit_status_array = config_get( 'bug_submit_status' );
+	$t_new_label = MantisEnum::getLabel( lang_get( 'status_enum_string' ), config_get( 'bug_submit_status' ) );
+	if ( is_array( $t_submit_status_array ) ) {
+		# @@@ (thraxisp) this is not implemented in bug_api.php
+		foreach ($t_submit_status_array as $t_access => $t_status ) {
+			$t_entry[$t_status][0] = $t_new_label;
+			$t_exit[0][$t_status] = $t_new_label;
+		}
+	} else {
+		$t_status = $t_submit_status_array;
+		$t_entry[$t_status][0] = $t_new_label;
+		$t_exit[0][$t_status] = $t_new_label;
+	}
+
+    # add user defined arcs and implicit reopen arcs
+	$t_reopen = config_get( 'bug_reopen_status' );
+	$t_reopen_label = MantisEnum::getLabel( lang_get( 'resolution_enum_string' ), config_get( 'bug_reopen_resolution' ) );
+	$t_resolved_status = config_get( 'bug_resolved_status_threshold' );
+	$t_default = array();
+	foreach ( $t_status_arr as $t_status => $t_status_label ) {
+		if ( isset( $p_enum_workflow[$t_status] ) ) {
+			$t_next_arr = MantisEnum::getAssocArrayIndexedByValues( $p_enum_workflow[$t_status] );
+			foreach ( $t_next_arr as $t_next => $t_next_label) {
+                if ( !isset( $t_default[$t_status] ) ) {
+	                $t_default[$t_status] = $t_next;
+	            }
+				$t_exit[$t_status][$t_next] = '';
+				$t_entry[$t_next][$t_status] = '';
+			}
+		} else {
+			$t_exit[$t_status] = array();
+		}
+		if ( $t_status >= $t_resolved_status ) {
+			$t_exit[$t_status][$t_reopen] = $t_reopen_label;
+			$t_entry[$t_reopen][$t_status] = $t_reopen_label;
+		}
+		if ( !isset( $t_entry[$t_status] ) ) {
+			$t_entry[$t_status] = array();
+		}
+	}
+    return array( 'entry' => $t_entry, 'exit' => $t_exit, 'default' => $t_default );
+}
+
+
+
+$t_label_status = null;
+foreach ( $_POST as $key => $value ) {
+
+	# --UPDATE STATUS--
+	if ( ereg("status_update", $key) ) {
+    	$t_label_status = str_replace('status_update_', '', $key);
+		update_status($t_label_status);
+		$redirect = 'manage_config_status_page.php';
+    	break;
+	}
+	# --DELETE STATUS--
+	elseif ( ereg("status_delete", $key) ) {
+    	$t_label_status = str_replace('status_delete_', '', $key);
+		delete_status($t_label_status);
+		$redirect = 'manage_config_status_view.php?action=delete&label='.$t_label_status;
+    	break;
+	}
+	# --CONFIRM DELETE STATUS--
+	elseif ( ereg("status_confirm_delete", $key) ) {
+    	$t_label_status = str_replace('status_confirm_delete_', '', $key);
+		status_delete($t_label_status);
+		delete_workflow($t_label_status);
+		$redirect = 'manage_config_status_page.php';
+    	break;
+	}
+	else {
+		//ERROR NO ACTION
+	}
+}
+
+print_successful_redirect( $redirect );	
+
+//EOF	
+?>
diff -rNU5 mantisbt-1.2.5/manage_config_status_view.php mantis_ard/manage_config_status_view.php
--- mantisbt-1.2.5/manage_config_status_view.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/manage_config_status_view.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,304 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+ 
+# This page display either the specific value in url or a new form 
+
+require_once( 'core.php' );
+
+auth_reauthenticate();
+
+html_page_top( lang_get( 'manage_status_config' ) );
+
+print_manage_menu( 'adm_permissions_report.php' );
+print_manage_config_menu( 'manage_config_status_page.php' );
+
+$t_pref = user_pref_get( auth_get_current_user_id() );
+$language_status = array('french', 'english');
+$t_label_status = '';
+
+
+# ------------------
+# Display a row with an input type text
+function display_row_input(&$p_action, $p_field, $p_required) {
+	global $language_status, $filled;
+	
+	echo '<tr '.helper_alternate_class().' valign="top"><td>';
+	if ( $p_required ) {
+		echo '<span class="required">*</span>';
+	}
+	echo lang_get( $p_field.'_status' ).'</td><td>';
+	foreach ( $language_status as $language ) {
+		display_input($filled, $p_field, $language);
+	} 
+	echo '</td></tr>';
+}	
+
+# ------------------
+# Display a row with an submit type text
+function display_row_submit($p_actions, $p_label_status = false) {
+	global $t_label_status;
+	
+	echo '<tr><td class="left"><span class="required"> * '.lang_get( 'required' ).'</span></td>';
+	echo '<td class="center" colspan="2">';
+	foreach ( $p_actions as $p_action ) {
+       	$t_value = "status_".$p_action;
+		if ( $p_label_status ) {
+			$t_value .= '_'.$t_label_status;
+		}
+   		echo '<input type="submit" name="'.$t_value.'" class="button" value="'.lang_get( $p_action.'_status' ).'" />';
+	}
+	echo '</td></tr>';
+}
+		
+		
+
+# ------------------
+# Display an input type text
+function display_input(&$filled, $p_field, &$p_language) {
+	global $g_language_status, $t_label_status;
+	$t_name_field = $p_field.'_status';
+	if ( $t_label_status != '' ) {
+		
+		#if form filled
+		if ( $filled != null ) {
+			if ( array_key_exists($p_field.'_status_'.$p_language, $filled) ) {
+				$value = $filled[$p_field.'_status_'.$p_language];
+			}
+			echo '<input type="text" name="'.$t_name_field.'_'.$p_language.'" value="'.$value.'" size="32" maxlength="32" />&nbsp&nbsp'.$p_language.'<br/>';
+		}
+		#elseif existing data about input (first display)
+		elseif ( in_array($p_language, $g_language_status) ) {
+			if ( $p_field === NAME ) {
+				$t_status_names = MantisEnum::getAssocArrayIndexedByValues( lang_get( 'status_enum_string_'.$p_language ) );
+				$t_status_enum_string = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
+				$t_id_status = array_search($t_label_status, $t_status_enum_string);
+				$value = $t_status_names[$t_id_status];	
+				echo '<input type="text" name="'.$t_name_field.'_'.$p_language.'" value="'.$value.'" size="32" maxlength="32" />&nbsp&nbsp'.$p_language.'<br/>';
+			}
+			else {
+				switch ( $p_field ) {
+					case TITLE:
+						$value = $t_label_status.'_bug_title_'.$p_language;
+						break;
+					case BUTTON:
+						$value = $t_label_status.'_bug_button_'.$p_language;
+						break;
+					case EMAIL:
+						$value = 'email_notification_title_for_status_bug_'.$t_label_status.'_'.$p_language;
+						break;
+				}
+				echo '<input type="text" name="'.$t_name_field.'_'.$p_language.'" value="'.lang_get($value).'" size="32" maxlength="32" />&nbsp&nbsp'.$p_language.'<br/>';
+			}
+			
+		}
+		else {
+			echo '<input type="text" name="'.$t_name_field.'_'.$p_language.'" value="" size="32" maxlength="32" />&nbsp&nbsp'.$p_language.'<br/>';
+		}			
+	}
+	else {
+		if ( $filled != null ) {
+			if ( array_key_exists($p_field.'_status_'.$p_language, $filled) ) {
+				$value = $filled[$p_field.'_status_'.$p_language];
+			}
+		}
+		echo '<input type="text" name="'.$t_name_field.'_'.$p_language.'" value="'.$value.'" size="32" maxlength="32" />&nbsp&nbsp'.$p_language.'<br/>';
+	}
+}
+
+
+# --DELETE--
+if (  isset($_GET['action']) and $_GET['action'] == "delete" ) {
+	$t_action = DELETE;	
+	if (  isset($_GET['label']) and $_GET['label'] != "" ) {
+		$t_label_status = $_GET['label'];
+	}
+}
+# --UPDATE--
+elseif ( (isset($_GET['action']) and $_GET['action'] == "update") or isset($_POST['status_update'])) {
+	$t_action = UPDATE;	
+	if (  isset($_GET['label']) and $_GET['label'] != "" ) {
+		$t_label_status = $_GET['label'];
+		#data filled by the user	
+		if (isset( $_SESSION[config_get_global( 'session_key' )]['filled_status'] ) and count(session_get('filled_status')) != 0)
+		{
+			$filled = session_get('filled_status');
+			$value_color_status = $filled['color_status'];
+		} 
+		else {
+			#get color
+			$t_status_colors = config_get( 'status_colors' );
+			$value_color_status = strtoupper(substr($t_status_colors[$t_label_status], 1));
+		}
+	}
+}
+# --CREATE--
+else {
+	$t_action = CREATE;
+	# --Date filled
+	if (isset( $_SESSION[config_get_global( 'session_key' )]['filled_status'] ) and count(session_get('filled_status')) != 0 and !isset($_POST['create_status']) )
+	{
+		$filled = session_get('filled_status');
+		$value_label_status = $filled['label_status'];
+		$value_color_status = $filled['color_status'];
+		$value_name_status = $filled['name_status'];
+	} 
+	else {
+		$value_label_status = "";
+		$value_color_status = "";
+		$value_name_status = "";
+	}		
+}
+
+# --Displaying
+if ( $t_action === CREATE ) {  ?>
+	
+	<!-- Config Set Form -->
+	<form method="post" action="manage_config_status_create.php">
+		<table class="width100" cellspacing="1">
+		
+		<!-- Table Title -->
+		<tr>
+			<td class="form-title" colspan="3">
+				<?php echo lang_get( 'manage_status' ) ?>
+			</td>
+		</tr>
+		<!-- Label -->
+		<tr <?php echo helper_alternate_class() ?> valign="top">
+			<td>
+				<?php echo '<span class="required">*</span>', lang_get( 'label_status' ) ?>
+			</td>
+			<td colspan="2">
+				<input type="text" name="label_status" value="<?php echo $value_label_status ?>" size="64" maxlength="64" />
+				<?php echo lang_get( 'label_condition'); ?>
+			</td>
+		</tr>
+		<!-- Color -->
+		<tr <?php echo helper_alternate_class() ?> valign="top">
+			<td>
+				<?php echo lang_get( 'color_status' ) ?>
+			</td>
+			<td colspan="2">
+					<input type="text" name="color_status" value="<?php echo $value_color_status ?>" size="6" maxlength="6" />
+					<?php echo lang_get( 'color_condition'); ?>
+			</td>
+		</tr>
+		<?php
+		# --Status name--
+		display_row_input($t_action, NAME, true); 
+		
+		# --Status title--
+		display_row_input($t_action, TITLE, true); 
+		
+		# --Status button--
+		display_row_input($t_action, BUTTON, true); 
+		
+		# --Email--
+		display_row_input($t_action, EMAIL, false); 
+		
+		# --Submit Button--
+		display_row_submit(array('create'));
+		?>
+		</table>
+	</form>
+<?php
+}
+# -- UPDATE
+elseif ( $t_action === UPDATE ) {  ?>
+	<!-- Config Set Form -->
+	<form method="post" action="manage_config_status_update.php">
+		<table class="width100" cellspacing="1">
+		
+		<!-- Table Title -->
+		<tr>
+			<td class="form-title" colspan="3">
+				<?php echo lang_get( 'manage_status' ) ?>
+			</td>
+		</tr>
+		<!-- Label -->
+		<tr <?php echo helper_alternate_class() ?> valign="top">
+			<td>
+				<?php echo '<span class="required">*</span>', lang_get( 'label_status' ) ?>
+			</td>
+			<td colspan="2">
+				<?php echo $t_label_status; ?>
+			</td>
+		</tr>
+		<!-- Color -->
+		<tr <?php echo helper_alternate_class() ?> valign="top">
+			<td>
+				<?php echo lang_get( 'color_status' ) ?>
+			</td>
+			<td colspan="2">
+					<input type="text" name="color_status" value="<?php echo $value_color_status; ?>" size="6" maxlength="6" />
+					<?php echo lang_get( 'color_condition'); ?>
+			</td>
+		</tr>
+		<?php
+		# --Status name--
+		display_row_input($t_action, NAME, true);
+		
+		# --Status title--
+		display_row_input($t_action, TITLE, true);
+		
+		# --Status button--
+		display_row_input($t_action, BUTTON, true); 
+		
+		# --Email button--
+		display_row_input($t_action, EMAIL, false); 
+		
+		# --Submit Button--
+		display_row_submit(get_actions_with_status($t_label_status) , true);
+		?>
+		
+		</table>
+	</form>
+<?php
+}
+elseif ( $t_action === DELETE ) {
+	?>
+	<div align="center">
+		<form method="post" action="manage_config_status_update.php">
+			<table class="width75" cellspacing="1">
+				<tr class="row-1">
+					<td class="category" colspan="2">
+						<?php echo lang_get( 'delete_status_conf_msg' ); ?>
+					</td>
+				</tr>
+				<tr>
+					<td class="center" colspan="2">
+						<input type="submit" name="<?php echo "status_confirm_delete_$t_label_status" ?>" class="button" value="<?php echo lang_get( 'delete_status' ) ?>" />
+					</td>
+				</tr>
+			</table>
+		</form>
+	</div>
+	<?php
+} 
+
+# delete session
+if (isset( $_SESSION[config_get_global( 'session_key' )]['filled_status'] ) and count(session_get('filled_status')) != 0) {
+	session_delete('filled_status');
+}
+
+html_page_bottom();
+
+//EOF
+?>
diff -rNU5 mantisbt-1.2.5/manage_config_workflow_page.php mantis_ard/manage_config_workflow_page.php
--- mantisbt-1.2.5/manage_config_workflow_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/manage_config_workflow_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -35,10 +35,11 @@
 	print_manage_config_menu( 'manage_config_workflow_page.php' );
 
 	$t_access = current_user_get_access_level();
 	$t_project = helper_get_current_project();
 	$t_can_change_workflow = $t_access >= config_get_access( 'status_enum_workflow' );
+    $t_status_fixed = config_get('status_fixed');
 	$t_can_change_flags = $t_can_change_workflow;
 	$t_overrides = array();
 
 	function set_overrides( $p_config ) {
 	   global $t_overrides;
@@ -110,17 +111,30 @@
     }
 
 
 	# Get the value associated with the specific action and flag.
 	function show_flag( $p_from_status_id, $p_to_status_id ) {
-		global $t_can_change_workflow, $t_overrides, $t_file_workflow, $t_global_workflow, $t_project_workflow, $t_colour_global, $t_colour_project;
+		global $t_status_fixed, $t_can_change_workflow, $t_overrides, $t_file_workflow, $t_global_workflow, $t_project_workflow, $t_colour_global, $t_colour_project;
+
+            //TODO ARD 
+//		$t_default_workflow = false;
+		
+		//col and row does not represent the same status
 		if ( $p_from_status_id <> $p_to_status_id ) {
             $t_file = isset( $t_file_workflow['exit'][$p_from_status_id][$p_to_status_id] ) ? 1 : 0 ;
             $t_global = isset( $t_global_workflow['exit'][$p_from_status_id][$p_to_status_id] ) ? 1 : 0 ;
             $t_project = isset( $t_project_workflow['exit'][$p_from_status_id][$p_to_status_id] ) ? 1 : 0;
 
             $t_colour = '';
+            //TODO ARD 
+			// if status workflow contains default fixed status, update is not allowed
+//            $t_status_workflow = config_get('status_enum_workflow');
+//			$t_status_workflow = MantisEnum::getAssocArrayIndexedByValues( $t_status_workflow[$p_from_status_id] );
+//			if ( $t_status_workflow[$p_to_status_id] != null && in_array($t_status_workflow[$p_to_status_id], $t_status_fixed)) {
+//				$t_default_workflow = true;
+//			}
+			
             if ( $t_global != $t_file ) {
                 $t_colour = ' bgcolor="' . $t_colour_global . '" '; # all projects override
                 if ( $t_can_change_workflow ) {
                     set_overrides( 'status_enum_workflow' );
                 }
@@ -133,23 +147,27 @@
             }
             $t_value = '<td class="center"' . $t_colour . '>';
 
 			$t_flag = ( 1 == $t_project );
 			$t_label = $t_flag ? $t_project_workflow['exit'][$p_from_status_id][$p_to_status_id] : '';
-
-			if ( $t_can_change_workflow ) {
+//TODO ARD 
+//			if ( $t_can_change_workflow && !$t_default_workflow ) {
+			if ( $t_can_change_workflow && !$t_default_workflow ) {
 				$t_flag_name = $p_from_status_id . ':' . $p_to_status_id;
 				$t_set = $t_flag ? "checked=\"checked\"" : "";
-				$t_value .= "<input type=\"checkbox\" name=\"flag[]\" value=\"$t_flag_name\" $t_set />";
+				#Mantis 992: ARDE : pas d'états figés (pour l'ordre)
+				$t_value .= "<input disabled=\"true\" type=\"checkbox\" name=\"flag[]\" value=\"$t_flag_name\" $t_set />";
 			} else {
 				$t_value .= $t_flag ? '<img src="images/ok.gif" width="20" height="15" title="X" alt="X" />' : '&#160;';
 			}
 
 			if ( $t_flag && ( '' != $t_label ) ) {
 				$t_value .= '<br />(' . $t_label . ')';
 			}
-		} else {
+		} 
+		//nothing
+		else {
             $t_value = '<td>&#160;';
 		}
 
 		$t_value .= '</td>';
 
@@ -178,11 +196,11 @@
 		global $t_file_workflow, $t_global_workflow, $t_project_workflow, $t_colour_global, $t_colour_project, $t_can_change_workflow;
 		$t_enum_status = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
 		echo '<tr ' . helper_alternate_class() . '><td>' . string_no_break( MantisEnum::getLabel( lang_get( 'status_enum_string' ), $p_from_status ) ) . '</td>';
 		foreach ( $t_enum_status as $t_to_status_id => $t_to_status_label ) {
 			echo show_flag( $p_from_status, $t_to_status_id );
-		}
+		}	
 
         $t_file = isset( $t_file_workflow['default'][$p_from_status] ) ? $t_file_workflow['default'][$p_from_status] : 0 ;
         $t_global = isset( $t_global_workflow['default'][$p_from_status] ) ? $t_global_workflow['default'][$p_from_status] : 0 ;
         $t_project = isset( $t_project_workflow['default'][$p_from_status] ) ? $t_project_workflow['default'][$p_from_status] : 0;
 
@@ -199,11 +217,12 @@
                 set_overrides( 'status_enum_workflow' );
             }
         }
 		echo '<td class="center"' . $t_colour . '>';
 		if ( $t_can_change_workflow ) {
-            echo '<select name="default_' . $p_from_status . '">';
+			#Mantis 992: ARDE : pas d'états figés (pour l'ordre)
+            echo '<select disabled=\"true\" name="default_' . $p_from_status . '">';
             print_enum_string_option_list( 'status', $t_project );
             echo '</select>';
         } else {
             echo MantisEnum::getLabel( lang_get( 'status_enum_string' ), $t_project );
         }
@@ -449,11 +468,12 @@
 	}
 	section_end();
 
 	if ( $t_can_change_workflow ) {
 		echo '<p>' . lang_get( 'workflow_change_access' ) . ':';
-		echo '<select name="workflow_access">';
+		#Mantis 992: ARDE : pas d'états figés (pour l'ordre)
+		echo '<select disabled=\"true\" name="workflow_access">';
 		print_enum_string_option_list( 'access_levels', config_get_access( 'status_enum_workflow' ) );
 		echo '</select> </p><br />';
 	}
 
 	# display the access levels required to move an issue
diff -rNU5 mantisbt-1.2.5/manage_config_workflow_set.php mantis_ard/manage_config_workflow_set.php
--- mantisbt-1.2.5/manage_config_workflow_set.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/manage_config_workflow_set.php	2013-03-27 11:11:16.000000000 +0100
@@ -57,11 +57,10 @@
 	# process the workflow by reversing the flags to a matrix and creating the appropriate string
 	if( config_get_access( 'status_enum_workflow' ) <= $t_access ) {
 		$f_value = gpc_get( 'flag', array() );
 		$f_access = gpc_get( 'workflow_access' );
 		$t_matrix = array();
-
 		foreach( $f_value as $t_transition ) {
 			list( $t_from, $t_to ) = explode( ':', $t_transition );
 			$t_matrix[$t_from][$t_to] = '';
 		}
 		$t_statuses = MantisEnum::getAssocArrayIndexedByValues( config_get( 'status_enum_string' ) );
diff -rNU5 mantisbt-1.2.5/manage_custom_field_proj_add.php mantis_ard/manage_custom_field_proj_add.php
--- mantisbt-1.2.5/manage_custom_field_proj_add.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/manage_custom_field_proj_add.php	2013-03-27 11:11:16.000000000 +0100
@@ -38,11 +38,10 @@
 	foreach ( $f_project_id as $t_proj_id ) {
 		if ( access_has_project_level( $t_manage_project_threshold, $t_proj_id ) ) {
 			if ( !custom_field_is_linked( $f_field_id, $t_proj_id ) ) {
 				custom_field_link( $f_field_id, $t_proj_id );
 			}
-
 			custom_field_set_sequence( $f_field_id, $t_proj_id, $f_sequence );
 		}
 	}
 
 	form_security_purge('manage_custom_field_proj_add');
diff -rNU5 mantisbt-1.2.5/my_view_page.php mantis_ard/my_view_page.php
--- mantisbt-1.2.5/my_view_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/my_view_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -28,11 +28,10 @@
 	require_once( 'compress_api.php' );
 	require_once( 'filter_api.php' );
 	require_once( 'last_visited_api.php' );
 
 	auth_ensure_user_authenticated();
-
 	$t_current_user_id = auth_get_current_user_id();
 
 	# Improve performance by caching category data in one pass
 	category_get_all_rows( helper_get_current_project() );
 
@@ -67,105 +66,112 @@
 
 <div align="center">
 <table class="hide" border="0" cellspacing="3" cellpadding="0">
 
 <?php
-	$t_status_legend_position = config_get( 'status_legend_position' );
-
-	if ( $t_status_legend_position == STATUS_LEGEND_POSITION_TOP || $t_status_legend_position == STATUS_LEGEND_POSITION_BOTH ) {
-		echo '<tr>';
-		echo '<td colspan="2">';
-		html_status_legend();
-		echo '</td>';
-		echo '</tr>';
-	}
-
-	$t_number_of_boxes = count ( $t_boxes );
-	$t_boxes_position = config_get( 'my_view_boxes_fixed_position' );
-	$t_counter = 0;
-
-	while (list ($t_box_title, $t_box_display) = each ($t_boxes)) {
-		# don't display bugs that are set as 0
-		if ($t_box_display == 0) {
-			$t_number_of_boxes = $t_number_of_boxes - 1;
-		}
-
-		# don't display "Assigned to Me" bugs to users that bugs can't be assigned to
-		else if ( $t_box_title == 'assigned' && ( current_user_is_anonymous() OR user_get_assigned_open_bug_count( $t_current_user_id, $t_project_id ) == 0 ) ) {
-			$t_number_of_boxes = $t_number_of_boxes - 1;
-		}
-
-		# don't display "Monitored by Me" bugs to users that can't monitor bugs
-		else if ( $t_box_title == 'monitored' && ( current_user_is_anonymous() OR !access_has_project_level( config_get( 'monitor_bug_threshold' ), $t_project_id, $t_current_user_id ) ) ) {
-			$t_number_of_boxes = $t_number_of_boxes - 1;
+	if ( project_get_type_management() != 'management' ) {
+		$t_status_legend_position = config_get( 'status_legend_position' );
+		if ( $t_status_legend_position == STATUS_LEGEND_POSITION_TOP || $t_status_legend_position == STATUS_LEGEND_POSITION_BOTH ) {
+			echo '<tr>';
+			echo '<td colspan="2">';
+			html_status_legend();
+			echo '</td>';
+			echo '</tr>';
 		}
-
-		# don't display "Reported by Me" bugs to users that can't report bugs
-		else if ( in_array( $t_box_title, array( 'reported', 'feedback', 'verify' ) ) &&
-				( current_user_is_anonymous() OR !access_has_project_level( config_get( 'report_bug_threshold' ), $t_project_id, $t_current_user_id ) ) ) {
-			$t_number_of_boxes = $t_number_of_boxes - 1;
-		}
-
-		# display the box
-		else {
-			$t_counter++;
-
-			# check the style of displaying boxes - fixed (ie. each box in a separate table cell) or not
-			if ( ON == $t_boxes_position ) {
-				# for even box number start new row and column
-				if ( 1 == $t_counter%2 ) {
-					echo '<tr><td valign="top" width="50%">';
-					include 'my_view_inc.php';
-					echo '</td>';
-				}
-
-				# for odd box number only start new column
-				else if ( 0 == $t_counter%2 ) {
-					echo '<td valign="top" width="50%">';
-					include 'my_view_inc.php';
-					echo '</td></tr>';
-				}
+	
+		$t_number_of_boxes = count ( $t_boxes );
+		$t_boxes_position = config_get( 'my_view_boxes_fixed_position' );
+		$t_counter = 0;
+	
+		while (list ($t_box_title, $t_box_display) = each ($t_boxes)) {
+			# don't display bugs that are set as 0
+			if ($t_box_display == 0) {
+				$t_number_of_boxes = $t_number_of_boxes - 1;
 			}
-			else if ( OFF == $t_boxes_position ) {
-				# start new table row and column for first box
-				if ( 1 == $t_counter ) {
-					echo '<tr><td valign="top" width="50%">';
-				}
-
-				# start new table column for the second half of boxes
-				if ( $t_counter == ceil ($t_number_of_boxes/2) + 1 ) {
-					echo '<td valign="top" width="50%">';
+	
+			# don't display "Assigned to Me" bugs to users that bugs can't be assigned to
+			else if ( $t_box_title == 'assigned' && ( current_user_is_anonymous() OR user_get_assigned_open_bug_count( $t_current_user_id, $t_project_id ) == 0 ) ) {
+				$t_number_of_boxes = $t_number_of_boxes - 1;
+			}
+	
+			# don't display "Monitored by Me" bugs to users that can't monitor bugs
+			else if ( $t_box_title == 'monitored' && ( current_user_is_anonymous() OR !access_has_project_level( config_get( 'monitor_bug_threshold' ), $t_project_id, $t_current_user_id ) ) ) {
+				$t_number_of_boxes = $t_number_of_boxes - 1;
+			}
+	
+			# don't display "Reported by Me" bugs to users that can't report bugs
+			else if ( in_array( $t_box_title, array( 'reported', 'feedback', 'verify' ) ) &&
+					( current_user_is_anonymous() OR !access_has_project_level( config_get( 'report_bug_threshold' ), $t_project_id, $t_current_user_id ) ) ) {
+				$t_number_of_boxes = $t_number_of_boxes - 1;
+			}
+	
+			# display the box
+			else {
+				$t_counter++;
+	
+				# check the style of displaying boxes - fixed (ie. each box in a separate table cell) or not
+				if ( ON == $t_boxes_position ) {
+					# for even box number start new row and column
+					if ( 1 == $t_counter%2 ) {
+						echo '<tr><td valign="top" width="50%">';
+						include 'my_view_inc.php';
+						echo '</td>';
+					}
+	
+					# for odd box number only start new column
+					else if ( 0 == $t_counter%2 ) {
+						echo '<td valign="top" width="50%">';
+						include 'my_view_inc.php';
+						echo '</td></tr>';
+					}
 				}
-
-				# display the required box
-				include 'my_view_inc.php';
-				echo '<br />';
-
-				# close the first column for first half of boxes
-				if ( $t_counter == ceil ($t_number_of_boxes/2) ) {
-					echo '</td>';
+				else if ( OFF == $t_boxes_position ) {
+					# start new table row and column for first box
+					if ( 1 == $t_counter ) {
+						echo '<tr><td valign="top" width="50%">';
+					}
+	
+					# start new table column for the second half of boxes
+					if ( $t_counter == ceil ($t_number_of_boxes/2) + 1 ) {
+						echo '<td valign="top" width="50%">';
+					}
+	
+					# display the required box
+					include 'my_view_inc.php';
+					echo '<br />';
+	
+					# close the first column for first half of boxes
+					if ( $t_counter == ceil ($t_number_of_boxes/2) ) {
+						echo '</td>';
+					}
 				}
 			}
 		}
+	
+	
+		# Close the box groups depending on the layout mode and whether an empty cell
+		# is required to pad the number of cells in the last row to the full width of
+		# the table.
+		if ( ON == $t_boxes_position && $t_counter == $t_number_of_boxes && 1 == $t_counter%2 ) {
+			echo '<td valign="top" width="50%"></td></tr>';
+		} else if ( OFF == $t_boxes_position && $t_counter == $t_number_of_boxes ) {
+			echo '</td></tr>';
+		}
+	
+		if ( $t_status_legend_position == STATUS_LEGEND_POSITION_BOTTOM || $t_status_legend_position == STATUS_LEGEND_POSITION_BOTH ) {
+			echo '<tr>';
+			echo '<td colspan="2">';
+				html_status_legend();
+			echo '</td>';
+			echo '</tr>';
+		}
 	}
-
-
-	# Close the box groups depending on the layout mode and whether an empty cell
-	# is required to pad the number of cells in the last row to the full width of
-	# the table.
-	if ( ON == $t_boxes_position && $t_counter == $t_number_of_boxes && 1 == $t_counter%2 ) {
-		echo '<td valign="top" width="50%"></td></tr>';
-	} else if ( OFF == $t_boxes_position && $t_counter == $t_number_of_boxes ) {
-		echo '</td></tr>';
-	}
-
-	if ( $t_status_legend_position == STATUS_LEGEND_POSITION_BOTTOM || $t_status_legend_position == STATUS_LEGEND_POSITION_BOTH ) {
-		echo '<tr>';
-		echo '<td colspan="2">';
-		html_status_legend();
-		echo '</td>';
-		echo '</tr>';
+	#ARD management page : do not display all user bugs because of potential conflicts between bugs'status
+	else {
+		echo '<tr><td><div align="center">';
+		echo lang_get('select_project_message');
+		echo '<div></td></tr>';
 	}
 ?>
 
 </table>
 </div>
diff -rNU5 mantisbt-1.2.5/phpCAS.log mantis_ard/phpCAS.log
--- mantisbt-1.2.5/phpCAS.log	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/phpCAS.log	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,568 @@
+9490 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+9490 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+9490 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+9490 .|    <= ''
+9490 .<= ''
+9490 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+9490 .|    Not a logout request [Client.php:1467]
+9490 .<= ''
+9490 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+9490 .<= ''
+9490 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+9490 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+9490 .<= ''
+9490 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+9490 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+9490 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+9490 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+9490 .|    |    |    |    no user found [Client.php:1373]
+9490 .|    |    |    <= false
+9490 .|    |    |    no ticket found [Client.php:1256]
+9490 .|    |    <= false
+9490 .|    |    => CAS_Client::redirectToCas(false) [Client.php:1090]
+9490 .|    |    |    => CAS_Client::getServerLoginURL(false, false) [Client.php:1394]
+9490 .|    |    |    |    => CAS_Client::getURL() [Client.php:326]
+9490 .|    |    |    |    |    Final URI: http://localhost/mantisRAD/view_all_bug_page.php [Client.php:3060]
+9490 .|    |    |    |    <= 'http://localhost/mantisRAD/view_all_bug_page.php'
+9490 .|    |    |    <= 'https://localhost:8443/cas/login?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Fview_all_bug_page.php'
+9490 .|    |    |    Redirect to : https://localhost:8443/cas/login?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Fview_all_bug_page.php [Client.php:1400]
+9490 .|    |    |    exit()
+9490 .|    |    |    -
+9490 .|    |    -
+9490 .|    -
+2E48 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+2E48 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+2E48 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+2E48 .|    |    Ticket 'ST-109-Han3o99WCMeAleg7qZDW-cas01.example.org' found [Client.php:868]
+2E48 .|    <= ''
+2E48 .<= ''
+2E48 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+2E48 .|    Not a logout request [Client.php:1467]
+2E48 .<= ''
+2E48 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+2E48 .<= ''
+2E48 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+2E48 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+2E48 .<= ''
+2E48 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+2E48 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+2E48 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+2E48 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+2E48 .|    |    |    |    no user found [Client.php:1373]
+2E48 .|    |    |    <= false
+2E48 .|    |    |    CAS 2.0 ticket `ST-109-Han3o99WCMeAleg7qZDW-cas01.example.org' is present [Client.php:1221]
+2E48 .|    |    |    => CAS_Client::validateCAS20('', NULL, NULL) [Client.php:1222]
+2E48 .|    |    |    |     [Client.php:2736]
+2E48 .|    |    |    |    => CAS_Client::getServerServiceValidateURL() [Client.php:2742]
+2E48 .|    |    |    |    |    => CAS_Client::getURL() [Client.php:415]
+2E48 .|    |    |    |    |    |    Final URI: http://localhost/mantisRAD/view_all_bug_page.php [Client.php:3060]
+2E48 .|    |    |    |    |    <= 'http://localhost/mantisRAD/view_all_bug_page.php'
+2E48 .|    |    |    |    <= 'https://localhost:8443/cas/serviceValidate?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Fview_all_bug_page.php'
+2E48 .|    |    |    |    => CAS_Client::_readURL('https://localhost:8443/cas/serviceValidate?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Fview_all_bug_page.php&ticket=ST-109-Han3o99WCMeAleg7qZDW-cas01.example.org', NULL, NULL, NULL) [Client.php:2751]
+2E48 .|    |    |    |    |    => CAS_Request_CurlRequest::sendRequest() [AbstractRequest.php:218]
+2E48 .|    |    |    |    |    |    Response Body: 
+2E48 .|    |    |    |    |    |    
+2E48 .|    |    |    |    |    |    
+2E48 .|    |    |    |    |    |    <cas:serviceResponse xmlns:cas='http://www.yale.edu/tp/cas'>
+2E48 .|    |    |    |    |    |    	<cas:authenticationSuccess>
+2E48 .|    |    |    |    |    |    		<cas:user>admin1</cas:user>
+2E48 .|    |    |    |    |    |    
+2E48 .|    |    |    |    |    |    
+2E48 .|    |    |    |    |    |    	</cas:authenticationSuccess>
+2E48 .|    |    |    |    |    |    </cas:serviceResponse>
+2E48 .|    |    |    |    |    |     [CurlRequest.php:82]
+2E48 .|    |    |    |    |    <= true
+2E48 .|    |    |    |    <= true
+2E48 .|    |    |    |    => CAS_Client::_readExtraAttributesCas20(DOMNodeList) [Client.php:2802]
+2E48 .|    |    |    |    |    Testing for rubycas style attributes [Client.php:2912]
+2E48 .|    |    |    |    <= ''
+2E48 .|    |    |    |    Storing Proxy List [Client.php:2811]
+2E48 .|    |    |    |    => CAS_ProxyChain_AllowedList::isProxyListAllowed(array ()) [Client.php:2814]
+2E48 .|    |    |    |    |    No proxies were found in the response [AllowedList.php:81]
+2E48 .|    |    |    |    <= true
+2E48 .|    |    |    |    => CAS_Client::_renameSession('ST-109-Han3o99WCMeAleg7qZDW-cas01.example.org') [Client.php:2845]
+2E48 .|    |    |    |    |    Session ID: ST-109-Han3o99WCMeAleg7qZDW-cas01exampleorg [Client.php:3163]
+2E48 .|    |    |    |    |    Restoring old session vars [Client.php:3166]
+2E48 .|    |    |    |    <= ''
+2E48 .|    |    |    <= true
+2E48 .|    |    |    CAS 2.0 ticket `ST-109-Han3o99WCMeAleg7qZDW-cas01.example.org' was validated [Client.php:1223]
+2E48 .|    |    |    => CAS_Client::getURL() [Client.php:1277]
+2E48 .|    |    |    <= 'http://localhost/mantisRAD/view_all_bug_page.php'
+2E48 .|    |    |    Prepare redirect to : http://localhost/mantisRAD/view_all_bug_page.php [Client.php:1277]
+2E48 .|    |    |    => CAS_Client::getURL() [Client.php:1278]
+2E48 .|    |    |    <= 'http://localhost/mantisRAD/view_all_bug_page.php'
+2E48 .|    |    |    exit()
+2E48 .|    |    |    -
+2E48 .|    |    -
+2E48 .|    -
+F94E .START phpCAS-1.3.1 ****************** [CAS.php:451]
+F94E .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+F94E .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+F94E .|    <= ''
+F94E .<= ''
+F94E .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+F94E .|    Not a logout request [Client.php:1467]
+F94E .<= ''
+F94E .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+F94E .<= ''
+F94E .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+F94E .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+F94E .<= ''
+F94E .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+F94E .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+F94E .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+F94E .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+F94E .|    |    |    |    user = `admin1' [Client.php:1363]
+F94E .|    |    |    <= true
+F94E .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+F94E .|    |    <= true
+F94E .|    |    no need to authenticate [Client.php:1083]
+F94E .|    <= true
+F94E .<= ''
+1A7E .START phpCAS-1.3.1 ****************** [CAS.php:451]
+1A7E .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+1A7E .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+1A7E .|    <= ''
+1A7E .<= ''
+1A7E .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+1A7E .|    Not a logout request [Client.php:1467]
+1A7E .<= ''
+1A7E .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+1A7E .<= ''
+1A7E .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+1A7E .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+1A7E .<= ''
+1A7E .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+1A7E .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+1A7E .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+1A7E .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+1A7E .|    |    |    |    user = `admin1' [Client.php:1363]
+1A7E .|    |    |    <= true
+1A7E .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+1A7E .|    |    <= true
+1A7E .|    |    no need to authenticate [Client.php:1083]
+1A7E .|    <= true
+1A7E .<= ''
+276B .START phpCAS-1.3.1 ****************** [CAS.php:451]
+276B .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+276B .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+276B .|    <= ''
+276B .<= ''
+276B .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+276B .|    Not a logout request [Client.php:1467]
+276B .<= ''
+276B .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+276B .<= ''
+276B .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+276B .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+276B .<= ''
+276B .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+276B .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+276B .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+276B .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+276B .|    |    |    |    user = `admin1' [Client.php:1363]
+276B .|    |    |    <= true
+276B .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+276B .|    |    <= true
+276B .|    |    no need to authenticate [Client.php:1083]
+276B .|    <= true
+276B .<= ''
+21F1 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+21F1 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+21F1 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+21F1 .|    <= ''
+21F1 .<= ''
+21F1 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+21F1 .|    Not a logout request [Client.php:1467]
+21F1 .<= ''
+21F1 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+21F1 .<= ''
+21F1 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+21F1 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+21F1 .<= ''
+21F1 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+21F1 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+21F1 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+21F1 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+21F1 .|    |    |    |    user = `admin1' [Client.php:1363]
+21F1 .|    |    |    <= true
+21F1 .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+21F1 .|    |    <= true
+21F1 .|    |    no need to authenticate [Client.php:1083]
+21F1 .|    <= true
+21F1 .<= ''
+1607 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+1607 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+1607 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+1607 .|    <= ''
+1607 .<= ''
+1607 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+1607 .|    Not a logout request [Client.php:1467]
+1607 .<= ''
+1607 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+1607 .<= ''
+1607 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+1607 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+1607 .<= ''
+1607 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+1607 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+1607 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+1607 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+1607 .|    |    |    |    user = `admin1' [Client.php:1363]
+1607 .|    |    |    <= true
+1607 .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+1607 .|    |    <= true
+1607 .|    |    no need to authenticate [Client.php:1083]
+1607 .|    <= true
+1607 .<= ''
+4960 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+4960 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+4960 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+4960 .|    <= ''
+4960 .<= ''
+4960 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+4960 .|    Not a logout request [Client.php:1467]
+4960 .<= ''
+4960 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+4960 .<= ''
+4960 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+4960 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+4960 .<= ''
+4960 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+4960 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+4960 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+4960 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+4960 .|    |    |    |    user = `admin1' [Client.php:1363]
+4960 .|    |    |    <= true
+4960 .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+4960 .|    |    <= true
+4960 .|    |    no need to authenticate [Client.php:1083]
+4960 .|    <= true
+4960 .<= ''
+3E2A .START phpCAS-1.3.1 ****************** [CAS.php:451]
+3E2A .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+3E2A .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+3E2A .|    <= ''
+3E2A .<= ''
+3E2A .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+3E2A .|    Not a logout request [Client.php:1467]
+3E2A .<= ''
+3E2A .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+3E2A .<= ''
+3E2A .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+3E2A .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+3E2A .<= ''
+3E2A .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+3E2A .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+3E2A .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+3E2A .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+3E2A .|    |    |    |    user = `admin1' [Client.php:1363]
+3E2A .|    |    |    <= true
+3E2A .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+3E2A .|    |    <= true
+3E2A .|    |    no need to authenticate [Client.php:1083]
+3E2A .|    <= true
+3E2A .<= ''
+883A .START phpCAS-1.3.1 ****************** [CAS.php:451]
+883A .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+883A .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+883A .|    <= ''
+883A .<= ''
+883A .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+883A .|    Not a logout request [Client.php:1467]
+883A .<= ''
+883A .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+883A .<= ''
+883A .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+883A .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+883A .<= ''
+883A .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+883A .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+883A .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+883A .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+883A .|    |    |    |    user = `admin1' [Client.php:1363]
+883A .|    |    |    <= true
+883A .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+883A .|    |    <= true
+883A .|    |    no need to authenticate [Client.php:1083]
+883A .|    <= true
+883A .<= ''
+6482 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+6482 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+6482 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+6482 .|    <= ''
+6482 .<= ''
+6482 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+6482 .|    Not a logout request [Client.php:1467]
+6482 .<= ''
+6482 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+6482 .<= ''
+6482 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+6482 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+6482 .<= ''
+6482 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+6482 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+6482 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+6482 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+6482 .|    |    |    |    user = `admin1' [Client.php:1363]
+6482 .|    |    |    <= true
+6482 .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+6482 .|    |    <= true
+6482 .|    |    no need to authenticate [Client.php:1083]
+6482 .|    <= true
+6482 .<= ''
+7254 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+7254 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+7254 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+7254 .|    <= ''
+7254 .<= ''
+7254 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+7254 .|    Not a logout request [Client.php:1467]
+7254 .<= ''
+7254 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+7254 .<= ''
+7254 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+7254 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+7254 .<= ''
+7254 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+7254 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+7254 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+7254 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+7254 .|    |    |    |    user = `admin1' [Client.php:1363]
+7254 .|    |    |    <= true
+7254 .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+7254 .|    |    <= true
+7254 .|    |    no need to authenticate [Client.php:1083]
+7254 .|    <= true
+7254 .<= ''
+52F5 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+52F5 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+52F5 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+52F5 .|    <= ''
+52F5 .<= ''
+52F5 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+52F5 .|    Logout requested [Client.php:1474]
+52F5 .|    SAML REQUEST: <samlp:LogoutRequest xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol" ID="LR-89-dGxcworQWWl6IpnYa32LO9W2LnRAlkoZxRp" Version="2.0" IssueInstant="2012-11-19T20:51:43Z"><saml:NameID xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">@NOT_USED@</saml:NameID><samlp:SessionIndex>ST-109-Han3o99WCMeAleg7qZDW-cas01.example.org</samlp:SessionIndex></samlp:LogoutRequest> [Client.php:1476]
+52F5 .|    No access control set [Client.php:1495]
+52F5 .|    Logout command allowed [Client.php:1500]
+52F5 .|    Ticket to logout: ST-109-Han3o99WCMeAleg7qZDW-cas01.example.org [Client.php:1509]
+52F5 .|    Session id: ST-109-Han3o99WCMeAleg7qZDW-cas01exampleorg [Client.php:1521]
+52F5 .|    Session ST-109-Han3o99WCMeAleg7qZDW-cas01exampleorg destroyed [Client.php:1537]
+52F5 .|    exit()
+52F5 .|    -
+1CBB .START phpCAS-1.3.1 ****************** [CAS.php:451]
+1CBB .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+1CBB .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+1CBB .|    <= ''
+1CBB .<= ''
+1CBB .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+1CBB .|    Not a logout request [Client.php:1467]
+1CBB .<= ''
+1CBB .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+1CBB .<= ''
+1CBB .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+1CBB .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+1CBB .<= ''
+1CBB .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+1CBB .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+1CBB .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+1CBB .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+1CBB .|    |    |    |    no user found [Client.php:1373]
+1CBB .|    |    |    <= false
+1CBB .|    |    |    no ticket found [Client.php:1256]
+1CBB .|    |    <= false
+1CBB .|    |    => CAS_Client::redirectToCas(false) [Client.php:1090]
+1CBB .|    |    |    => CAS_Client::getServerLoginURL(false, false) [Client.php:1394]
+1CBB .|    |    |    |    => CAS_Client::getURL() [Client.php:326]
+1CBB .|    |    |    |    |    Final URI: http://localhost/mantisRAD/my_view_page.php [Client.php:3060]
+1CBB .|    |    |    |    <= 'http://localhost/mantisRAD/my_view_page.php'
+1CBB .|    |    |    <= 'https://localhost:8443/cas/login?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Fmy_view_page.php'
+1CBB .|    |    |    Redirect to : https://localhost:8443/cas/login?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Fmy_view_page.php [Client.php:1400]
+1CBB .|    |    |    exit()
+1CBB .|    |    |    -
+1CBB .|    |    -
+1CBB .|    -
+C3D2 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+C3D2 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+C3D2 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+C3D2 .|    <= ''
+C3D2 .<= ''
+C3D2 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+C3D2 .|    Not a logout request [Client.php:1467]
+C3D2 .<= ''
+C3D2 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+C3D2 .<= ''
+C3D2 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+C3D2 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+C3D2 .<= ''
+C3D2 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+C3D2 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+C3D2 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+C3D2 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+C3D2 .|    |    |    |    no user found [Client.php:1373]
+C3D2 .|    |    |    <= false
+C3D2 .|    |    |    no ticket found [Client.php:1256]
+C3D2 .|    |    <= false
+C3D2 .|    |    => CAS_Client::redirectToCas(false) [Client.php:1090]
+C3D2 .|    |    |    => CAS_Client::getServerLoginURL(false, false) [Client.php:1394]
+C3D2 .|    |    |    |    => CAS_Client::getURL() [Client.php:326]
+C3D2 .|    |    |    |    |    Final URI: http://localhost/mantisRAD/login.php?instance_id=4279eab1-f1a3-4279-b5a8-9ce352f14fec&uuid=a348014d-370b-47e7-9bd2-f1dfa40a0788&xdm_e=http%3A%2F%2Flocalhost%3A9000&xdm_c=default6817&xdm_p=1 [Client.php:3060]
+C3D2 .|    |    |    |    <= 'http://localhost/mantisRAD/login.php?instance_id=4279eab1-f1a3-4279-b5a8-9ce352f14fec&uuid=a348014d-370b-47e7-9bd2-f1dfa40a0788&xdm_e=http%3A%2F%2Flocalhost%3A9000&xdm_c=default6817&xdm_p=1'
+C3D2 .|    |    |    <= 'https://localhost:8443/cas/login?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Flogin.php%3Finstance_id%3D4279eab1-f1a3-4279-b5a8-9ce352f14fec%26uuid%3Da348014d-370b-47e7-9bd2-f1dfa40a0788%26xdm_e%3Dhttp%253A%252F%252Flocalhost%253A9000%26xdm_c%3Ddefault6817%26xdm_p%3D1'
+C3D2 .|    |    |    Redirect to : https://localhost:8443/cas/login?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Flogin.php%3Finstance_id%3D4279eab1-f1a3-4279-b5a8-9ce352f14fec%26uuid%3Da348014d-370b-47e7-9bd2-f1dfa40a0788%26xdm_e%3Dhttp%253A%252F%252Flocalhost%253A9000%26xdm_c%3Ddefault6817%26xdm_p%3D1 [Client.php:1400]
+C3D2 .|    |    |    exit()
+C3D2 .|    |    |    -
+C3D2 .|    |    -
+C3D2 .|    -
+CB93 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+CB93 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+CB93 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+CB93 .|    |    Ticket 'ST-117-qgRJ0JVkIzfExdjniNjs-cas01.example.org' found [Client.php:868]
+CB93 .|    <= ''
+CB93 .<= ''
+CB93 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+CB93 .|    Not a logout request [Client.php:1467]
+CB93 .<= ''
+CB93 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+CB93 .<= ''
+CB93 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+CB93 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+CB93 .<= ''
+CB93 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+CB93 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+CB93 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+CB93 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+CB93 .|    |    |    |    no user found [Client.php:1373]
+CB93 .|    |    |    <= false
+CB93 .|    |    |    CAS 2.0 ticket `ST-117-qgRJ0JVkIzfExdjniNjs-cas01.example.org' is present [Client.php:1221]
+CB93 .|    |    |    => CAS_Client::validateCAS20('', NULL, NULL) [Client.php:1222]
+CB93 .|    |    |    |     [Client.php:2736]
+CB93 .|    |    |    |    => CAS_Client::getServerServiceValidateURL() [Client.php:2742]
+CB93 .|    |    |    |    |    => CAS_Client::getURL() [Client.php:415]
+CB93 .|    |    |    |    |    |    Final URI: http://localhost/mantisRAD/login.php?instance_id=4279eab1-f1a3-4279-b5a8-9ce352f14fec&uuid=a348014d-370b-47e7-9bd2-f1dfa40a0788&xdm_e=http%3A%2F%2Flocalhost%3A9000&xdm_c=default6817&xdm_p=1 [Client.php:3060]
+CB93 .|    |    |    |    |    <= 'http://localhost/mantisRAD/login.php?instance_id=4279eab1-f1a3-4279-b5a8-9ce352f14fec&uuid=a348014d-370b-47e7-9bd2-f1dfa40a0788&xdm_e=http%3A%2F%2Flocalhost%3A9000&xdm_c=default6817&xdm_p=1'
+CB93 .|    |    |    |    <= 'https://localhost:8443/cas/serviceValidate?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Flogin.php%3Finstance_id%3D4279eab1-f1a3-4279-b5a8-9ce352f14fec%26uuid%3Da348014d-370b-47e7-9bd2-f1dfa40a0788%26xdm_e%3Dhttp%253A%252F%252Flocalhost%253A9000%26xdm_c%3Ddefault6817%26xdm_p%3D1'
+CB93 .|    |    |    |    => CAS_Client::_readURL('https://localhost:8443/cas/serviceValidate?service=http%3A%2F%2Flocalhost%2FmantisRAD%2Flogin.php%3Finstance_id%3D4279eab1-f1a3-4279-b5a8-9ce352f14fec%26uuid%3Da348014d-370b-47e7-9bd2-f1dfa40a0788%26xdm_e%3Dhttp%253A%252F%252Flocalhost%253A9000%26xdm_c%3Ddefault6817%26xdm_p%3D1&ticket=ST-117-qgRJ0JVkIzfExdjniNjs-cas01.example.org', NULL, NULL, NULL) [Client.php:2751]
+CB93 .|    |    |    |    |    => CAS_Request_CurlRequest::sendRequest() [AbstractRequest.php:218]
+CB93 .|    |    |    |    |    |    Response Body: 
+CB93 .|    |    |    |    |    |    
+CB93 .|    |    |    |    |    |    
+CB93 .|    |    |    |    |    |    <cas:serviceResponse xmlns:cas='http://www.yale.edu/tp/cas'>
+CB93 .|    |    |    |    |    |    	<cas:authenticationSuccess>
+CB93 .|    |    |    |    |    |    		<cas:user>admin1</cas:user>
+CB93 .|    |    |    |    |    |    
+CB93 .|    |    |    |    |    |    
+CB93 .|    |    |    |    |    |    	</cas:authenticationSuccess>
+CB93 .|    |    |    |    |    |    </cas:serviceResponse>
+CB93 .|    |    |    |    |    |     [CurlRequest.php:82]
+CB93 .|    |    |    |    |    <= true
+CB93 .|    |    |    |    <= true
+CB93 .|    |    |    |    => CAS_Client::_readExtraAttributesCas20(DOMNodeList) [Client.php:2802]
+CB93 .|    |    |    |    |    Testing for rubycas style attributes [Client.php:2912]
+CB93 .|    |    |    |    <= ''
+CB93 .|    |    |    |    Storing Proxy List [Client.php:2811]
+CB93 .|    |    |    |    => CAS_ProxyChain_AllowedList::isProxyListAllowed(array ()) [Client.php:2814]
+CB93 .|    |    |    |    |    No proxies were found in the response [AllowedList.php:81]
+CB93 .|    |    |    |    <= true
+CB93 .|    |    |    |    => CAS_Client::_renameSession('ST-117-qgRJ0JVkIzfExdjniNjs-cas01.example.org') [Client.php:2845]
+CB93 .|    |    |    |    |    Session ID: ST-117-qgRJ0JVkIzfExdjniNjs-cas01exampleorg [Client.php:3163]
+CB93 .|    |    |    |    |    Restoring old session vars [Client.php:3166]
+CB93 .|    |    |    |    <= ''
+CB93 .|    |    |    <= true
+CB93 .|    |    |    CAS 2.0 ticket `ST-117-qgRJ0JVkIzfExdjniNjs-cas01.example.org' was validated [Client.php:1223]
+CB93 .|    |    |    => CAS_Client::getURL() [Client.php:1277]
+CB93 .|    |    |    <= 'http://localhost/mantisRAD/login.php?instance_id=4279eab1-f1a3-4279-b5a8-9ce352f14fec&uuid=a348014d-370b-47e7-9bd2-f1dfa40a0788&xdm_e=http%3A%2F%2Flocalhost%3A9000&xdm_c=default6817&xdm_p=1'
+CB93 .|    |    |    Prepare redirect to : http://localhost/mantisRAD/login.php?instance_id=4279eab1-f1a3-4279-b5a8-9ce352f14fec&uuid=a348014d-370b-47e7-9bd2-f1dfa40a0788&xdm_e=http%3A%2F%2Flocalhost%3A9000&xdm_c=default6817&xdm_p=1 [Client.php:1277]
+CB93 .|    |    |    => CAS_Client::getURL() [Client.php:1278]
+CB93 .|    |    |    <= 'http://localhost/mantisRAD/login.php?instance_id=4279eab1-f1a3-4279-b5a8-9ce352f14fec&uuid=a348014d-370b-47e7-9bd2-f1dfa40a0788&xdm_e=http%3A%2F%2Flocalhost%3A9000&xdm_c=default6817&xdm_p=1'
+CB93 .|    |    |    exit()
+CB93 .|    |    |    -
+CB93 .|    |    -
+CB93 .|    -
+9BDA .START phpCAS-1.3.1 ****************** [CAS.php:451]
+9BDA .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+9BDA .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+9BDA .|    <= ''
+9BDA .<= ''
+9BDA .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+9BDA .|    Not a logout request [Client.php:1467]
+9BDA .<= ''
+9BDA .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+9BDA .<= ''
+9BDA .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+9BDA .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+9BDA .<= ''
+9BDA .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+9BDA .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+9BDA .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+9BDA .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+9BDA .|    |    |    |    user = `admin1' [Client.php:1363]
+9BDA .|    |    |    <= true
+9BDA .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+9BDA .|    |    <= true
+9BDA .|    |    no need to authenticate [Client.php:1083]
+9BDA .|    <= true
+9BDA .<= ''
+DEC6 .START phpCAS-1.3.1 ****************** [CAS.php:451]
+DEC6 .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+DEC6 .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+DEC6 .|    <= ''
+DEC6 .<= ''
+DEC6 .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+DEC6 .|    Not a logout request [Client.php:1467]
+DEC6 .<= ''
+DEC6 .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+DEC6 .<= ''
+DEC6 .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+DEC6 .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+DEC6 .<= ''
+DEC6 .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+DEC6 .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+DEC6 .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+DEC6 .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+DEC6 .|    |    |    |    user = `admin1' [Client.php:1363]
+DEC6 .|    |    |    <= true
+DEC6 .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+DEC6 .|    |    <= true
+DEC6 .|    |    no need to authenticate [Client.php:1083]
+DEC6 .|    <= true
+DEC6 .<= ''
+F02C .START phpCAS-1.3.1 ****************** [CAS.php:451]
+F02C .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+F02C .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+F02C .|    <= ''
+F02C .<= ''
+F02C .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+F02C .|    Not a logout request [Client.php:1467]
+F02C .<= ''
+F02C .=> phpCAS::setServerProxyValidateURL('https://localhost:8443/cas/serviceValidate') [authentication_api.php:79]
+F02C .<= ''
+F02C .=> phpCAS::setNoCasServerValidation() [authentication_api.php:82]
+F02C .|    You have configured no validation of the legitimacy of the cas server. This is not recommended for production use. [CAS.php:1664]
+F02C .<= ''
+F02C .=> phpCAS::forceAuthentication() [authentication_api.php:99]
+F02C .|    => CAS_Client::forceAuthentication() [CAS.php:1101]
+F02C .|    |    => CAS_Client::isAuthenticated() [Client.php:1081]
+F02C .|    |    |    => CAS_Client::_wasPreviouslyAuthenticated() [Client.php:1187]
+F02C .|    |    |    |    user = `admin1' [Client.php:1363]
+F02C .|    |    |    <= true
+F02C .|    |    |    user was already authenticated, no need to look for tickets [Client.php:1204]
+F02C .|    |    <= true
+F02C .|    |    no need to authenticate [Client.php:1083]
+F02C .|    <= true
+F02C .<= ''
+5B3F .START phpCAS-1.3.1 ****************** [CAS.php:451]
+5B3F .=> phpCAS::client('2.0', 'localhost', 8443, '/cas') [authentication_api.php:73]
+5B3F .|    => CAS_Client::__construct('2.0', false, 'localhost', 8443, '/cas', true) [CAS.php:348]
+5B3F .|    <= ''
+5B3F .<= ''
+5B3F .=> CAS_Client::handleLogoutRequests(false, false) [CAS.php:1299]
+5B3F .|    Logout requested [Client.php:1474]
+5B3F .|    SAML REQUEST: <samlp:LogoutRequest xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol" ID="LR-96-V5qoaPyxc7uGDy0TKQ1YVKhpXzp0je2eavy" Version="2.0" IssueInstant="2012-11-20T20:28:23Z"><saml:NameID xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">@NOT_USED@</saml:NameID><samlp:SessionIndex>ST-117-qgRJ0JVkIzfExdjniNjs-cas01.example.org</samlp:SessionIndex></samlp:LogoutRequest> [Client.php:1476]
+5B3F .|    No access control set [Client.php:1495]
+5B3F .|    Logout command allowed [Client.php:1500]
+5B3F .|    Ticket to logout: ST-117-qgRJ0JVkIzfExdjniNjs-cas01.example.org [Client.php:1509]
+5B3F .|    Session id: ST-117-qgRJ0JVkIzfExdjniNjs-cas01exampleorg [Client.php:1521]
+5B3F .|    Session ST-117-qgRJ0JVkIzfExdjniNjs-cas01exampleorg destroyed [Client.php:1537]
+5B3F .|    exit()
+5B3F .|    -
diff -rNU5 mantisbt-1.2.5/.project mantis_ard/.project
--- mantisbt-1.2.5/.project	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/.project	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>mantisRAD</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>net.sourceforge.phpeclipse.parserbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>net.sourceforge.phpeclipse.phpnature</nature>
+	</natures>
+</projectDescription>
diff -rNU5 mantisbt-1.2.5/reporting_prism_page.php mantis_ard/reporting_prism_page.php
--- mantisbt-1.2.5/reporting_prism_page.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/reporting_prism_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,98 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+/**
+* MantisBT Core API's
+*/
+require_once( 'core.php' );
+
+auth_reauthenticate();
+
+	
+call_birt();
+	
+	
+function do_post_request($url, $postdata, $files = null)
+{
+	$data = "";
+	$boundary = "---------------------".substr(md5(rand(0,32000)), 0, 10);
+
+	//Collect Postdata
+	foreach($postdata as $key => $val)
+	{
+		$data .= "--$boundary\n";
+		$data .= "Content-Disposition: form-data; name=\"".$key."\"\n\n".$val."\n";
+	}
+
+	$data .= "--$boundary\n";
+
+	$params = array('http' => array(
+			'method' => 'POST',
+			'header' => 'Content-Type: text/html; boundary='.$boundary,
+			'content' => $data
+	));
+
+	$ctx = stream_context_create($params);
+	$fp = fopen($url, 'rb', false, $ctx);
+
+	if (!$fp) {
+		throw new Exception("Problem with $url, $php_errormsg");
+	}
+
+	$response = @stream_get_contents($fp);
+	
+	if ($response === false) {
+		throw new Exception("Problem reading data from $url, $php_errormsg");
+	}
+	return $response;
+}
+
+function call_birt(){
+
+	$t_project_id = project_get_other_type_project_id('management');
+
+	//sample data
+	$postdata = array(
+			'projectId' => $t_project_id
+	);
+
+	//sample image
+	$files['rptdesign'] = 'birt\resources\prism.rptdesign';
+	
+	$response = do_post_request("http://localhost:9000/mantisARD/reportServlet?projectId=$t_project_id&&birt_report_name=prism", $postdata, $files);
+	
+    header('Content-Description: File Transfer'); 
+	header('Content-Type: application/pdf'); 
+	header('Content-Disposition: attachment; filename=prism.pdf'); 
+	header('Content-Transfer-Encoding: binary'); 
+	header('Expires: 0'); 
+	header('Cache-Control: must-revalidate'); 
+	header('Pragma: public'); 
+//	header('Content-Length: ' . filesize($file)); 
+	ob_clean(); 
+	flush(); 
+	echo $response;
+	exit;
+}
+
+//EOF
+
+?>
\ No newline at end of file
diff -rNU5 mantisbt-1.2.5/risk_appreciation_page.php mantis_ard/risk_appreciation_page.php
--- mantisbt-1.2.5/risk_appreciation_page.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/risk_appreciation_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,208 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+/**
+* MantisBT Core API's
+*/
+require_once( 'core.php' );
+require_once( 'category_api.php' );
+require_once( 'risk_criteria_api.php' );
+
+auth_reauthenticate();
+
+# don't index bug report page
+html_robots_noindex();
+
+html_page_top( lang_get( 'report_bug_link' ) );
+
+print_prism_menu( 'risk_appreciation_page.php' );
+
+$t_risk_criterias = risk_criteria_get_all();
+$categories = category_risk_criteria_get_all();
+
+$t_indicators = array();
+$t_indicators_by_categorie = array();
+foreach ( $t_risk_criterias as $t_risk_criteria ) {
+	$t_indicators[$t_risk_criteria->id] = $t_risk_criteria->weight * $t_risk_criteria->evaluation / 100;
+	$t_indicators_by_categorie[$t_risk_criteria->category_id] += $t_indicators[$t_risk_criteria->id];
+}
+//get previous date
+$previous_risk_evaluation = risk_evaluation_get_previous(0);
+if ( $previous_risk_evaluation != null ) {
+	$t_previous_date = '('.DateTime::createFromFormat('Y-m-d', $previous_risk_evaluation['date_modified'])->format('d/m/Y').')';
+}
+else {
+	$t_previous_date = '('.lang_get('no_indicator').')';
+}
+
+function get_global_risk() {
+	global $t_indicators_by_categorie;
+	$categories = category_risk_criteria_get_all();
+	$global_risk = 0;
+	$others = false;
+	foreach ( $categories as $category ) {
+       	if ( null != $t_indicators_by_categorie[$category['id']] ) {
+			switch ( $category['name'] ) {
+			case 'duration':
+				$weight = 1;
+				break;
+			case 'integrity':
+				$weight = 2;
+				break;
+			case 'management_commitment':
+				$weight = 2;
+				break;
+			case 'team_commitment':
+				$weight = 1;
+				break;
+			case 'effort':
+				$weight = 1;
+				break;
+			case 'others':
+				$others = true;
+				$weight = 1;
+				break;
+			default:
+				break;
+			}
+			$global_risk += $weight * $t_indicators_by_categorie[$category['id']] ;
+		}
+	}
+	if ( $others ) $global_risk *= 7/8;
+	return $global_risk;
+}
+
+function section_begin() {
+	global $t_previous_date;
+	$f_category_id = 0;
+	$section_begin = '<table class="width100">'.
+		'<tr><td class="form-title" colspan="4">' . strtoupper( lang_get( 'list_risk_criteria' ) ).
+		'<form method="post" action="risk_appreciation_update.php">'.
+		'<tr><td class="form-title">' . lang_get( 'label' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'weight' ) . '</td>'.
+		'<td class="form-title" width="35%" >' . lang_get( 'evaluation' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'last_indicator' ) . ' ' .$t_previous_date. ' </td>'.
+		'<td class="form-title" >' . lang_get( 'indicator' ) .  ' ('.date('d/m/Y').')</td></tr>';	
+	echo $section_begin ."\n";
+}
+
+/**
+ * represents category row UI
+ */
+function category_row( &$p_category ) {
+	global $t_indicators_by_categorie;
+	$previous_risk_evaluation = risk_evaluation_get_previous($p_category['id']);
+	$row = "<tr bgcolor='#c8c8e8'><td colspan='3'>".strtoupper(lang_get($p_category['name'])) ."</td>" .
+			"<td>".get_previous_evaluation($previous_risk_evaluation)."</td>".
+			"<td>".$t_indicators_by_categorie[$p_category['id']]."</td></tr>" ;			
+	echo $row;
+}
+
+/**
+ * represents a risk_criteria row UI
+ */
+function risk_criteria_row(&$p_risk_criteria) {
+	global $t_indicators;
+	$t_category = category_risk_criteria_full_name( $p_risk_criteria->category_id );
+	$t_evaluations = array(1 => $p_risk_criteria->evaluation1, 2 => $p_risk_criteria->evaluation2, 
+		3 => $p_risk_criteria->evaluation3, 4 => $p_risk_criteria->evaluation4);
+	if ( $p_risk_criteria->evaluation5 != '' ) $t_evaluations[5] = $p_risk_criteria->evaluation5;
+	if ( $p_risk_criteria->evaluation6 != '' ) $t_evaluations[6] = $p_risk_criteria->evaluation6;
+	$row = "<tr " .helper_alternate_class(). ">".
+		"<td>$p_risk_criteria->label</td>".
+		"<td>$p_risk_criteria->weight</td>".
+		"<td><select name='".$p_risk_criteria->id."_appreciation'>";
+	foreach ( $t_evaluations as $i => $t_evaluation ) {
+   		$row .= "<option value='".$p_risk_criteria->id."_$i' ";
+   		if($p_risk_criteria->evaluation == $i) {
+   			$row .= "selected='selected'";
+   		} 
+		$row .= ">$t_evaluation</option>";
+	} 
+	$row .= "</select></td>".
+		"<td></td>".
+		"<td>".$t_indicators[$p_risk_criteria->id]."</td></tr>";
+	echo $row;
+}
+
+function risk_criteria_none() {
+	$row = '<tr><td coslpan="4" >' .lang_get( 'no_risk_criteria' ). '</td></tr>';
+	echo $row;
+}
+function appreciation_update_button() {
+	$appreciation_update_button = '<tr><td><input type="submit" name="update_appreciation" class="button" value="'. lang_get( 'update_appreciation' ) . '"/>';
+	echo $appreciation_update_button;
+}
+
+function display_global_risk() {
+	$previous_risk_evaluation = risk_evaluation_get_previous(0);
+	$global_risk = '<tr class="spacer"><td colspan="6"></td></tr>'.
+		'<tr bgcolor="#c8c8e8"><td colspan="3">'.lang_get('total').' '.lang_get('categories_formule').'</td>'.
+		'<td>'.get_previous_evaluation($previous_risk_evaluation).'</td>'.
+		'<td>'.get_global_risk().'</td></tr>';
+	echo $global_risk;
+}
+
+function get_previous_evaluation($p_previous_risk_evaluation) {
+	
+	if ( $p_previous_risk_evaluation['evaluation'] == 0 ) {
+		return lang_get( 'no_indicator' );
+	}
+	else {
+		return $p_previous_risk_evaluation['evaluation'];
+	}
+}
+
+function section_end() {
+	$section_end = '</td></tr></form></table><br />';
+	echo $section_end;
+}
+
+
+//UI
+section_begin();
+if ( 0 == count($t_risk_criterias) ) {
+	risk_criteria_none();
+} 
+else {
+	foreach ( $categories as $category ) {
+		$risk_criteria_by_category = array();
+		foreach ( $t_risk_criterias as $t_risk_criteria ) {
+			if ( $category['id'] == $t_risk_criteria->category_id ) {
+				$risk_criteria_by_category[] = $t_risk_criteria;
+			}
+		}
+		if ( 0 != count($risk_criteria_by_category) ) {
+			category_row($category);
+			foreach ( $risk_criteria_by_category as $t_risk_criteria ) {
+		       	risk_criteria_row($t_risk_criteria);
+			}
+		}
+	}
+	display_global_risk();
+	appreciation_update_button();
+}
+section_end();
+
+html_page_bottom();
+
+//EOF
+?>
diff -rNU5 mantisbt-1.2.5/risk_appreciation_update.php mantis_ard/risk_appreciation_update.php
--- mantisbt-1.2.5/risk_appreciation_update.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/risk_appreciation_update.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,78 @@
+<?php
+
+
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+/**
+* MantisBT Core API's
+*/
+require_once ('core.php');
+require_once ('risk_criteria_api.php');
+
+$t_risk_criterias = risk_criteria_get_all();
+$categories = category_risk_criteria_get_all();
+$t_evaluation_by_categorie = array ();
+foreach ($t_risk_criterias as $t_risk_criteria) {
+	if (isset ($_POST[$t_risk_criteria->id . '_appreciation'])) {
+		$t_evaluations = explode('_', $_POST[$t_risk_criteria->id . '_appreciation']);
+		$t_evaluation = $t_evaluations[1];
+		$t_evaluation_by_categorie[$t_risk_criteria->category_id] += $t_risk_criteria->weight * $t_evaluation / 100;
+		;
+		risk_criteria_update_attribute($t_risk_criteria->id, 'evaluation', $t_evaluation);
+	}
+}
+foreach ($categories as $category) {
+	if (null == $t_evaluation_by_categorie[$category['id']])
+		$t_evaluation_by_categorie[$category['id']] = 0;
+	risk_evaluation_create_history($category['id'], $t_evaluation_by_categorie[$category['id']]);
+	switch ($category['name']) {
+		case 'duration' :
+			$weight = 1;
+			break;
+		case 'integrity' :
+			$weight = 2;
+			break;
+		case 'management_commitment' :
+			$weight = 2;
+			break;
+		case 'team_commitment' :
+			$weight = 1;
+			break;
+		case 'effort' :
+			$weight = 1;
+			break;
+		case 'others' :
+			if ($t_evaluation_by_categorie[$category['id']] != 0) 
+				$others = true;
+			$weight = 1;
+			break;
+		default :
+			break;
+	}
+	$global_risk += $weight * $t_evaluation_by_categorie[$category['id']];
+}
+if ($others)
+	$global_risk *= 7 / 8;
+$last_risk_evaluation = risk_evaluation_get_last(0);
+risk_evaluation_create_history(0, $global_risk);
+
+print_successful_redirect('risk_appreciation_page.php');
+?>
diff -rNU5 mantisbt-1.2.5/risk_criteria_create.php mantis_ard/risk_criteria_create.php
--- mantisbt-1.2.5/risk_criteria_create.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/risk_criteria_create.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,50 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+
+/**
+* MantisBT Core API's
+*/
+require_once( 'core.php' );
+require_once( 'risk_criteria_api.php' );
+
+form_security_validate( 'risk_criteria_form' );
+
+$t_risk_criterias = risk_criteria_get_all();
+
+$t_risk_criteria = new risk_criteria;
+$t_risk_criteria->label = gpc_get_string( 'label', '' );
+$t_risk_criteria->weight = 0;
+$t_risk_criteria->project_id = project_get_other_type_project_id('management');
+$t_risk_criteria->category_id = gpc_get_int( 'category_id', 0 );
+$t_risk_criteria->evaluation1 = gpc_get_string( 'evaluation1', '' );
+$t_risk_criteria->evaluation2 = gpc_get_string( 'evaluation2', '' );
+$t_risk_criteria->evaluation3 = gpc_get_string( 'evaluation3', '' );
+$t_risk_criteria->evaluation4 = gpc_get_string( 'evaluation4', '' );
+$t_risk_criteria->evaluation5 = gpc_get_string( 'evaluation5', '' );
+$t_risk_criteria->evaluation6 = gpc_get_string( 'evaluation6', '' );
+
+# Create the risk criteria
+$t_risk_criteria_id = $t_risk_criteria->create();
+
+print_successful_redirect( 'risk_criteria_page.php' );
+
+?>
diff -rNU5 mantisbt-1.2.5/risk_criteria_page.php mantis_ard/risk_criteria_page.php
--- mantisbt-1.2.5/risk_criteria_page.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/risk_criteria_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,137 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+/**
+* MantisBT Core API's
+*/
+require_once( 'core.php' );
+require_once( 'risk_criteria_api.php' );
+
+auth_reauthenticate();
+
+# don't index bug report page
+html_robots_noindex();
+
+html_page_top( lang_get( 'report_bug_link' ) );
+
+print_prism_menu( 'risk_criteria_page.php' );
+print_risk_criteria_menu( 'risk_criteria_page.php' );
+
+$t_risk_criterias = risk_criteria_get_all();
+$categories = category_risk_criteria_get_all();
+
+function section_begin() {
+	$f_category_id = 0;
+	$section_begin = '<table class="width100">'.
+		'<tr><td class="form-title" colspan="8">' . strtoupper( lang_get( 'list_risk_criteria' ) ).
+		'<form method="post" action="risk_criteria_view.php">'."&nbsp&nbsp&nbsp".
+		'<input type="submit" name="create_risk_criteria" class="button" value="'. lang_get( 'create_risk_criteria' ) . '"/></form></td></tr></br>'.
+		'<tr><td colspan="8">'.lang_get( 'note_list_risk_criteria' ).'</td></tr>'.
+		'<form method="post" action="risk_criteria_update.php">'.
+		'<tr><td class="form-title">' . lang_get( 'label' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'weight' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'evaluation1' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'evaluation2' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'evaluation3' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'evaluation4' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'evaluation5' ) . '</td>'.
+		'<td class="form-title" >' . lang_get( 'evaluation6' ) . '</td></tr>';	
+	echo $section_begin ."\n";
+}
+
+function category_row( $p_category ) {
+	$row = "<tr bgcolor='#c8c8e8'><td >".strtoupper(str_replace('é', 'e', lang_get($p_category['name']))) ."</td><td colspan='7' id='category".$p_category['id']."'></td></tr>";
+	echo $row;
+}
+function risk_criteria_row(&$p_risk_criteria) {
+	$t_category = category_risk_criteria_full_name( $p_risk_criteria->category_id );
+	$row = "<tr " .helper_alternate_class(). ">".
+		"<td><a href='risk_criteria_view.php?id=$p_risk_criteria->id' alt='lien'>$p_risk_criteria->label</a></td>".
+		"<td><input id='$p_risk_criteria->id|$p_risk_criteria->category_id' size='3' type='text' name='weight_$p_risk_criteria->id' value='$p_risk_criteria->weight' " .
+		"onClick='checkWeight($p_risk_criteria->category_id)' onFocus='checkWeight($p_risk_criteria->category_id)' onchange='checkWeight($p_risk_criteria->category_id)'/></td>".
+		"<td>$p_risk_criteria->evaluation1</td>".
+		"<td>$p_risk_criteria->evaluation2</td>".
+		"<td>$p_risk_criteria->evaluation3</td>".
+		"<td>$p_risk_criteria->evaluation4</td>".
+		"<td>$p_risk_criteria->evaluation5</td>".
+		"<td>$p_risk_criteria->evaluation6</td></tr>";
+	echo $row;
+}
+
+function risk_criteria_none() {
+	$row = '<tr><td coslpan="6" >' .lang_get( 'no_risk_criteria' ). '</td></tr>';
+	echo $row;
+}
+function weight_update_button() {
+	$weight_update_button = '<tr><td><input type="submit" name="update_weight" class="button" value="'. lang_get( 'update_weight' ) . '"/>';
+	echo $weight_update_button;
+}
+function section_end() {
+	$section_end = '</td></tr></form></table><br />';
+	echo $section_end;
+}
+?>
+
+<SCRIPT language="Javascript">
+function checkWeight(category_id) {
+	var elements = document.getElementsByTagName("input");
+	var sum = 0;
+	for( i=0; i<elements.length; i++) {
+		var cat = elements[i].id.substr(elements[i].id.lastIndexOf('|') + 1);
+		if(cat == category_id) {
+			sum += parseInt(document.getElementById(elements[i].id).value);
+			var idCat = 'category' + cat;
+			if( sum == 100 ) document.getElementById(idCat).style.color='green';
+			else document.getElementById(idCat).style.color='red';
+			document.getElementById(idCat).innerHTML = sum;
+		}
+	}
+
+}
+</SCRIPT>
+<?php
+section_begin();
+if ( 0 == count($t_risk_criterias) ) {
+	risk_criteria_none();
+} 
+else {
+	foreach ( $categories as $category ) {
+		$risk_criteria_by_category = array();
+		foreach ( $t_risk_criterias as $t_risk_criteria ) {
+			if ( $category['id'] == $t_risk_criteria->category_id ) {
+				$risk_criteria_by_category[] = $t_risk_criteria;
+			}
+		}
+		if ( 0 != count($risk_criteria_by_category) ) {
+			category_row($category);
+			foreach ( $risk_criteria_by_category as $t_risk_criteria ) {
+		       	risk_criteria_row($t_risk_criteria);
+			}
+		}
+	}
+	weight_update_button();
+}
+section_end();
+
+html_page_bottom();
+
+//EOF
+?>
diff -rNU5 mantisbt-1.2.5/risk_criteria_update.php mantis_ard/risk_criteria_update.php
--- mantisbt-1.2.5/risk_criteria_update.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/risk_criteria_update.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,87 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+/**
+* MantisBT Core API's
+*/
+require_once( 'core.php' );
+require_once( 'risk_criteria_api.php' );
+
+
+
+$t_risk_criterias = risk_criteria_get_all();
+if ( isset($_POST['delete']) ) {
+	print_successful_redirect( 'risk_criteria_view.php?action=delete&id='.$_POST['id'] );	
+}
+elseif ( isset($_POST['confirm_delete']) ) {
+	$risk_criteria = risk_criteria_get($_POST['id']);
+	$risk_criteria->delete();
+	print_successful_redirect( 'risk_criteria_page.php');
+}
+#update weighting
+if ( isset($_POST['update_weight']) ) {
+	$risk_criteria_by_category = array();
+	foreach ( $t_risk_criterias as $t_risk_criteria ) {
+   		$f_weight = gpc_get_int( 'weight_'.$t_risk_criteria->id );
+   		#each weight has to be a pourcentage
+   		if( (0 > $f_weight) || (100 < $f_weight) ) {
+			error_parameters( ' weighting '.$t_risk_criteria->label );
+			trigger_error( ERROR_RISK_CRITERIA_WEIGHT_INVALID, ERROR );
+		}
+		#sum each weight by category
+		if ( !in_array($t_risk_criteria->category_id, $risk_criteria_by_category) ) {
+			$risk_criteria_by_category[$t_risk_criteria->category_id] += $f_weight;
+		}
+	}
+	#check no weight sum is bigger than 100%
+	foreach ( $risk_criteria_by_category as $category_id => $sum_weight ) {
+       if ( $sum_weight != 100 ) {
+			trigger_error( ERROR_RISK_CRITERIA_SUM_WEIGHT_INVALID, ERROR );
+		}
+	}
+	foreach ( $t_risk_criterias as $t_risk_criteria ) {
+   		$f_weight = gpc_get_int( 'weight_'.$t_risk_criteria->id );
+   		if ( $t_risk_criteria->weight != $f_weight) {
+			risk_criteria_update_attribute( $t_risk_criteria->id, 'weight', $f_weight );
+		}
+	}
+	print_successful_redirect( 'risk_criteria_page.php' );
+}
+#update risk criteria
+else {
+	$t_risk_criteria = new risk_criteria;
+	$t_risk_criteria->id = gpc_get_string( 'id', 0 );
+	$t_risk_criteria->label = gpc_get_string( 'label', '' );
+	$t_risk_criteria->project_id = project_get_other_type_project_id('management');
+	$t_risk_criteria->category_id = gpc_get_int( 'category_id', 0 );
+	$t_risk_criteria->evaluation1 = gpc_get_string( 'evaluation1', '' );
+	$t_risk_criteria->evaluation2 = gpc_get_string( 'evaluation2', '' );
+	$t_risk_criteria->evaluation3 = gpc_get_string( 'evaluation3', '' );
+	$t_risk_criteria->evaluation4 = gpc_get_string( 'evaluation4', '' );
+	$t_risk_criteria->evaluation5 = gpc_get_string( 'evaluation5', '' );
+	$t_risk_criteria->evaluation6 = gpc_get_string( 'evaluation6', '' );
+	
+	# Update the risk criteria
+	$t_risk_criteria->update();	
+	
+	print_successful_redirect( 'risk_criteria_page.php' );
+}
+?>
diff -rNU5 mantisbt-1.2.5/risk_criteria_view.php mantis_ard/risk_criteria_view.php
--- mantisbt-1.2.5/risk_criteria_view.php	1970-01-01 01:00:00.000000000 +0100
+++ mantis_ard/risk_criteria_view.php	2013-03-27 11:11:16.000000000 +0100
@@ -0,0 +1,201 @@
+<?php
+/**
+* NovaForge(TM) is a web-based forge offering a Collaborative Development and
+* Project Management Environment.
+*
+* Copyright (C) 2007-2009 BULL SAS
+*
+* This program is free software: you can redistribute it and/or modify
+* it under the terms of the GNU Affero General Public License as
+* published by the Free Software Foundation, either version 3 of the
+* License, or (at your option) any later version.
+*
+* This program is distributed in the hope that it will be useful,
+* but WITHOUT ANY WARRANTY; without even the implied warranty of
+* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+* GNU Affero General Public License for more details.
+*
+* You should have received a copy of the GNU Affero General Public License
+* along with this program. If not, see <http://www.gnu.org/licenses/>.
+*/
+
+
+/**
+* MantisBT Core API's
+*/
+require_once( 'core.php' );
+require_once( 'risk_criteria_api.php' );
+
+auth_reauthenticate();
+
+# don't index bug report page
+html_robots_noindex();
+
+html_page_top( lang_get( 'report_bug_link' ) );
+
+print_prism_menu( 'risk_criteria_page.php' );
+print_risk_criteria_menu( 'risk_criteria_view.php' );
+
+$others = false;
+$delete = false;
+#delete
+if ( null != $_GET['action'] && 'delete' == $_GET['action'] ) {
+	$delete = true;
+}
+#update
+elseif ( null != $_GET['id'] ) {
+	$risk_criteria = risk_criteria_get($_GET['id']); 
+	$f_weight = $risk_criteria->weight;
+	$form = '<form name="risk_criteria_form" method="post" action="risk_criteria_update.php">';	
+	$button = '<input type="hidden" name="id" value="' .$_GET['id']. '" />'.
+			'<input ' .helper_get_tab_index(). ' type="submit" class="button" value="' .lang_get( 'update_risk_criteria_button' ). '" />';
+	if ( category_get_id_by_name('others', -1) == $risk_criteria->category_id ) {
+		$others = true;
+	}
+	else {
+		$button .= '<input ' .helper_get_tab_index(). ' type="submit" class="button" name="delete" value="' .lang_get( 'delete_risk_criteria_button' ). '" />';		
+	}
+			
+}
+#create
+else {
+	$f_weight = 0;
+	$form = '<form name="risk_criteria_form" method="post" action="risk_criteria_create.php">';
+	$button = '<input ' .helper_get_tab_index(). ' type="submit" class="button" value="' .lang_get( 'submit_risk_criteria_button' ). '" />';
+}
+
+
+#IHM
+if ( !$delete ) { ?>
+<br />
+<div align="center">
+<?php 
+echo $form;
+echo form_security_field( 'risk_criteria_form' ) ?>
+<table class="width90" cellspacing="1">
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category" width="30%">
+			<span class="required">*</span><?php print_documentation_link( 'category' ) ?>
+		</td>
+		<td width="70%">
+			<?php if ( $others ) { 
+				echo lang_get( 'others'); ?>
+				<input type="hidden" name="category_id" value="<?php echo $risk_criteria->category_id; ?>"/>	
+			<?php }	
+			else { ?>
+				<select <?php echo helper_get_tab_index() ?> name="category_id">
+					<?php print_category_option_list( $risk_criteria->category_id, -1, false, false );
+					?>
+				</select>
+			<?php } ?>
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<span class="required">*</span><?php print_documentation_link( 'label' ) ?>
+		</td>
+		<td>
+			<?php if ( $others ) { 
+				echo $risk_criteria->label; ?>
+				<input type="hidden" name="label" value="<?php echo $risk_criteria->label; ?>"/>	
+			<?php }	
+			else { ?>	
+				<input <?php echo helper_get_tab_index() ?> type="text" name="label" size="105" maxlength="128" value="<?php echo string_attribute( $risk_criteria->label ) ?>" />
+			<?php } ?>
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<?php print_documentation_link( 'weight' ) ?>
+		</td>
+		<td>
+			<?php echo string_attribute( $f_weight ) ."&nbsp&nbsp". lang_get( 'weight_info') ?>
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<span class="required">*</span><?php print_documentation_link( 'evaluation1' ) ?>
+		</td>
+		<td>
+			<input <?php echo helper_get_tab_index() ?> type="text" name="evaluation1" size="105" maxlength="128" value="<?php echo string_attribute( $risk_criteria->evaluation1 ) ?>" />
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<span class="required">*</span><?php print_documentation_link( 'evaluation2' ) ?>
+		</td>
+		<td>
+			<input <?php echo helper_get_tab_index() ?> type="text" name="evaluation2" size="105" maxlength="128" value="<?php echo string_attribute( $risk_criteria->evaluation2 ) ?>" />
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<span class="required">*</span><?php print_documentation_link( 'evaluation3' ) ?>
+		</td>
+		<td>
+			<input <?php echo helper_get_tab_index() ?> type="text" name="evaluation3" size="105" maxlength="128" value="<?php echo string_attribute( $risk_criteria->evaluation3 ) ?>" />
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<span class="required">*</span><?php print_documentation_link( 'evaluation4' ) ?>
+		</td>
+		<td>
+			<input <?php echo helper_get_tab_index() ?> type="text" name="evaluation4" size="105" maxlength="128" value="<?php echo string_attribute( $risk_criteria->evaluation4 ) ?>" />
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<?php print_documentation_link( 'evaluation5' ) ?>
+		</td>
+		<td>
+			<input <?php echo helper_get_tab_index() ?> type="text" name="evaluation5" size="105" maxlength="128" value="<?php echo string_attribute( $risk_criteria->evaluation5 ) ?>" />
+		</td>
+	</tr>
+	<tr <?php echo helper_alternate_class() ?>>
+		<td class="category">
+			<?php print_documentation_link( 'evaluation6' ) ?>
+		</td>
+		<td>
+			<input <?php echo helper_get_tab_index() ?> type="text" name="evaluation6" size="105" maxlength="128" value="<?php echo string_attribute( $risk_criteria->evaluation6 ) ?>" />
+		</td>
+	</tr>
+	<tr>
+		<td class="left">
+			<span class="required"> * <?php echo lang_get( 'required' ) ?></span>
+		</td>
+		<td class="center">
+			<?php echo $button; ?>
+		</td>
+	</tr>
+</table>
+</form>
+</div>
+<?php }
+else {  ?>
+<br/>
+<div align="center">
+	<form method="post" action="risk_criteria_update.php">
+		<table class="width75" cellspacing="1">
+			<tr class="row-1">
+				<td class="category" colspan="2">
+					<?php echo lang_get( 'delete_risk_criteria_conf_msg' ); ?>
+				</td>
+			</tr>
+			<tr>
+				<td class="center" colspan="2">
+					<input type="hidden" name="id" value="<?php echo $_GET['id']; ?>" />
+					<input type="submit" name="confirm_delete" class="button" value="<?php echo lang_get( 'delete_risk_criteria_button' ) ?>" />
+				</td>
+			</tr>
+		</table>
+	</form>
+</div>
+<?php } 
+
+html_page_bottom();
+
+//EOF
+?>
+
+
diff -rNU5 mantisbt-1.2.5/view_all_bug_page.php mantis_ard/view_all_bug_page.php
--- mantisbt-1.2.5/view_all_bug_page.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/view_all_bug_page.php	2013-03-27 11:11:16.000000000 +0100
@@ -27,22 +27,67 @@
 
 	require_once( 'compress_api.php' );
 	require_once( 'filter_api.php' );
 	require_once( 'last_visited_api.php' );
 
+
 	auth_ensure_user_authenticated();
 
+
 	$f_page_number		= gpc_get_int( 'page_number', 1 );
 
 	$t_per_page = null;
 	$t_bug_count = null;
 	$t_page_count = null;
-
 	$rows = filter_get_bug_rows( $f_page_number, $t_per_page, $t_page_count, $t_bug_count, null, null, null, true );
 	if ( $rows === false ) {
 		print_header_redirect( 'view_all_set.php?type=0' );
+	}	
+	
+	# if an association button is selected from a report
+	if ( null != $_GET['relationship_id']) {
+		if ( null != $_GET['project_id']) {
+			#$g_project_override is set to null to allow setting new project
+			$g_project_override = null;
+			helper_set_current_project($_GET['project_id']);
+			print_header_redirect( 'view_all_bug_page.php?relationship_id='.$_GET['relationship_id'] );
+		}
+		else {
+			//TODO have to use workflow
+			$t_new = get_enum_id('status', 'new');	
+			$t_progress = get_enum_id('status', 'progress');
+			$t_closed = get_enum_id('status', 'closed');
+			$t_link_id = $_GET['relationship_id'];
+			$t_show_project = false;
+			$t_relationship_all = relationship_get_all( $t_link_id, $t_show_project );
+	       	$t_relationships_id = array();
+			foreach ( $t_relationship_all as $t_relationship ) {
+				if ( $t_relationship->src_bug_id != $t_link_id ) {
+	       			array_push($t_relationships_id, $t_relationship->src_bug_id);
+	       		}
+			}
+			foreach ( $rows as $key => $bug ) {
+				if ( $t_progress != $bug->status || in_array($bug->id, $t_relationships_id) ) {
+					unset($rows[$key]);
+				}	
+			}	
+			$rows = array_values($rows);
+		}
+	}
+	else {
+		# link ARD from parent project
+		if ( null != $_GET['project_id']) {
+			$g_project_override = null;
+			helper_set_current_project($_GET['project_id']);
+			print_header_redirect( 'view_all_bug_page.php' );
+		}
+	}
+	#if no row, display bug view
+	if ( 0 == count($rows) ) {
+		print_header_redirect( 'view.php?id='.$t_link_id);	
 	}
+	
 
 	$t_bugslist = Array();
 	$t_users_handlers = Array();
 	$t_project_ids  = Array();
 	$t_row_count = count( $rows );
diff -rNU5 mantisbt-1.2.5/view_all_inc.php mantis_ard/view_all_inc.php
--- mantisbt-1.2.5/view_all_inc.php	2011-04-05 20:24:17.000000000 +0200
+++ mantis_ard/view_all_inc.php	2013-03-27 11:11:16.000000000 +0100
@@ -227,16 +227,24 @@
 		if ( $t_checkboxes_exist && ON == config_get( 'use_javascript' ) ) {
 			echo "<input type=\"checkbox\" name=\"all_bugs\" value=\"all\" onclick=\"checkall('bug_action', this.form.all_bugs.checked)\" /><span class=\"small\">" . lang_get( 'select_all' ) . '</span>';
 		}
 
 		if ( $t_checkboxes_exist ) {
+			if ( null !== $t_link_id ) {
+?>
+			<input type="hidden" name="link_id" value="<?php echo $t_link_id ?>" />
+			<input type="submit" class="button" value="<?php echo lang_get( 'associate' ); ?>" />
+<?php
+			}
+			else {
 ?>
 			<select name="action">
-				<?php print_all_bug_action_option_list() ?>
+				<?php print_all_bug_action_option_list(true) ?>
 			</select>
 			<input type="submit" class="button" value="<?php echo lang_get( 'ok' ); ?>" />
 <?php
+			}
 		} else {
 			echo '&#160;';
 		}
 ?>			</span>
 			<span class="floatright small">
