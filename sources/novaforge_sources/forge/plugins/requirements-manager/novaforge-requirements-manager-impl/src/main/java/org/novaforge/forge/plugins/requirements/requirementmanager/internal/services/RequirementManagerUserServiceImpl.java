/*
 * Copyright (c) 2011-2015, BULL SAS, NovaForge Version 3 and above.
 *
 * This file is free software: you may redistribute and/or modify it under
 * the terms of the GNU Affero General Public License as published by the
 * Free Software Foundation, version 3 of the License.
 *
 * This file is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see http://www.gnu.org/licenses.
 *
 * Additional permission under GNU AGPL version 3 (AGPL-3.0) section 7.
 *
 * If you modify this Program, or any covered work, by linking or combining
 * it with libraries listed in COPYRIGHT file at the top-level directory of
 * this distribution (or a modified version of that libraries), containing parts
 * covered by the terms of licenses cited in the COPYRIGHT file, the licensors
 * of this Program grant you additional permission to convey the resulting work.
 */
package org.novaforge.forge.plugins.requirements.requirementmanager.internal.services;

import org.novaforge.forge.core.plugins.domain.plugin.InstanceConfiguration;
import org.novaforge.forge.core.plugins.domain.plugin.PluginUser;
import org.novaforge.forge.core.plugins.domain.plugin.ToolInstance;
import org.novaforge.forge.core.plugins.exceptions.PluginServiceException;
import org.novaforge.forge.core.plugins.services.PluginUserService;
import org.novaforge.forge.plugins.commons.services.AbstractPluginUserService;
import org.novaforge.forge.tools.requirements.common.exceptions.RequirementOrganizationServiceException;
import org.novaforge.forge.tools.requirements.common.model.User;
import org.novaforge.forge.tools.requirements.common.services.RequirementOrganizationService;

/**
 * @author generated by Maven Archetype
 */
public class RequirementManagerUserServiceImpl extends AbstractPluginUserService implements PluginUserService
{
  private RequirementOrganizationService requirementOrganizationService;

  /**
   * {@inheritDoc}
   */
  @Override
  protected boolean removeToolUser(final InstanceConfiguration instance, final PluginUser pluginUser)
      throws PluginServiceException
  {
    try
    {
      requirementOrganizationService.deleteUser(pluginUser.getLogin());
      return true;
    }
    catch (RequirementOrganizationServiceException e)
    {
      throw new PluginServiceException("an error occurred during removing tool user", e);
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  protected boolean updateToolUser(final InstanceConfiguration instance, final String userName,
                                   final PluginUser pluginUser) throws PluginServiceException
  {
    try
    {
      User userToUpdate = requirementOrganizationService.buildUser(pluginUser.getLogin(), pluginUser.getFirstName(),
                                                                   pluginUser.getName());
      requirementOrganizationService.updateUser(userToUpdate);
      return true;
    }
    catch (RequirementOrganizationServiceException e)
    {
      throw new PluginServiceException("an error occurred during updating tool user", e);
    }
  }

  @Override
  public void createAdministratorUser(final ToolInstance pInstance, final PluginUser pUser)
      throws PluginServiceException
  {
    // TODO Not implemeted yet
  }

  public void setRequirementOrganizationService(
      final RequirementOrganizationService pRequirementOrganizationService)
  {
    requirementOrganizationService = pRequirementOrganizationService;
  }

}
