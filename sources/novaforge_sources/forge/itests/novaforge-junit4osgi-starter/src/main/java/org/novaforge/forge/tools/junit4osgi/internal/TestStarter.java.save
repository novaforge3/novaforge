package org.novaforge.forge.tools.junit4osgi.internal;

import java.io.File;
import java.util.Iterator;
import java.util.List;

import junit.framework.Test;
import junit.framework.TestResult;

import org.apache.felix.ipojo.junit4osgi.OSGiJunitRunner;
import org.apache.karaf.shell.commands.Argument;
import org.apache.karaf.shell.commands.Command;
import org.apache.karaf.shell.commands.Option;
import org.apache.karaf.shell.console.OsgiCommandSupport;
import org.novaforge.forge.tools.junit4osgi.internal.report.DefaultResultPrinter;
import org.novaforge.forge.tools.junit4osgi.internal.report.LogService;
import org.novaforge.forge.tools.junit4osgi.internal.report.ReportResultListener;
import org.novaforge.forge.tools.junit4osgi.internal.report.XMLReport;

@Command(scope = "novaforge-itests", name = "junit", description = "Start OSGI junit test")
public class TestStarter extends OsgiCommandSupport
{
  private OSGiJunitRunner            runner;

  @Argument(index = 0, name = "test-suite", description = "ID of test suite to launch", required = true,
      multiValued = false)
  private int                        suite                   = -1;

  private LogService                 logService;

  private static final String        DEFAULT_TEST_REPORT_DIR = "/tmp/test";
  private String                     testDirPath;

  private final DefaultResultPrinter consolePrinter          = new DefaultResultPrinter(System.out);

  @Option(name = "-s", aliases = "--see-list", description = "The liste test suite", required = false,
      multiValued = false)
  String                             define_see_list         = null;

  public void setRunner(OSGiJunitRunner runner)
  {
    this.runner = runner;
  }

  @Override
  protected Object doExecute() throws Exception
  {
    logService = new LogService();

    testDirPath = System.getProperty("novaforge.itests.report.dir", DEFAULT_TEST_REPORT_DIR);
    String reportBoolean = System.getProperty("novaforge.itests.report.enabled", "true");

    int count = 0;
//    System.out.println(" ==****** Novaforge itests start  bundle test  ******== ");
    List tests = runner.getTests();
    if (tests.size() == 0)
    {
      System.out.println(" ==****** No available OSGI test suites ******== ");
    }
    else
    {     
      Iterator iterator = tests.iterator();
      System.out.println("*********Test list to run :");
      File testDir = new File(testDirPath);
      System.out.println("****** testDirPath= " + testDirPath);
      while (iterator.hasNext())
      {
        Object objTest = iterator.next();
        Test t = (Test) objTest;
        System.out.println("[" + count + "] " + t.toString());
        if (suite == -1 && define_see_list == null)
        {
          // runner.run(t);
          runTestWithReport(testDir, objTest);
        }
        else if (suite == count && define_see_list == null)
        {
          // runner.run(t);
          runTestWithReport(testDir, objTest);
        }
        count++;
      }
    }
    return null;
  }

  private void runTestWithReport(File testDir, Object objTest)
  {
    try
    {
      Test test = (Test) objTest;
      XMLReport report = new XMLReport();
      TestResult tr = new TestResult();
      tr.addListener(new ReportResultListener(report, logService));
      tr.addListener(consolePrinter);

      long startTime = System.currentTimeMillis();

      test.run(tr);

      long endTime = System.currentTimeMillis();
      long runTime = endTime - startTime;
      consolePrinter.print(tr, runTime);

      report.generateReport(test, tr, testDir, bundleContext, null);

    }
    catch (Exception e)
    {
      System.out.println("error generating the test report: " + e);
    }
  }
}
