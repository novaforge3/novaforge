<?xml version="1.0" encoding="UTF-8"?>
<!--
  * Copyright (c) 2011-2015, BULL SAS, NovaForge Version 3 and above.
  *
  * This file is free software: you may redistribute and/or modify it under
  * the terms of the GNU Affero General Public License as published by the
  * Free Software Foundation, version 3 of the License.
  *
  * This file is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty
  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  * See the GNU Affero General Public License for more details.
  * You should have received a copy of the GNU Affero General Public License
  * along with this program. If not, see http://www.gnu.org/licenses.
  *
  * Additional permission under GNU AGPL version 3 (AGPL-3.0) section 7.
  *
  * If you modify this Program, or any covered work, by linking or combining
  * it with libraries listed in COPYRIGHT file at the top-level directory of
  * this distribution (or a modified version of that libraries), containing parts
  * covered by the terms of licenses cited in the COPYRIGHT file, the licensors
  * of this Program grant you additional permission to convey the resulting work.
  -->
<chapter version="5.0" xml:lang="fr" xmlns="http://docbook.org/ns/docbook"
    >
 <title>Utilisation de Jenkins et Nexus</title>
 <para>Le but de cette section est de pouvoir configurer les applications Maven et Jenkins afin de pouvoir déployer un artefact sur un dépôt Nexus à partir d'un job Jenkins.
 Nous allons créér un projet dans NovaForge, committer un projet Java Maven dans l'application SVN et configurer un job Jenkins afin de compiler les sources préalablement téléchargées et déployer l'artefact dans un dépôt Nexus.</para>
 <sect2>
    <title>Projet TestC</title>
    <para>Nous allons créér un projet nommé TestC ainsi que les applications suivantes :</para>
    <itemizedlist>
   <listitem>
      <para>sources<emphasis>(une application SVN)</emphasis></para>
   </listitem>
   <listitem>
      <para>jenkins<emphasis>(une application JENKINS)</emphasis></para>
   </listitem>
   <listitem>
      <para>nexus<emphasis>(une application NEXUS)</emphasis></para>
   </listitem>
   </itemizedlist>
</sect2>
<sect2>
   <title>Les sources : le projet Maven novaforge-dummy</title>
   <para> Le dépôt central Nexus, où on veut déployer les artefacts, il faut le spécifier dans le fichier de configuration Maven <emphasis> settings.xml </emphasis> :
	   <programlisting language="xml">
			<mirrors> 
			<!-- mirror 
			 | Specifies a repository mirror site to use instead of a given repository. The repository that 
			 | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used 
			 | for inheritance and direct lookup purposes, and must be unique across the set of mirrors. 
			 |--> 
				<mirror> 
				  <id>central</id> 
				  <mirrorOf>central</mirrorOf> 
				  <name>Nexus Novaforge3 Central</name> 
				  <url>https://novaforge.bull.com/nexus-default/nexus/content/repositories/central</url> 
				</mirror>   
			</mirrors>
	   </programlisting>
   </para>   
   <para>
	  Les dépôts release et snapshot sont créés autommatiquement par l'application Nexus. Pour contrôler le déploiement des artefacts dans le dépôt release et/ou snapshot, il faut editer le pom.xml du projet :
   </para>
   <programlisting language="xml">
  <project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	  <modelVersion>4.0.0</modelVersion>
	  <parent>
		<groupId>org.novaforge</groupId>
		<artifactId>parent</artifactId>
		<version>1.2</version>
	  </parent>
	  <groupId>org.novaforge.forge.dummy</groupId>
	  <artifactId>novaforge-dummy</artifactId>
	  <version>3.8.0</version>
	  <packaging>pom</packaging>
	  <name>NovaForge(tm) :: DUMMMY PROJECT</name>
	  <description>NovaForge(tm) Parent POM</description>
	  <properties>
		<novaforge.version>${project.version}</novaforge.version>
	  </properties>
	  <repositories>
		<repository>
		  <id>testc-release</id>
		  <name>TestC Repository Release</name>
		  <url>https://maforge/nexus-default/nexus/content/repositories/testc_nexus_release/</url>
		  <releases>
			<enabled>true</enabled>
		  </releases>
		  <snapshots>
			<enabled>false</enabled>
		  </snapshots>
		</repository>
		<repository>
		 <id>testc-snapshot</id>
		 <name>TestC Repository Snapshot</name>
		 <url>https://maforge/nexus-default/nexus/content/repositories/testc_nexus_snapshot/</url>
		 <releases>
			<enabled>false</enabled>
		  </releases>
		  <snapshots>
			<enabled>true</enabled>
		  </snapshots>
		</repository>
	  </repositories>
  </project>
  </programlisting>
    <para>Ce projet est commité sur le dépôt de notre application svn : <emphasis>https://maforge/svn-default/svn/testc_sources</emphasis></para>
  </sect2>  
  <sect2>
  	<title>Configuration du job jenkins testc_jenkins_default (job de type Maven)</title>
  	<para>Le prérequis est la configuration du JDK et de Maven dans Jenkins ainsi que l'utilisation d'un éventuel proxy dans Maven afin de télécharger des plugins sur les dépôts officiels Maven.
  	</para>
  <itemizedlist>
   <listitem>
      <para>Dans la partie Source Code Management, spécifier l'URL du dépôt SVN : <emphasis>https://maforge/svn-default/svn/testc_sources</emphasis>. Il est également nécessaire de donner à Jenkins les droits d'un utilisateur pour effectuer les opérations de lecture sur le dépôt. Le mot de passe de l'utilisateur est encrypté.</para>
   </listitem>
   <listitem>
      <para>Dans la partie build, préciser le path relatif du pom parent : testc_sources/novaforge-dummy/pom.xml ainsi que les goals Maven suivants : <emphasis>clean install deploy</emphasis></para>
   </listitem>
   </itemizedlist>
  </sect2>
  <sect2>
  <title>Utilisation du Password Encryption Maven : Configuration de Maven sur le système hébergeant Jenkins</title>
  <para>Pour pouvoir déployer l'artefact Maven issue du build du job ci-dessus, il faut donner les droits permettant au Maven piloté par Jenkins de s'authentifier au dépôts release et snapshot de Nexus.
Pour se faire, nous allons utiliser le chiffrement du mot de passe proposé par Maven 2.1.0+ <emphasis>(http://maven.apache.org/guides/mini/guide-encryption.html)</emphasis></para>
  <sect3>
  <title>Génération du mot de passe maître</title>
  <para>Nous sommes connectés en SSL sur le système hébergeant Jenkins et Maven avec l'utilisateur qui est propriétaire des processus Jenkins, à savoir dans notre cas : <emphasis>novaforge</emphasis>.</para>
  <para>
Nous tapons la commande suivante afin d'obtenir la clé chiffrée permettant à Maven de chiffrer/déchiffrer les autres mots de passe.
<programlisting language="shell">
[novaforge@maforge novaforge]$ $NOVA_HOME/engines/
	apache-maven-3.0.4/bin/mvn --encrypt-master-password mon-mot-de-passe
{6ScSJ9ODaQ4Hz/CoMyD+RUp6IYJz+UCKW9c2SmJRH8s=}
</programlisting>
</para>
<para>Cette clé chiffrée est copié ensuite dans le fichier <emphasis>$NOVA_HOME/datas/m2/settings-security.xml</emphasis>.
Maven recherche uniquement ce fichier dans le dossier .m2 du home de l'utilisateur, il faut donc créér le fichier ~novaforge/.m2/settings-security.xml par défaut avec le path du vrai fichier :

<programlisting language="xml">
<settingsSecurity>
  <relocation>$NOVA_HOME/datas/m2/settings-security.xml</relocation>
</settingsSecurity>
</programlisting>
</para>
<para>
Il est également possible de faire un lien symbolique : 
<programlisting language="shell">
[novaforge@maforge conf]$ln -s $NOVA_HOME/datas/m2/settings-security.xml 
	~novaforge/.m2/settings-security.xml
</programlisting>
</para>
  </sect3>
  <sect3>
  <title>Génération du mot de passe chiffré du responsable IC du projet : john.doe</title>
  <para>
  La personne responsable de l'intégration continue ne souhaitant pas laisser son mot de passe en clair dans la configuration de Maven sur le système hébergeant l'intégration continue, nous allons encrypter son mot de passe en tapant la commande suivante :
  <programlisting language="shell">
[novaforge@maforge .m2]$ $NOVA_HOME/engines/apache-maven-3.0.4/bin/mvn 
--encrypt-password le-mot-de-passe-de-john-doe
{OF0TrBqvPWwHoXmozZM3DIAgQhKv9Uplho2CJY2P/SE=}
</programlisting>
</para>
<para>
Ce mot de passe chiffré sera ensuite rajouté dans le fichier $NOVA_HOME/engines/apache-maven-3.0.4/conf/settings.xml dans la rubrique servers :
<programlisting language="xml">
<servers>
    <server>
      <id>testc-release</id>
      <username>john.doe</username>
      <password>{OF0TrBqvPWwHoXmozZM3DIAgQhKv9Uplho2CJY2P/SE=}</password>
    </server>

    <server>
      <id>testc-snapshot</id>
      <username>john.doe</username>
      <password>{OF0TrBqvPWwHoXmozZM3DIAgQhKv9Uplho2CJY2P/SE=}</password>
    </server>
</servers>
</programlisting>
  </para>
  <para>Par ce moyen, Maven va substituer le mot de passe chiffré par le mot de passe en clair lors du deploiement sur Nexus.</para>
  </sect3>
  </sect2>
  <sect2>
  <title>Déploiement sur le dépôt Nexus avec l'utilisateur anonyme. </title>
  <emphasis>Attention ! </emphasis>
  <para>cette solution n'est pas conseillée car elle permet de déployer n'importe quel artéfact sur le dépôt sans être authentifié !</para>
  <para>Elle nécessite de se connecter en Administrateur de la forge afin d'accéder à l'administration Nexus</para>
  <sect3>- Création du rôle "testc_nexus_snapshot (Anonymous)"
  <para>Ce rôle permet de lire, créer, modifier des artefacts dans le dépôt testc_nexus_snapshot</para>
  <para>- Aller dans le menu Security > Roles :</para>
  <para>- Ajouter un "New Nexus Role"</para>
  <itemizedlist>
   <listitem>
      <para>Role Id : testc_nexus_snapshot_anonymous</para>
   </listitem>
   <listitem>
      <para>Name : testc_nexus_snapshot_anonymous</para>
   </listitem>
   <listitem>
      <para>Description : Gives access to create/read/update All content of test_nexus_snaphsot repository</para>
   </listitem>   
   </itemizedlist>
   <para>- Ajouter les privilèges suivants (ces privilèges sont créés par défaut lors de la création de l'application Nexus par NovaForge) :</para>
     <itemizedlist>
   <listitem>
      <para>testc_nexus (snapshot)-(create)</para>
   </listitem>
   <listitem>
      <para>testc_nexus (snapshot)-(update)</para>
   </listitem>
   </itemizedlist>
    <figure>
    <title>Création du rôle "testc_nexus_snapshot (Anonymous)" </title>
    <mediaobject>
      <imageobject>
        <imagedata align="center" fileref="nexus_create_role.png"/>
      </imageobject>
    </mediaobject>
  </figure>
  </sect3>
  <sect3>
  <title>Modification des rôles de l'utilisateur anonyme</title>
  <para>- Supprimer les rôles existants et ajouter le rôle précédemment créé "testc_nexus_snapshot (Anonymous)"</para>
  <para>- Aller dans le menu Security > Users :</para>
  <para>- Sélectionner le user ID "anonymous" dans la liste.</para>
  <para>- Passer son status à "Active"</para>
  <para>- Modifier ses rôles afin de ne conserver que le rôle "testc_nexus_snapshot (Anonymous)"</para>
  <figure>
    <title>Modification des rôles de l'utilisateur anonyme</title>
    <mediaobject>
      <imageobject>
        <imagedata align="center" fileref="nexus_update_anonymous_user.png"/>
      </imageobject>
    </mediaobject>
  </figure>
  </sect3>
  <sect3>
  <title>Activation de l'authentification anonyme</title>
  <para>Par défaut, l'utilisation de l'utilisateur anonyme est désactivée.</para>
  <para>- Aller dans le menu Administration > Server</para>
  <para>- Cocher la case "Anonymous Access" et Sauvegarder</para>
  <figure>
    <title>Activation de l'authentification anonyme</title>
    <mediaobject>
      <imageobject>
        <imagedata align="center" fileref="nexus_activate_anonymous_user.png"/>
      </imageobject>
    </mediaobject>
  </figure>
  <para>Refaire le test en lançant le job jenkins en ayant pris soin de supprimer l'authentification Maven encryptée dans settings.xml</para>
  <para>En regardant les informations de l'artefact déployé : on voit que c'est l'utilisateur "anonymous" qui est responsable de l'upload</para>
  <para>La gestion de l'utilisateur anonyme permet de visualiser l'arborescence d'un dépôt et de télécharger un artefact via un navigateur sans modifier la configuration du SSO CAS.</para>
  <para>On peut imaginer pour la suite de créér par projet un dépôt accessible en lecture à l'utilisateur anonyme, en d'autres termes : un dépôt public.</para>
  </sect3>
  </sect2>
</chapter>
