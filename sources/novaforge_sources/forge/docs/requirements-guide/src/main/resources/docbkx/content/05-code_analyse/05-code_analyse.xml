<?xml version="1.0" encoding="UTF-8"?>
<!--
  * Copyright (c) 2011-2015, BULL SAS, NovaForge Version 3 and above.
  *
  * This file is free software: you may redistribute and/or modify it under
  * the terms of the GNU Affero General Public License as published by the
  * Free Software Foundation, version 3 of the License.
  *
  * This file is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty
  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  * See the GNU Affero General Public License for more details.
  * You should have received a copy of the GNU Affero General Public License
  * along with this program. If not, see http://www.gnu.org/licenses.
  *
  * Additional permission under GNU AGPL version 3 (AGPL-3.0) section 7.
  *
  * If you modify this Program, or any covered work, by linking or combining
  * it with libraries listed in COPYRIGHT file at the top-level directory of
  * this distribution (or a modified version of that libraries), containing parts
  * covered by the terms of licenses cited in the COPYRIGHT file, the licensors
  * of this Program grant you additional permission to convey the resulting work.
  -->
<chapter version="5.0" xml:lang="fr" xmlns="http://docbook.org/ns/docbook"
		>
	<title>Procédé d'analyse des sources</title>
	<para>Chaque projet peut mettre en place, de manière personnalisée, une façon de tracer les exigences dans son code source. Le procédé d'analyse des sources sera en phase avec la méthode choisie.</para>
	<para>Voici la méthodologie COSI utilisée par Safran</para>
	<sect2>
		<title>Traces des exigences dans le code</title>
		<para>Les exigences sont traçées dans les services sous la forme d'une annontation Java de type <emphasis>RUNTIME</emphasis>, appliquées sur les méthodes Java de la manière suivante : </para>
		<programlisting language="java">
@Requirement(value = { Requirement_Enum.REQ_NVF_FCT_360709, Requirement_Enum.REQ_NVF_FCT_360710,
    Requirement_Enum.REQ_NVF_FCT_362706 })
public void sayHello(final String pFirstname)
{
...
}
		</programlisting>
		<para>La classe de l'annotation est la suivante : </para>
		<programlisting language="java">
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
public @interface Requirement
{
  Requirement_Enum[] value();
}
		</programlisting>
		<para>Le type de l'annotation <emphasis>@Requirement</emphasis> est un tableau d'énumérations de type <emphasis>Requirement_Enum</emphasis></para>
		<para><emphasis>Requirement_Enum</emphasis> est la classe configurée dans le fichier <emphasis>requirements.svn.connector.cfg</emphasis> que nous avons décrit précédemment.
		</para>
		<para>La classe de l'énumération décrit les énumération de par leur nom, ici "NVF_FCT_360709", et leur version, ici "1" comme décrit dans cet extrait : </para>	
		<programlisting language="java">
public enum Requirement_Enum
{
  REQ_NVF_FCT_360709("NVF_FCT_360709", "1"),
  REQ_NVF_FCT_360710("NVF_FCT_360710", "1"),
  REQ_NVF_FCT_362706("NVF_FCT_362706", "1");

  /**
   * 
   */
  private Requirement_Enum(final String pId, final String pVersion)
  {
    ...
  }
}
		</programlisting>
		<para>Les arguments du constructeur de l'énumération sont : </para>	
			  <itemizedlist>
				<listitem>
					<para>
						<emphasis>Identifiant fonctionnel de l'exigence (ex : "NVF_FCT_362706")</emphasis>
					</para>
				</listitem>
				<listitem>
					<para>
						<emphasis>Version de l'exigence (ex : "1")</emphasis>
					</para>
				</listitem>				
			 </itemizedlist>
	</sect2>
	<sect2>
		<title>Recherche des occurrences des exigences dans le code</title>
		<para>Une première analyse est effectué afin de rechercher les expressions régulières autorisant les formes d'écritures suivantes :  </para>
		<programlisting language="java">
* @Requirement( Requirement_Enum.REQ_MY_REQ_ID1)
* @Requirement( value = Requirement_Enum.REQ_MY_REQ_ID1)
* @Requirement( value = { Requirement_Enum.REQ_MY_REQ_ID1 } )
* @Requirement( value = { Requirement_Enum.REQ_MY_REQ_ID1, Requirement_Enum.REQ_MY_REQ_ID2 })
   </programlisting>
   <para>Cette analyse est effectuée sur le <emphasis>chemin du code SVN</emphasis> configuré dans l'administration des exigences.</para>
   <para>Une seconde analyse est effectuée sur la classe de l'énumération afin de déduire l'identifiant fonctionnel associé à chaque occurrence. La version n'est pas prise en compte actuellement.</para>
	</sect2>
</chapter>