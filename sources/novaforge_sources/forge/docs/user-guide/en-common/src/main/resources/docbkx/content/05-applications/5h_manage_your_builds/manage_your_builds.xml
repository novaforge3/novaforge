<!--
 * Copyright (c) 2011-2015, BULL SAS, NovaForge Version 3 and above.
 *
 * This file is free software: you may redistribute and/or 
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation, version 3 of the License.
 *
 * This file is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see http://www.gnu.org/licenses.
 *
 * Additional permission under GNU AGPL version 3 (AGPL-3.0) section 7
 *
 * If you modify this Program, or any covered work,
 * by linking or combining it with libraries listed
 * in COPYRIGHT file at the top-level directof of this
 * distribution (or a modified version of that libraries),
 * containing parts covered by the terms of licenses cited
 * in the COPYRIGHT file, the licensors of this Program
 * grant you additional permission to convey the resulting work.
-->
<section
 xmlns="http://docbook.org/ns/docbook"
 xmlns:db="http://docbook.org/ns/docbook"
 xmlns:ns3="http://www.w3.org/1999/xhtml"
 xmlns:ns4="http://www.w3.org/1998/Math/MathML"
 xmlns:ns5="http://www.w3.org/2000/svg"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
 
 
  <title>Manage your builds</title>
  <para>The continuous integration tool integrated in the forge is open source tool Jenkins. It allows to manage the development process of your project in the forge, using continuous integration services. It interfaces with the management tool SVN and implements projects based on Apache Ant and Apache Maven as well as scripts shell in Unix or Windows batch.
   </para>
  <section>
    <title>Integration to NovaForge</title>
    <para>
    Adding application jenkins to your project automatically creates a job by default with the following name : <emphasis role="bold">[projectID]_[applicationID]_default</emphasis> 
     , where :

      <itemizedlist>
        <listitem>projectID, is your projectID in NovaForge</listitem>
        <listitem>applicationID,  is the name of your jenkins application  in the project</listitem>
      </itemizedlist>
    </para>

    <para>
  		<emphasis role="bold">Important : </emphasis>
      Since release 1.651.3 of Jenkins, the function "Configure Global Security", accessible to Forge administrator through the menu "Manage Jenkins", 
      allows to prevent CSRF (Cross Site Request Forgery) exploits.
      <emphasis role="bold">This option must be disabled</emphasis>, at the risk to damage Jenkins integration to the Forge (default job will not be created when adding Jenkins to a project for example).
    </para>
  </section>
  


<section>
		<title>New job creation in Jenkins</title>

		<para>


  </para>
  
   <section>
    <title>Copy of existing job</title>
   
A user of the project in jenkins (the operator or administrator role in jenkins) can create a new job in jenkins. 
Connected to the project in the forge, the user selects the application jenkins on the left menu of the project. 
Once the context of jenkins displayed, the user selects the link "New Job", and complete the following fields :
 <itemizedlist>

    <listitem>
      <para>the name of new job prefixed by "[projectID]_[applicationID]_", for the field "Job name"
</para>
    </listitem>
 <listitem>
      <para>the name of initial job, once you checked the option "copy of existing job"
</para>
    </listitem>
<listitem>
      <para>Validate (click "OK" button)
</para>
    </listitem>

 </itemizedlist>
 
<para>
The new job successfully created in Jenkins and project users 
are properly propagated for the new job. 
Select the job in the job list and click the "Configure" link. 
Information related to the new job are displayed, the table with the project's users and their rights in the application.
</para>
<figure>
  <title>New job configuration in Jenkins</title> 
 <mediaobject>
 <imageobject>
  <imagedata align="center" fileref="05-05h-01-JobCfgJenkins.png" width="450px" /> 
  </imageobject>
  </mediaobject>
  </figure>
 </section>
</section>


<section>
		<title>JDK configuration in Jenkins</title>
  <para>
	In order to install a new version of JDK, as administrator, you should use the option "Install automatically" from the menu :  Manage Jenkins/Configure System/JDK/JDK Installations/Add JDK, therefore 
you are able to chose a JDK version using "Install from java.sun.com" and agreeing to the Java SE Development Kit License Agreement.
  </para>  
<para>
The 3.7.0 release automatically deploys 2 versions of JDK (jdk1.7.0_80 and jdk1.8.0_112) in folders /<emphasis role="italic">InstallationDirectory</emphasis>/engines/java/jdk7 and jdk8.
For a 3.7.0 forge installed "from scratch", these 2 JDK are listed in Jenkins through the namings "JDK 1.7" and "JDK 1.8".
</para>
  <figure>
		<title>JDK Configuration in Jenkins</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-02-JDKCfgJenkins.png" width="450px" />
		</imageobject>
		</mediaobject>
	</figure>	
	<figure>
		<title>Preinstalled JDK in Jenkins</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-02-JDKDispoJenkins.png" width="450px" /> 
		</imageobject>
		</mediaobject>
	</figure>	
 </section>
 <section>
		<title>Maven management in Jenkins</title>
        There are 3 Maven versions: Maven 3.0.5, Maven 3.1.1, Maven 3.2.5. Using job's "Configure", you are able to choose the appropriate version. As administrator, 
you install and configure Maven in Jenkins by using the menu : Manage Jenkins/Configure System/Maven/Maven Installations/Add Maven. 
	<para>
	The 3.7.0 release automatically deploys the versions 3.0.5 of Maven in the forlder /<emphasis role="italic">InstallationDirectory</emphasis>/datas/jenkins/tools/hudson.tasks.Maven_MavenInstallation/apache-maven-3.0.5.
  For a 3.7.0 forge installed "from scratch", this version is listed in Jenkins through the naming "Maven 3.0.5".
    </para> 
  <para>
         The Maven setting file "settings.xml" is located in the directory : /<emphasis role="italic">InstallationDirectory</emphasis>/datas/jenkins/tools/hudson.tasks.Maven_MavenInstallation .
  </para>  
  <figure>
		<title>Maven Configuration in Jenkins</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-03-MavenCfgJenkins.png" width="450px" /> 
		</imageobject>
		</mediaobject>
	</figure>
	<figure>
		<title>Preinstalled Maven version in Jenkins</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-03-MavenDispoJenkins.png" width="450px" /> 
		</imageobject>
		</mediaobject>
	</figure>	
	<para>
	 The Maven execution options for a job are the following :  
         MAVEN_OPTS global : -Djavax.net.ssl.keyStore=/<emphasis role="italic">InstallationDirectory</emphasis>/system/crt/novaforge.jks -Djavax.net.ssl.trustStore=/datas/<emphasis role="italic">InstallationDirectory</emphasis>/system/crt/novaforge.jks  -Djavax.net.ssl.keyStorePassword=xxx -Djavax.net.ssl.trustStorePassword=xxx .
    </para>	
	<figure>
		<title>Maven execution options</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-04-OptionsMaven.png" width="450px" /> 
		</imageobject>
		</mediaobject>
	</figure>	
	The Maven repository is located in the directory :
	/<emphasis role="italic">InstallationDirectory</emphasis>/datas/jenkins/tools/hudson.tasks.Maven_MavenInstallation/repository. 
 </section> 
  
  <section>
		<title>Gitlab configuration </title>
	In order that Jenkins have access to the Gitlab repository, this access must be authorized. The location of the Gitlab repository must be also specified in Jenkins.	
	Thus we distinguish these steps in Gitlab configuration :
	<itemizedlist>

    <listitem>
      <para>access authorization to the Gitlab repository</para>
    </listitem>
	<listitem>
      <para>source code management in the jobs.</para>
    </listitem>
    </itemizedlist>	
	<section>
		<title>Access authorization to the Gitlab repository</title>
	The requirement for access authorization to Gitlab 	is the propagation of the public ssh key in Gitlab (see also the chapter "Manage your sources with Gitlab CE", the section "SSH Synchronization").
	<para>
	As administrator, the access authorization to the Gitlab repository is done by using the menu Credentials/Add Credentials, by adding the private ssh key of your workstation..
	</para>
	<figure>
		<title>Adding the ssh key in Jenkins</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-05-CredentialsEnJenkins.PNG" width="450px" /> 
		</imageobject>
		</mediaobject>
	</figure>
 </section>
 <section>
		<title>Gitlab Configuration in Jenkins</title>
		In order to configure Gitlab in Jenkins, first you must retrieve the Gitlab repository URL. The SSH URL can be retrieved from the "Project" section of Gitlab application.
	<figure>
		<title>Retrieving the Gitlab URL</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-06-RecuperationURLdeGitlab.png" width="450px" /> 
		</imageobject>
		</mediaobject>
	</figure>	
 
 
 </section>
 </section>
  <section>
		<title>Sonar Configuration in Jenkins</title>

	<para>
	The Sonar plugin is integrated in Jenkins. The plugin is "sonar-maven-plugin:2.6:sonar". The version 3.2 of this plugin is also working from the moment
  the JDK release specified for the Sonar Analysis is the 1.8 (See below).
	</para>
	<para> 
	To be able to launch a Sonar analysis attached to a job in Jenkins, a "post-build step" must be added : "SonarQube analysis with Maven", in the job "Configure".
	</para>
	<para>Sine the 3.7.0 release is embedded with the Sonar 5.6.3 release (built with JDK 1.8), it is mandatory to specify a JDK 1.8 version in the JDK Sonar setting. 
	</para>
	<figure>
		<title>Sonar Configuration in Jenkins</title> 
		<mediaobject>
		<imageobject>
			<imagedata align="center" fileref="05-05h-08-SonarAddJenkins.png" width="450px" /> 
		</imageobject>
		</mediaobject>
	</figure>	
 </section> 
  
  
  
</section>

  
  